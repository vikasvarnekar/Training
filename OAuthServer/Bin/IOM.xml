<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IOM</name>
    </assembly>
    <members>
        <member name="T:Aras.IOM.AuthenticatorBase">
            <summary>
            Base class for standard <see cref="T:Aras.IOM.IAuthenticator"/> implementations.
            </summary>
        </member>
        <member name="T:Aras.IOM.OAuth.ClientAssertion">
            <summary>
            Models client assertion for authorization server.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.ClientAssertion.#ctor(System.String,System.String)">
            <summary>
            Initializes an instance of <see cref="T:Aras.IOM.OAuth.ClientAssertion"/> class.
            </summary>
            <param name="type">The assertion type.</param>
            <param name="value">The assertion value.</param>
        </member>
        <member name="P:Aras.IOM.OAuth.ClientAssertion.Type">
            <summary>
            Gets the assertion type.
            </summary>
            <returns>The assersion type.</returns>
        </member>
        <member name="P:Aras.IOM.OAuth.ClientAssertion.Value">
            <summary>
            Gets the assertion value.
            </summary>
            <returns>The assersion value.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.AuthenticatorExtensions">
            <summary>
            Extensions to make non-blocking synchronous calls on <see cref="T:Aras.IOM.IAuthenticator"/> methods.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.AuthenticatorExtensions.Login(Aras.IOM.IAuthenticator)">
            <summary>
            Makes non-blocking synchronous <see cref="M:Aras.IOM.IAuthenticator.LoginAsync(System.Threading.CancellationToken)"/> call.
            </summary>
            <param name="authenticator"></param>
        </member>
        <member name="M:Aras.IOM.OAuth.AuthenticatorExtensions.Logout(Aras.IOM.IAuthenticator)">
            <summary>
            Makes non-blocking synchronous <see cref="M:Aras.IOM.IAuthenticator.LogoutAsync(System.Threading.CancellationToken)"/> call.
            </summary>
        </member>
        <member name="T:Aras.IOM.OAuth.IClientAssertionProvider">
            <summary>
            Provides assertion of jwt-bearer type for authorization server.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.IClientAssertionProvider.GetClientAssertionAsync">
            <summary>
            Provides client assertion of jwt-bearer type.
            </summary>
            <returns>The client assertion.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.JwtBearerClientAssertionProvider">
            <summary>
            Provides assertion of jwt-bearer type for authorization server.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.JwtBearerClientAssertionProvider.#ctor(Aras.IOM.OAuth.JwtBearerClientAssertionProviderOptions)">
            <summary>
            Initializes an instance of <see cref="T:Aras.IOM.OAuth.JwtBearerClientAssertionProviderOptions"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:Aras.IOM.OAuth.JwtBearerClientAssertionProvider.GetClientAssertionAsync">
            <summary>
            Provides client assertion of jwt-bearer type.
            </summary>
            <returns>The client assertion.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.JwtBearerClientAssertionProviderOptions">
            <summary>
            Options for <see cref="T:Aras.IOM.OAuth.JwtBearerClientAssertionProvider"/>.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.JwtBearerClientAssertionProviderOptions.ClientId">
            <summary>
            Gets or sets the client id.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.JwtBearerClientAssertionProviderOptions.Audience">
            <summary>
            Gets or sets the audience for which assertion will be used.
            For assertion token Audience is authorization server because it is recipient of client assertion.
            The value should be initialized based on <see cref="P:Aras.IOM.OAuth.DiscoveryDocument.Issuer"/> property.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.JwtBearerClientAssertionProviderOptions.Certificate">
            <summary>
            Gets or sets the client's private certificate.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.JwtBearerClientAssertionProviderOptions.AssertionTokenLifetime">
            <summary>
            Gets or sets the assertion token lifetime. Default value is 300 seconds.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.CacheableDiscoveryDocumentProvider.GetDiscoveryDocumentAsync(System.Threading.CancellationToken)">
            <summary>
            Get discovery document.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Discovery document.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.IDiscoveryDocumentProvider">
            <summary>
            Interface to get discovery document from authorization server.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.IDiscoveryDocumentProvider.GetDiscoveryDocumentAsync(System.Threading.CancellationToken)">
            <summary>
            Get discovery document.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The discovery document.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.DiscoveryDocument">
            <summary>
            Describes discovery configuration of authorization server.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.DiscoveryDocument.#ctor(System.String)">
            <summary>
            Initializes an instance of <see cref="T:Aras.IOM.OAuth.DiscoveryDocument"/> class.
            </summary>
            <param name="json">The discovery endpoint response as string.</param>
        </member>
        <member name="P:Aras.IOM.OAuth.DiscoveryDocument.Issuer">
            <summary>
            Gets the issuer.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.DiscoveryDocument.JwksUri">
            <summary>
            Gets the json web key set uri.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.DiscoveryDocument.AuthorizeEndpoint">
            <summary>
            Gets the authorize endpoint uri.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.DiscoveryDocument.TokenEndpoint">
            <summary>
            Gets the token endpoint uri.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.DiscoveryDocument.EndSessionEndpoint">
            <summary>
            Gets the end session endpoint uri.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.DiscoveryDocument.ProtocolVersion">
            <summary>
            Gets the protocol version of authorization server.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.DiscoveryDocument.ProtocolInfo">
            <summary>
            Gets the protocol info.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.DiscoveryDocument.ProtocolType">
            <summary>
            Gets the protocol type.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.DiscoveryDocument.KeySetJson">
            <summary>
            Gets the key set json.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.DiscoveryDocument.TryGetString(System.String)">
            <summary>
            Tries to get a string value from discovery document by name.
            </summary>
            <param name="name">The name.</param>
            <returns>String if a value was successfully retrieved; otherwise, null.</returns>
        </member>
        <member name="M:Aras.IOM.OAuth.DiscoveryDocument.TryGetBoolean(System.String)">
            <summary>
            Tries to get a boolean value from discovery document by name.
            </summary>
            <param name="name">The name.</param>
            <returns>True if a value was successfully retrieved; otherwise, false.</returns>
        </member>
        <member name="M:Aras.IOM.OAuth.DiscoveryDocument.TryGetStringArray(System.String)">
            <summary>
            Tries to get a string array value from discovery document by name.
            </summary>
            <param name="name">The name.</param>
            <returns>String array if a value was successfully retrieved; otherwise, null.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.DiscoveryDocumentProvider">
            <summary>
            Default implementation of <see cref="T:Aras.IOM.OAuth.IDiscoveryDocumentProvider"/>.
            It requires authorization server urls from Innovator server and
            returns discovery document from the accessible one.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.DiscoveryDocumentProvider.#ctor(System.String)">
            <summary>
            Initializes an instance of <see cref="T:Aras.IOM.OAuth.DiscoveryDocumentProvider"/> class.
            </summary>
            <param name="innovatorServerUrl">The Innovator server url.</param>
        </member>
        <member name="M:Aras.IOM.OAuth.DiscoveryDocumentProvider.GetDiscoveryDocumentAsync(System.Threading.CancellationToken)">
            <summary>
            Get discovery document.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The discovery document.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.ProtocolInfo">
            <summary>
            Contains information about authorization protocol.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.ProtocolInfo.ProtocolType">
            <summary>
            Gets protocol type information.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.ProtocolInfo.AuthorizationHeader">
            <summary>
            Gets Authorization header name.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.ProtocolInfo.WwwAuthenticateHeader">
            <summary>
            Gets WWW-Authenticate header name.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.ProtocolInfo.UnauthorizedStatusCode">
            <summary>
            Gets Unauthorized status code.
            </summary>
        </member>
        <member name="T:Aras.IOM.OAuth.ProtocolType">
            <summary>
            ProtocolType is used to distinguish between standard and custom headers.
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.ProtocolType.Standard">
            <summary>
            Standard headers.
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.ProtocolType.Custom">
            <summary>
            Custom headers are necessary to support Windows authentification.
            </summary>
        </member>
        <member name="T:Aras.IOM.OAuth.AuthorizationFlowTokenProvider">
            <summary>
            Implementation of <see cref="T:Aras.IOM.OAuth.ITokenProvider"/> for OAuth 2.0 authorization flow.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.AuthorizationFlowTokenProvider.#ctor(Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions)">
            <summary>
            Initializes an instance of <see cref="T:Aras.IOM.OAuth.AuthorizationFlowTokenProvider"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:Aras.IOM.OAuth.AuthorizationFlowTokenProvider.LoginAsync(System.Threading.CancellationToken)">
            <summary>
            Starts the session with authorization server.
            The method is <see cref="T:System.Threading.SynchronizationContext"/> aware.
            Do not use blocking method calls (e.g. <see cref="M:System.Threading.Tasks.Task.Wait"/>) in .NET GUI applications main thread.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Aras.IOM.OAuth.AuthorizationFlowTokenProvider.LogoutAsync(System.Threading.CancellationToken)">
            <summary>
            Ends the session with authorization server.
            The method is <see cref="T:System.Threading.SynchronizationContext"/> aware.
            Do not use blocking method calls (e.g. <see cref="M:System.Threading.Tasks.Task.Wait"/>) in .NET GUI applications main thread.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Aras.IOM.OAuth.AuthorizationFlowTokenProvider.GetAccessTokenAsync(System.Threading.CancellationToken)">
            <summary>
            Get access token.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            The method is <see cref="T:System.Threading.SynchronizationContext"/> aware.
            Do not use blocking method calls (e.g. <see cref="P:System.Threading.Tasks.Task`1.Result"/>) in .NET GUI applications main thread.
            <returns>The access token.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions">
            <summary>
            Options for token providers based on authorization flow.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions.#ctor">
            <summary>
            Initializes an instance of <see cref="T:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions"/> class.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions.DiscoveryDocument">
            <summary>
            Gets or sets the discovery document.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions.GrantType">
            <summary>
            Gets or sets the grant type (defaults to AuthorizationCode).
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions.ClientId">
            <summary>
            Gets or sets the client id.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions.RedirectUri">
            <summary>
            Gets or sets the redirect uri.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions.Scope">
            <summary>
            Gets or sets the scope (defaults to Innovator).
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions.Database">
            <summary>
            Gets or sets the database.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions.AuthenticationType">
            <summary>
            Gets or sets the authentication type.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions.ResponseMode">
            <summary>
            Gets or sets the response mode (defaults to Query).
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions.Navigator">
            <summary>
            Gets or sets the navigator.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions.Prompt">
            <summary>
            Gets or sets prompt value.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions.NavigatorSynchronizationContext">
            <summary>
            Gets or sets the <see cref="T:System.Threading.SynchronizationContext"/> implementation
            for <see cref="M:Aras.IOM.OAuth.INavigator.NavigateAsync(Aras.IOM.OAuth.NavigationOptions)"/> invocation of <see cref="P:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions.Navigator"/>.
            Defaults to <see cref="P:System.Threading.SynchronizationContext.Current"/>.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions.CodeVerifierGenerator">
            <summary>
            Gets or sets the generator of code verifier.
            If not set, default <see cref="T:Aras.IOM.OAuth.CodeVerifierGenerator"/> is used.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.AuthorizationFlowTokenProviderOptions.BackChannelClient">
            <summary>
            Gets or sets the Http client used for back-channel communication.
            </summary>
        </member>
        <member name="T:Aras.IOM.OAuth.CodeVerifierGenerator">
            <summary>
            Generates code verifier.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.CodeVerifierGenerator.CodeLength">
            <summary>
            Gets or sets the code length which should be a positive even number.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.CodeVerifierGenerator.GenerateCodeVerifierAsync">
            <summary>
            Returns new code verifier with length equal to <see cref="P:Aras.IOM.OAuth.CodeVerifierGenerator.CodeLength" />.
            </summary>
            <returns>The code verifier.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.GrantType">
            <summary>
            The grant type.
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.GrantType.AuthorizationCode">
            <summary>
            Authorization code grant type.
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.GrantType.Hybrid">
            <summary>
            Hybrid grant type.
            </summary>
        </member>
        <member name="T:Aras.IOM.OAuth.ICodeVerifierGenerator">
            <summary>
            Interface to generate each time new code verifier.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.ICodeVerifierGenerator.GenerateCodeVerifierAsync">
            <summary>
            Returns new code verifier.
            </summary>
            <returns>The code verifier.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.HttpClientNavigator">
            <summary>
            Navigator that processes navigation with <see cref="T:System.Net.Http.HttpClient"/> and does not support user interactions.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.HttpClientNavigator.MaxRedirectsCount">
            <summary>
            Gets or sets the max allowed redirects (default to 10).
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.HttpClientNavigator.#ctor">
            <summary>
            Initializes an instance of <see cref="T:Aras.IOM.OAuth.HttpClientNavigator"/> class.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.HttpClientNavigator.NavigateAsync(Aras.IOM.OAuth.NavigationOptions)">
            <summary>
            Navigates starting from options.StartUrl while get redirect to options.EndUrl.
            </summary>
            <param name="options">The options.</param>
            <returns>The navigation results</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.INavigator">
            <summary>
            Interface to processing url navigation.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.INavigator.NavigateAsync(Aras.IOM.OAuth.NavigationOptions)">
            <summary>
            Navigates starting from <see cref="P:Aras.IOM.OAuth.NavigationOptions.StartUrl"/> while get redirect to <see cref="P:Aras.IOM.OAuth.NavigationOptions.EndUrl"/>.
            </summary>
            <param name="options">The options.</param>
            <returns>The navigation result.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.NavigationOptions">
            <summary>
            Options for the navigation.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.NavigationOptions.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aras.IOM.OAuth.NavigationOptions"/> class.
            </summary>
            <param name="startUrl">The start url.</param>
            <param name="endUrl">The end url.</param>
        </member>
        <member name="P:Aras.IOM.OAuth.NavigationOptions.StartUrl">
            <summary>
            Gets the start url.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.NavigationOptions.EndUrl">
            <summary>
            Gets the end url.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.NavigationOptions.ResponseMode">
            <summary>
            Gets or sets the OpenID Connect response mode.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.NavigationOptions.CancellationToken">
            <summary>
            The cancellation token to cancel navigation operation.
            </summary>
        </member>
        <member name="T:Aras.IOM.OAuth.NavigationResult">
            <summary>
            The result of navigation.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.NavigationResult.#ctor">
            <summary>
            Initializes an instance of <see cref="T:Aras.IOM.OAuth.NavigationResult" /> class with empty result parameters.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.NavigationResult.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes an instance of <see cref="T:Aras.IOM.OAuth.NavigationResult"/>.
            </summary>
            <param name="parameters">The navigation result parameters.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="parameters" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:Aras.IOM.OAuth.NavigationResult.Parameters">
            <summary>
            Gets the navigation result parameters.
            </summary>
        </member>
        <member name="T:Aras.IOM.OAuth.PromptMode">
            <summary>
            The prompt modes.
            More info about prompt https://openid.net/specs/openid-connect-core-1_0.html
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.PromptMode.Undefined">
            <summary>
            Prompt will not be sent to the Authorization Server.
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.PromptMode.None">
            <summary>
            The Authorization Server must not display any authentication or consent user interface pages. End-User must be already authenticated.
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.PromptMode.Login">
            <summary>
            The Authorization Server should prompt the End-User for re-authentication.
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.PromptMode.SelectAccount">
            <summary>
            The Authorization Server should prompt the End-User to select a user account.
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.PromptMode.Silent">
            <summary>
            The Authorization Server must silently authenticate End-User if authentication type supports this.
            </summary>
        </member>
        <member name="T:Aras.IOM.OAuth.ResponseMode">
            <summary>
            The response mode.
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.ResponseMode.FormPost">
            <summary>
            Form post response mode.
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.ResponseMode.Query">
            <summary>
            Query response mode.
            </summary>
        </member>
        <member name="T:Aras.IOM.OAuth.WindowsTokenProvider">
            <summary>
            Implementation of <see cref="T:Aras.IOM.OAuth.ITokenProvider"/> for implicit authentication via Windows provider.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.WindowsTokenProvider.#ctor(Aras.IOM.OAuth.WindowsTokenProviderOptions)">
            <summary>
            Initializes an instance of <see cref="T:Aras.IOM.OAuth.WindowsTokenProvider"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:Aras.IOM.OAuth.WindowsTokenProvider.GetAccessTokenAsync(System.Threading.CancellationToken)">
            <summary>
            Get access token.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The access token.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.WindowsTokenProviderOptions">
            <summary>
            Options for <see cref="T:Aras.IOM.OAuth.WindowsTokenProvider"/>.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.WindowsTokenProviderOptions.DiscoveryDocument">
            <summary>
            Gets or sets the discovery document.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.WindowsTokenProviderOptions.ClientId">
            <summary>
            Gets or sets the client id.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.WindowsTokenProviderOptions.RedirectUri">
            <summary>
            Gets or sets the redirect uri.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.WindowsTokenProviderOptions.Scope">
            <summary>
            Gets or sets the scope.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.WindowsTokenProviderOptions.Database">
            <summary>
            Gets or sets the database.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.WindowsTokenProviderOptions.AuthenticationType">
            <summary>
            Gets or sets the authentication type.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.WindowsTokenProviderOptions.MaxRedirectsCount">
            <summary>
            Gets or sets the max allowed redirects. Default value is 10.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.WindowsTokenProviderOptions.CodeVerifierGenerator">
            <summary>
            Gets or sets the generator of code verifier.
            If not set, default <see cref="T:Aras.IOM.OAuth.CodeVerifierGenerator"/> is used.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.WindowsTokenProviderOptions.BackChannelClient">
            <summary>
            Gets or sets the client used for back-channel communication.
            </summary>
        </member>
        <member name="T:Aras.IOM.OAuth.InternalTokenProvider">
            <summary>
            Class contains base information for token providers.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.InternalTokenProvider.#ctor(Aras.IOM.OAuth.TokenProviderOptions,System.Func{System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.Tasks.Task})">
            <summary>
            Checks and initializes base options for TokenProviders.
            </summary>
            <param name="options">The base options.</param>
            <param name="configureParameters">Grant type parameters configuration action.</param>
        </member>
        <member name="M:Aras.IOM.OAuth.InternalTokenProvider.GetAccessTokenAsync(System.Threading.CancellationToken)">
            <summary>
            Get access token.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The access token.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.ImpersonateTokenProvider">
            <summary>
            Implementation of impersonate <see cref="T:Aras.IOM.OAuth.ITokenProvider"/>.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.ImpersonateTokenProvider.#ctor(Aras.IOM.OAuth.ImpersonateTokenProviderOptions)">
            <summary>
            Initializes an instance of <see cref="T:Aras.IOM.OAuth.ImpersonateTokenProvider"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:Aras.IOM.OAuth.ImpersonateTokenProvider.GetAccessTokenAsync(System.Threading.CancellationToken)">
            <summary>
            Get access token.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The access token.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.ImpersonateTokenProviderOptions">
            <summary>
            Options for <see cref="T:Aras.IOM.OAuth.ImpersonateTokenProvider"/>.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.ImpersonateTokenProviderOptions.#ctor">
            <summary>
            Initializes an instance of <see cref="T:Aras.IOM.OAuth.ImpersonateTokenProviderOptions"/> class.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.ImpersonateTokenProviderOptions.ClientAssertionProvider">
            <summary>
            Gets or sets the client assertion provider.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.ImpersonateTokenProviderOptions.Scope">
            <summary>
            Gets or sets the scope.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.ImpersonateTokenProviderOptions.Database">
            <summary>
            Gets or sets the database.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.ImpersonateTokenProviderOptions.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="T:Aras.IOM.OAuth.ITokenProvider">
            <summary>
            Interface to get access token from authorization server.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.ITokenProvider.GetAccessTokenAsync(System.Threading.CancellationToken)">
            <summary>
            Get access token.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The access token.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.ITokenProviderExtensions">
            <summary>
            Interface to get access token from authorization server.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.ITokenProviderExtensions.GetAccessToken(Aras.IOM.OAuth.ITokenProvider)">
            <summary>
            Get access token synchronously.
            </summary>
            <returns>The access token.</returns>
        </member>
        <member name="M:Aras.IOM.OAuth.ITokenProviderFactory.CreateImpersonateTokenProvider(System.String,System.String,System.String)">
            <summary>
            Get instance of ImpersonateTokenProvider
            </summary>
            <returns>Instance of ImpersonateTokenProvider</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.ITokenProviderSession">
            <summary>
            Interface to start and end authorization server session.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.ITokenProviderSession.LoginAsync(System.Threading.CancellationToken)">
            <summary>
            Starts authorization server session.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used to receive notice of cancellation.</param>
        </member>
        <member name="M:Aras.IOM.OAuth.ITokenProviderSession.LogoutAsync(System.Threading.CancellationToken)">
            <summary>
            Ends authorization server session.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used to receive notice of cancellation.</param>
        </member>
        <member name="T:Aras.IOM.OAuth.PasswordTokenProvider">
            <summary>
            Implementation of password <see cref="T:Aras.IOM.OAuth.ITokenProvider"/>.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.PasswordTokenProvider.#ctor(Aras.IOM.OAuth.PasswordTokenProviderOptions)">
            <summary>
            Initializes an instance of <see cref="T:Aras.IOM.OAuth.PasswordTokenProvider"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:Aras.IOM.OAuth.PasswordTokenProvider.GetAccessTokenAsync(System.Threading.CancellationToken)">
            <summary>
            Get access token.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The access token.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.PasswordTokenProviderOptions">
            <summary>
            Options for <see cref="T:Aras.IOM.OAuth.PasswordTokenProvider"/>.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.PasswordTokenProviderOptions.#ctor">
            <summary>
            Initializes an instance of <see cref="T:Aras.IOM.OAuth.PasswordTokenProviderOptions"/> class.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.PasswordTokenProviderOptions.ClientId">
            <summary>
            Gets or sets the client id.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.PasswordTokenProviderOptions.Scope">
            <summary>
            Gets or sets the scope.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.PasswordTokenProviderOptions.Database">
            <summary>
            Gets or sets the database.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.PasswordTokenProviderOptions.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.PasswordTokenProviderOptions.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="T:Aras.IOM.OAuth.PersistentTokenProvider">
            <summary>
            Implementation of persistent ITokenProvider.
            It always returns the token with which it was created.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.PersistentTokenProvider.GetAccessTokenAsync(System.Threading.CancellationToken)">
            <summary>
            Get access token.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The access token.</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.ResponseErrorType">
            <summary>
            The reasons for a protocol endpoint error.
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.ResponseErrorType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.ResponseErrorType.Protocol">
            <summary>
            Valid response, but some protocol level error.
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.ResponseErrorType.Http">
            <summary>
            HTTP error - e.g. 404.
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.ResponseErrorType.Exception">
            <summary>
            Exception while connecting to the endpoint, e.g. TLS problems.
            </summary>
        </member>
        <member name="F:Aras.IOM.OAuth.ResponseErrorType.PolicyViolation">
            <summary>
            Configured policy was violated.
            </summary>
        </member>
        <member name="T:Aras.IOM.OAuth.TokenProviderFactory">
            <summary>
            Class factory to get ITokenProvider
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.TokenProviderFactory.CreateImpersonateTokenProvider(System.String,System.String,System.String)">
            <summary>
            Get instance of ImpersonateTokenProvider
            </summary>
            <returns>Instance of ImpersonateTokenProvider</returns>
        </member>
        <member name="T:Aras.IOM.OAuth.TokenProviderOptions">
            <summary>
            Options for <see cref="T:Aras.IOM.OAuth.InternalTokenProvider"/>.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.TokenProviderOptions.TokenEndpoint">
            <summary>
            Gets or sets the token endpoint.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.TokenProviderOptions.GrantType">
            <summary>
            Gets the grant type.
            </summary>
        </member>
        <member name="P:Aras.IOM.OAuth.TokenProviderOptions.TokenEndpointClient">
            <summary>
            Gets or sets the client for token endpoint.
            </summary>
        </member>
        <member name="T:Aras.IOM.OAuth.TokenResponseExtensions">
            <summary>
            Class contains extension methods for <see cref="T:Aras.IOM.OAuth.TokenResponse"/> class.
            </summary>
        </member>
        <member name="M:Aras.IOM.OAuth.TokenResponseExtensions.Validate(Aras.IOM.OAuth.TokenResponse)">
            <summary>
            Method for validation <see cref="T:Aras.IOM.OAuth.TokenResponse"/> and throwing exception if error.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="T:Aras.IOM.LazyAuthenticator">
            <summary>
            LazyAuthenticator creates an authenticator on demand.
            Authentication requests should be sent on login
            to preserve the current HttpServerConnection logic.
            </summary>
        </member>
        <member name="T:Aras.IOM.Base64Url">
            <summary>
            Base64URL encoding is introduced to have portable version of the algorithm for all IOM versions.
            The implementation is the same as in Microsoft.IdentityModel.Tokens.Base64UrlEncoder and IdentityMidel.Base64Url classes.
            </summary>
        </member>
        <member name="T:Aras.IOM.HttpConnectionParameters">
             <summary>
            
             </summary>
        </member>
        <member name="F:Aras.IOM.HttpConnectionParameters.ForceWritableSession">
             <summary>
            
             </summary>
        </member>
        <member name="T:Aras.IOM.AuthenticatedRequestSender">
            <summary>
            This class will send requests, authorized with authenticator.
            If server will return Unauthorized, AuthenticatedRequestSender will reauthorize
            request and try to send one more time.
            </summary>
        </member>
        <member name="M:Aras.IOM.AuthenticatedRequestSender.GetResponse(System.Func{System.Net.HttpWebRequest},System.Action{System.IO.Stream})">
            <inheritdoc />
        </member>
        <member name="M:Aras.IOM.AuthenticatedRequestSender.GetResponseAsync(System.Func{System.Net.HttpWebRequest},System.Func{System.IO.Stream,System.Threading.Tasks.Task})">
            <inheritdoc />
        </member>
        <member name="M:Aras.IOM.RequestSender.GetResponse(System.Func{System.Net.HttpWebRequest})">
            <summary>
            Returns response to an internet request as a sync operation.
            Do not use it when you try to write request body - synchronous
            GetRequestStream() call sends request and some additional logic
            may not be executed.
            </summary>
            <param name="createRequest">Function that generates request.</param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.RequestSender.GetResponse(System.Func{System.Net.HttpWebRequest},System.Action{System.IO.Stream})">
            <summary>
            Returns response to an internet request as a sync operation
            </summary>
            <param name="createRequest">Function that generates request.</param>
            <param name="requestStreamCallback">Function that fills request body stream. Should not be set if
            it is GET response, because it has no body.</param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.RequestSender.GetResponseAsync(System.Func{System.Net.HttpWebRequest},System.Func{System.IO.Stream,System.Threading.Tasks.Task})">
            <summary>
            Returns response to an internet request as an async operation
            </summary>
            <param name="createRequest">Function that generates request.</param>
            <param name="requestStreamCallback">Function that fills request body stream. Should not be set if
            it is GET response, because it has no body.</param>
            <returns></returns>
        </member>
        <member name="T:Aras.IOM.HttpRequestHeaderBehavior">
            <summary>
            HTTP request message inspector behavior. Add HttpRequestHeaderInspector instance into client.
            </summary>
        </member>
        <member name="M:Aras.IOM.HttpRequestHeaderBehavior.#ctor(System.Action{System.ServiceModel.Channels.HttpRequestMessageProperty})">
            <summary>
            Ctor
            </summary>
            <param name="requestInspectorMethod"></param>
        </member>
        <member name="T:Aras.IOM.HttpRequestHeaderInspector">
            <summary>
            HTTP request message inspector. Inspects/changes outgoing request header.
            </summary>
        </member>
        <member name="M:Aras.IOM.HttpRequestHeaderInspector.#ctor(System.Action{System.ServiceModel.Channels.HttpRequestMessageProperty})">
            <summary>
            Ctor
            </summary>
            <param name="requestInspectorMethod"></param>
            <exception cref="T:System.ArgumentNullException">Thrown when parameter requestInspectorMethod is null</exception>
        </member>
        <member name="T:Aras.IOM.I18NSessionContext">
            <summary>
            The class represents an internationalization context of a client session. Every client of any type (e.g. standard Innovator client;
            standalone .NET client; etc.) has an instance of the class associated with each of its sessions. The context defines what
            locale, time zone, etc. are used by the session; this affects what kind of data is returned from the server and how the locale
            sensitive data (date, float, etc.) is formatted. The class also provides methods for converting from a locale specific formats
            of the session to neutral formats that are used in AML for sending\receiving data to\from Innovator server. In order to correctly
            build or interpret an AML it's important to remember the following:
            <list type="bullet">
            <item>
            Locale sensitive types ( 'date' | 'float' | 'decimal' ) must be always presented in AML in neutral format
            </item>
            <item>
            Dates must be always presented in AML in the time zone of the session
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Aras.IOM.I18NSessionContext.ConvertToNeutral(System.String,System.String,System.String)">
            <summary>
            Convert <c>svalue</c> that is a string representation of value of type <c>vtype</c> into the neutral format. It is assumed
            that <c>svalue</c> has a format that is a valid format for the session locale.
            </summary>
            <remarks>
            Note that in case <c>vtype='date'</c> and <c>svalue</c> contails time zone offset (e.g. "2008-10-22T16:20:00-0500") the
            <c>svalue</c> represents a concrete
            moment of time which is different from the case when <c>svalue</c> doesn't have an offset (e.g. "2008-10-22T16:20:00")
            because "no offset" value can be interpreted as different moments of time depending of the time zone in which the value
            is processed. If <c>svalue</c> doesn't have an offset it's interpreted as the date-time in the time zone of the session.
            If <c>svalue</c> has an offset (i.e. it represents a concrete moment of time) it's represented as the same moment of time
            in the time zone of the session. For instance, if time zone of the session is "Eastern Standard Time" and <c>svalue</c>
            is "2008-12-25T18:25:00+0100" then the methods returns "2008-12-25T12:25:00".
            </remarks>
            <param name="svalue">
            Locale specific string representation of a value that has to be converted.
            </param>
            <param name="vtype">
            Type of the value; only the following types are considered to be locale specific - 'date' | 'float' | 'decimal'
            </param>
            <param name="datePtrn">
            The parameter is taken into consideration only if <c>vtype='date'</c>. In this case user can specify the exact format
            that is used in the string representation of a date in <c>svalue</c>. In case <c>vtype='date'</c> but the parameter is not specified
            or passed as <c>null</c> or empty string then an attempt is made to parse the <c>svalue</c> assuming that it has a valid format
            for the session locale.
            </param>
            <returns>
            </returns>
            <exception cref="T:System.FormatException"><c>svalue</c> does not contain a valid string representation of the type defined by the <c>vtype</c></exception>
        </member>
        <member name="M:Aras.IOM.I18NSessionContext.ConvertFromNeutral(System.String,System.String,System.String)">
            <summary>
            Converts from neutral format into the format specific for the session locale.
            </summary>
            <param name="svalue">
            Locale specific string representation of a value that has to be converted.
            </param>
            <param name="vtype">
            Type of the value; only the following types are considered to be locale specific - 'date' | 'float' | 'decimal'
            </param>
            <param name="datePtrn">
            The parameter is taken into consideration only if <c>vtype='date'</c>. In this case the parameter can have one the following
            values:
            <list type="bullet">
            <item>short_date</item>
            <item>long_date</item>
            <item>short_date_time</item>
            <item>long_date_time</item>
            <item>short_time</item>
            <item>long_time</item>
            </list>
            </param>
            <returns>
            Locale specific string representation of the <c>svalue</c>.
            </returns>
            <exception cref="T:System.FormatException"><c>svalue</c> does not contain a valid string representation of the type defined by the <c>vtype</c></exception>
        </member>
        <member name="M:Aras.IOM.I18NSessionContext.ConvertUtcDateTimeToNeutral(System.String,System.String)">
            <summary>
            Converts <c>utcStr</c> date to string representing the same moment of time in the time zone of the session in neutral format.
            </summary>
            <param name="utcStr">If <c>utcStr</c> doesn't have an offset it's interpreted as UTC date/time; i.e. as it would have offset +0000. If the parameter has an offset then it's interpreted as the exact moment of time that is specified by the parameter.</param>
            <param name="inPattern">Invariant culture date time format.</param>
            <returns>The convertation result.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">No time zones with name=the session time zone name found</exception>
            <exception cref="T:System.FormatException"><c>utcStr</c> does not contain a valid string representation of the type defined by the <c>inPattern</c></exception>
            <exception cref="T:System.NotSupportedException">The method is running on not supported platform</exception>
        </member>
        <member name="M:Aras.IOM.I18NSessionContext.ConvertNeutralToUtcDateTime(System.String,System.String)">
            <summary>
            Converts a date-time in the time zone of the session in neutral format to a string that represents the same moment of time in UTC.
            </summary>
            <param name="neutralStr">A string that represent a date-time in the time zone of the session in neutral format.</param>
            <param name="outPattern">Invariant culture date time format.</param>
            <returns>The convertation result.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">No time zones with name=the session time zone name found</exception>
            <exception cref="T:System.FormatException"><c>inPattern</c> supposes time offset</exception>
            <exception cref="T:System.FormatException"><c>neutralStr</c> is not in neutral format</exception>
            <exception cref="T:System.NotSupportedException">The method is running on not supported platform</exception>
        </member>
        <member name="M:Aras.IOM.I18NSessionContext.GetLocale">
            <summary>
            Returns locale of the current session.
            </summary>
            <returns>Locale, e.g. "en-US"</returns>
        </member>
        <member name="M:Aras.IOM.I18NSessionContext.GetLanguageCode">
            <summary>
            Returns Innovator language code for the session language.
            </summary>
            <returns>Language code, e.g. "en"</returns>
        </member>
        <member name="M:Aras.IOM.I18NSessionContext.GetLanguageSuffix">
            <summary>
            Returns suffix of the language for the session language.
            </summary>
            <returns>Language suffix, e.g. "_en"</returns>
        </member>
        <member name="M:Aras.IOM.I18NSessionContext.GetDefaultLanguageCode">
            <summary>
            Returns code of the default language.
            </summary>
            <returns>Language code, e.g. "en"</returns>
        </member>
        <member name="M:Aras.IOM.I18NSessionContext.GetDefaultLanguageSuffix">
            <summary>
            Returns suffix of the default language.
            </summary>
            <returns>Language suffix, e.g. "_en"</returns>
        </member>
        <member name="M:Aras.IOM.I18NSessionContext.GetTimeZone">
            <summary>
            Returns time zone of the session.
            </summary>
            <returns>
            Time zone, e.g. "US Eastern Standard Time". The value is one of keys from the registry entry:
            HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones
            </returns>
        </member>
        <member name="M:Aras.IOM.I18NSessionContext.GetCorporateToLocalOffset">
            <summary>
            Returns offset in minutes between corporate time zone and the local time zone of the client. If the
            corporate time zone is not defined by the Innovator then '0' is returned.
            </summary>
            <returns>Offset in minutes</returns>
        </member>
        <member name="M:Aras.IOM.I18NSessionContext.GetUIDatePattern(System.String)">
            <summary>
            Returns locale specific date-time pattern that corresponds to the passed Innovator pattern (e.g. 'short_date').
            </summary>
            <param name="innovatorDatePattern">
            One of possible values:
            <list type="bullet">
            <item>short_date</item>
            <item>long_date</item>
            <item>short_date_time</item>
            <item>long_date_time</item>
            <item>short_time</item>
            <item>long_time</item>
            </list>
            </param>
            <returns>Date-time pattern, e.g. "yyyy-MM-dd"</returns>
        </member>
        <member name="T:Aras.IOM.InternalUtils">
            <summary>
            A set of internal utils.
            </summary>
        </member>
        <member name="M:Aras.IOM.InternalUtils.CreateAndLoadXmlDocument(System.String)">
            <summary>
            Create and load XML document from string without using external entity references
            The XXE injection description: https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Prevention_Cheat_Sheet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.InternalUtils.LoadXmlFromString(System.Xml.XmlDocument,System.String)">
            <summary>
            Load XML document from string without using external entity references
            The XXE injection description: https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Prevention_Cheat_Sheet
            </summary>
        </member>
        <member name="M:Aras.IOM.InternalUtils.GetAttribute(System.Xml.XmlElement,System.String)">
            <summary>
            Emulate <see cref="M:System.Xml.XmlElement.GetAttribute"/> behavior.
            </summary>
            <param name="element"></param>
            <param name="attributeName"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.InternalUtils.GetNodeType(System.Xml.XmlNode)">
            <summary>
            Gets node type (<see cref="T:System.Xml.XmlNodeType"/>)
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:Aras.IOM.IomFactory">
            <summary>
            Provides method to create <see cref="T:Aras.IOM.Innovator"/> instances.
            </summary>
            <remarks>
              There is no public constructor defined for this class.
              All its public methods are static.
            To get a refernce to IomFactory instance in JavaScript code one may:
            a) use <c>aras.IomFactory</c>property;
            b) access <c>IomFactory</c> defined on custom HTML page.
            For example, customer wrote a page with the following HTML code:
            <code language="JavaScript">
            ...
            &lt;OBJECT id="IomFactory" classId="../cbin/IOM.dll#Aras.IOM.IomFactory"&gt;&lt;/OBJECT&gt;
            ...
            </code>
            Then the <c>IomFactory</c> may be accessed from JavaScript as
            <code language="JavaScript">
            ...
            &lt;script&gt;
              var iomFactory = document.getElementById("IomFactory").object;
              var connection = iomFactory.CreateHttpServerConnection("http://", "db", "userName", "password");
            &lt;/script&gt;
            ...
            </code>
            </remarks>
        </member>
        <member name="M:Aras.IOM.IomFactory.CreateInnovator(Aras.IOM.IServerConnection)">
            <summary>
            Create <see cref="T:Aras.IOM.Innovator"/> instance and initialize that with the specified <see cref="T:Aras.IOM.IServerConnection"/>.
            </summary>
            <param name="serverConnection"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.IomFactory.CreateHttpServerConnection(System.String,System.String,System.String,System.String)">
            <summary>
            Create <see cref="T:Aras.IOM.HttpServerConnection"/>.
            </summary>
            <param name="innovatorServerUrl">
            URL of Innovator server in one of the following two forms:
            <list>
            <item>http://{host}/{base_URL}; e.g. http://devserver/MyInnovator</item>
            <item>http://{host}/{base_URL}/Server/InnovatorServer.aspx; e.g. http://devserver/MyInnovator/Server/InnovatorServer.aspx</item>
            </list>
            </param>
            <param name="database">Name of database to be used in the session</param>
            <param name="userName">Login name of a user</param>
            <param name="password">User's password in either encrypted or non-encrypted form. NOTE: for encryption use <seealso cref="M:Aras.IOM.Innovator.ScalcMD5(System.String)"/>.</param>
        </member>
        <member name="M:Aras.IOM.IomFactory.CreateHttpServerConnection(System.String,System.String,Aras.IOM.OAuth.ITokenProvider)">
            <summary>
            Create <see cref="T:Aras.IOM.HttpServerConnection"/> with specified parameters.
            This method sets Standard protocol type.
            </summary>
            <param name="innovatorServerUrl">
            URL of Innovator server in one of the following two forms:
            <list>
            <item>http://{host}/{base_URL}; e.g. http://devserver/MyInnovator</item>
            <item>http://{host}/{base_URL}/Server/InnovatorServer.aspx; e.g. http://devserver/MyInnovator/Server/InnovatorServer.aspx</item>
            </list>
            </param>
            <param name="database">Database name</param>
            <param name="tokenProvider">Token provider. When implements <see cref="T:Aras.IOM.OAuth.ITokenProviderSession"/> will be used to handle external authorization server session.</param>
        </member>
        <member name="M:Aras.IOM.IomFactory.CreateHttpServerConnection(System.String,Aras.IOM.OAuth.ITokenProvider,Aras.IOM.OAuth.ProtocolType)">
            <summary>
            Create <see cref="T:Aras.IOM.HttpServerConnection"/> with specified parameters.
            </summary>
            <param name="innovatorServerUrl">
            URL of Innovator server in one of the following two forms:
            <list>
            <item>http://{host}/{base_URL}; e.g. http://devserver/MyInnovator</item>
            <item>http://{host}/{base_URL}/Server/InnovatorServer.aspx; e.g. http://devserver/MyInnovator/Server/InnovatorServer.aspx</item>
            </list>
            </param>
            <param name="tokenProvider">Token provider. When implements <see cref="T:Aras.IOM.OAuth.ITokenProviderSession"/> will be used to handle external authorization server session.</param>
            <param name="protocolType">Protocol type</param>
        </member>
        <member name="M:Aras.IOM.IomFactory.CreateHttpServerConnection(System.String,System.String,Aras.IOM.OAuth.ITokenProvider,Aras.IOM.OAuth.ProtocolType)">
            <summary>
            Create <see cref="T:Aras.IOM.HttpServerConnection"/> with specified parameters.
            </summary>
            <param name="innovatorServerUrl">
            URL of Innovator server in one of the following two forms:
            <list>
            <item>http://{host}/{base_URL}; e.g. http://devserver/MyInnovator</item>
            <item>http://{host}/{base_URL}/Server/InnovatorServer.aspx; e.g. http://devserver/MyInnovator/Server/InnovatorServer.aspx</item>
            </list>
            </param>
            <param name="database">Database name</param>
            <param name="tokenProvider">Token provider. When implements <see cref="T:Aras.IOM.OAuth.ITokenProviderSession"/> will be used to handle external authorization server session.</param>
            <param name="protocolType">Protocol type</param>
        </member>
        <member name="M:Aras.IOM.IomFactory.CreateHttpServerConnection(System.String)">
            <summary>
             Create restricted <see cref="T:Aras.IOM.HttpServerConnection"/>.
            </summary>
            <param name="innovatorServerUrl">
            URL of Innovator server in one of the following two forms:
            <list>
            <item>http://{host}/{base_URL}; e.g. http://devserver/MyInnovator</item>
            <item>http://{host}/{base_URL}/Server/InnovatorServer.aspx; e.g. http://devserver/MyInnovator/Server/InnovatorServer.aspx</item>
            </list>
            </param>
        </member>
        <member name="M:Aras.IOM.IomFactory.CreateWinAuthHttpServerConnection(System.String,System.String)">
            <summary>
            Create <see cref="T:Aras.IOM.WinAuthHttpServerConnection"/>.
            </summary>
            <param name="innovatorServerUrl">
            URL of Innovator server in one of the following two forms:
            <list>
            <item>http://{host}/{base_URL}; e.g. http://devserver/MyInnovator</item>
            <item>http://{host}/{base_URL}/Server/InnovatorServer.aspx; e.g. http://devserver/MyInnovator/Server/InnovatorServer.aspx</item>
            </list>
            </param>
            <param name="database">Name of database to be used in the session</param>
            <returns>Instance of WinAuthHttpServerConnection class</returns>
        </member>
        <member name="M:Aras.IOM.IomFactory.CreateCheckoutManager(Aras.IOM.Item)">
            <summary>
            Create <see cref="T:Aras.IOME.CheckoutManager"/>
            </summary>
            <param name="configuration">Configuration of items</param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.IomFactory.CreateCheckoutManager(Aras.IOM.Item,Aras.IOME.CheckoutManagerFlags)">
            <summary>
            Create <see cref="T:Aras.IOME.CheckoutManager"/>
            </summary>
            <param name="configuration">Configuration of items</param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.IomFactory.CreateCheckinManager(Aras.IOM.Item)">
            <summary>
            Create <see cref="T:Aras.IOME.CheckinManager"/>
            </summary>
            <param name="configuration">Configuration of items</param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.IomFactory.CreateCheckinManager(Aras.IOM.Item,Aras.IOME.CheckinManagerFlags)">
             <summary>
             Create <see cref="T:Aras.IOME.CheckinManager"/>
             </summary>
             <param name="configuration">structure for checkin</param>
             <param name="flags"></param>
             <returns><see cref="T:Aras.IOME.CheckinManager"/></returns>
            <example>
            <code lang="C#">
            ...
            HttpServerConnection connection = CreateHttpServerConnection("innovatorServerUrl");
            Innovator innovator = IomFactory.CreateInnovator(connection);
            Item itm = innovator.newItem();
            itm.loadAML("&lt;AML/&gt;");
            CheckinManager checkin = factory.CreateCheckinManager(itm);
            ...
            </code>
            <code lang="cpp">
            ...
            IOM::IHttpServerConnectionComIncomingPtr connection = iomFactory->CreateHttpServerConnection(innovatorServerUrl, database, userName, password);
            connection->Login();
            IOM::IInnovatorComIncomingPtr innovator = iomFactory->CreateInnovator(connection);
            IOM::IItemComIncomingPtr configuration = innovator->newItem("CAD", "add");
            configuration->loadAML(aml);
            IOM::ICheckinManagerComIncomingPtr checkinManager = iomFactory->CreateCheckinManager(configuration);
            ...
            </code>
            </example>
        </member>
        <member name="M:Aras.IOM.IomFactory.CreateMultiParentConfigurationBuilder(Aras.IOM.Item)">
            <summary>
            Create <see cref="T:Aras.IOME.MultiParentConfigurationBuilder"/>
            </summary>
            <param name="configuration">Configuration Item for CheckinManager</param>
            <returns><see cref="T:Aras.IOME.MultiParentConfigurationBuilder"/></returns>
        </member>
        <member name="T:Aras.IOM.UrlType">
            <summary>
            Params for the getFileUrl() method on Innovator and ServerConnection.
            </summary>
        </member>
        <member name="F:Aras.IOM.UrlType.None">
            <summary>
            The method returns url without a token.
            </summary>
        </member>
        <member name="F:Aras.IOM.UrlType.SecurityToken">
            <summary>
            The method forms special url with a token.
            </summary>
        </member>
        <member name="T:Aras.IOM.HttpServerConnection">
            <summary>
            Implementation of <see cref="T:Aras.IOM.IServerConnection"/> over HTTP.
            </summary>
        </member>
        <member name="P:Aras.IOM.HttpServerConnection.AutoReloginOnSessionError">
            <summary>
            Gets or sets flag for automatic relogin on session timeout.
            The default value is false.
            </summary>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.CallAction(System.String,System.Xml.XmlDocument,System.Xml.XmlDocument)">
            <summary>
            Send a request with the specified action and AML to Innovator server and write the obtained response into
            the <c>outDOM</c>.
            </summary>
            <param name="actionName">Action name (e.g. "ApplyAML", etc.)</param>
            <param name="inDom">AML that has to be sent to the server</param>
            <param name="outDom">Output parameter: empty XmlDocument that is filled with the server response.</param>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.DebugLog(System.String,System.Object)">
            <summary>
            The method is not supported by the class.
            </summary>
            <param name="reason">Reason</param>
            <param name="msg">Message</param>
            <exception cref="T:System.NotImplementedException">The exception is always returned by the method.</exception>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.DebugLogP">
            <summary>
            The method is not supported by the class.
            </summary>
            <exception cref="T:System.NotImplementedException">The exception is always returned by the method.</exception>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.getUserID">
            <summary>
            If <c>Login()</c> was already called, returns id of the user assosiated with the connection;
            otherwise throws an exception.
            </summary>
            <returns>User ID</returns>
            <exception cref="T:System.Exception"><c>Login() was not called prior to this call.</c></exception>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.GetDatabaseName">
            <summary>
            Returns name of the current database in use.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">
            Either thrown when different databases passed or Login() was not called prior to this call.
            </exception>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.GetOperatingParameter(System.String,System.Object)">
            <summary>
            The method is not supported by the class.
            </summary>
            <param name="name">Server operating parameter.</param>
            <param name="defaultvalue">Default value of the parameter.</param>
            <returns>The default value passed to the method.</returns>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.GetSrvContext">
            <summary>
            The method is not supported by the class.
            </summary>
            <returns><c>null</c></returns>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.GetValidateUserXmlResult">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.GetLicenseInfo(System.String,System.String)">
            <summary>
            Returns information about subscription and specified add-on's
            </summary>
            <param name="issuer">Select addons by issuer. Skip if null or empty.</param>
            <param name="addonName">Select add-ons by the add-on name. Skip if null or empty.</param>
            <returns>subscription info with add-ons in xml format, null if failed</returns>
        </member>
        <member name="P:Aras.IOM.HttpServerConnection.Timeout">
            <summary>
                Gets or sets the time-out value in milliseconds for the System.Net.HttpWebRequest.GetResponse()
                and System.Net.HttpWebRequest.GetRequestStream() methods.
            </summary>
            <value>
                The number of milliseconds to wait before the request times out. The default
                is 100,000 milliseconds (100 seconds).
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value specified is less than zero and is not System.Threading.Timeout.Infinite.
            </exception>
        </member>
        <member name="P:Aras.IOM.HttpServerConnection.ReadWriteTimeout">
            <summary>
            Gets or sets a time-out in milliseconds when writing to or reading from a
            stream.
            </summary>
            <value>
            The number of milliseconds before the writing or reading times out. The default
            value is 300,000 milliseconds (5 minutes).
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value specified for a set operation is less than zero and
            is not equal to System.Threading.Timeout.Infinite
            </exception>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.Login">
            <summary>
            Login into Innovator server.
            </summary>
            <remarks>
            Sends a login request to the Innovator server using properties (URL, db, user name, etc.)
            of the instance. It's strongly recommended to call <c>Login()</c>
            before calling any other IOM method that sends a request to the Innovator server as in
            case the Innovator server is configured with security settings (session timeout, etc.) an
            attempt to send a request to server without prior login causes an exception.
            When <see cref="T:Aras.IOM.OAuth.ITokenProvider" /> is provided to the instance and supports authorization session - the session will be started.
            <seealso cref="T:Aras.IOM.OAuth.ITokenProviderSession"/>
            <seealso cref="M:Aras.IOM.IomFactory.CreateHttpServerConnection(System.String,System.String,Aras.IOM.OAuth.ITokenProvider,Aras.IOM.OAuth.ProtocolType)"/>
            </remarks>
            <returns>"error" item if login failed; otherwise item representing logged-in user.</returns>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.Logout(System.Boolean)">
            <summary>
            Logout from Innovator.
            </summary>
            <param name="unlockOnLogout">Pass 'true' if want to unlock locked objects on logout; 'false' otherwise</param>
            <remarks>
            Note that items can be unlocked on logout if and only if the property "unlock_on_logout" of the item's
            corresponding ItemType is set to "1". If this property is set to "0" the parameter "unlockOnLogout"
            is ignored.
            When <see cref="T:Aras.IOM.OAuth.ITokenProvider" /> is provided to the instance and supports authorization session - the session will be ended.
            <seealso cref="T:Aras.IOM.OAuth.ITokenProviderSession"/>
            <seealso cref="M:Aras.IOM.IomFactory.CreateHttpServerConnection(System.String,System.String,Aras.IOM.OAuth.ITokenProvider,Aras.IOM.OAuth.ProtocolType)"/>
            </remarks>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.UsingParameters(Aras.IOM.HttpConnectionParameters,System.Action)">
            <summary>
            Call action with special HttpConnectionParams
            </summary>
            <param name="parameters"></param>
            <param name="action"></param>
        </member>
        <member name="P:Aras.IOM.HttpServerConnection.UserName">
            <summary>
            Gets current user name
            </summary>
        </member>
        <member name="P:Aras.IOM.HttpServerConnection.UserPassword">
            <summary>
            Gets current user password in md5 form.
            </summary>
            <remarks>
            UserPassword is <see langword="null"/> since innovator SP15, because token authentication is used in IOM 11.0 SP15 and above.
            </remarks>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.#ctor(System.String,Aras.IOM.IAuthenticator)">
            <summary>
            Create an instance of the connection with specified parameters.
            </summary>
            <param name="innovatorServerUrl">
            URL of InnovatorServer.aspx, e.g. http://localhost/myinnovator/server/InnovatorServer.aspx
            </param>
            <param name="authenticator">Object, that helps to authenticate request</param>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.#ctor(System.String,System.String,Aras.IOM.IAuthenticator)">
            <summary>
            Create an instance of the connection with specified parameters.
            </summary>
            <param name="innovatorServerUrl">
            URL of InnovatorServer.aspx, e.g. http://localhost/myinnovator/server/InnovatorServer.aspx
            </param>
            <param name="database">Database name</param>
            <param name="authenticator">Object, that helps to authenticate request</param>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.#ctor(System.String,System.String,Aras.IOM.IAuthenticator,System.String,System.String)">
            <summary>
            This is special constructor that could be used in a derived class to force specific culture and\or time zone on the connection.
            In all other case user must use <c>IomFactory.createHttpServerConnection(...)</c> to create a connection.
            </summary>
            <param name="innovatorServerUrl">
            URL of InnovatorServer.aspx, e.g. http://localhost/myinnovator/server/InnovatorServer.aspx
            </param>
            <param name="database">Database name.</param>
            <param name="authenticator">Object, that helps to authenticate request</param>
            <param name="culture">Culture to be passed to the server on first connection instead of the culture of the machine.</param>
            <param name="timeZone">Time zone to be passed to the server on first connection instead of the time zone of the machine.</param>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This is special constructor that could be used in a derived class to force specific culture and\or time zone on the connection.
            In all other case user must use <c>IomFactory.createHttpServerConnection(...)</c> to create a connection.
            </summary>
            <param name="innovatorServerUrl">
            URL of InnovatorServer.aspx, e.g. http://localhost/myinnovator/server/InnovatorServer.aspx
            </param>
            <param name="database">Name of the database, e.g. "MySolutionsDB"</param>
            <param name="userName">Name of the connecting user, e.g. "jsmith"</param>
            <param name="password">
            User password. If passed password is a MD5 value it's sent to the server without modifications;
            otherwise it's converted to MD5 value prior to passing to the server.
            <seealso cref="M:Aras.IOM.Innovator.ScalcMD5(System.String)"/>
            </param>
            <param name="culture">Culture to be passed to the server on first connection instead of the culture of the machine.</param>
            <param name="timeZone">Time zone to be passed to the server on first connection instead of the time zone of the machine.</param>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.CallActionImpl(System.String,System.Xml.XmlDocument,System.Xml.XmlDocument,System.String,System.Boolean)">
            <summary>
            Internal implementation method called from <see cref="M:Aras.IOM.HttpServerConnection.CallAction(System.String,System.Xml.XmlDocument,System.Xml.XmlDocument)"/> and derived classes.
            </summary>
            <param name="actionName">Action name (e.g. "ApplyAML", etc.)</param>
            <param name="inDom">AML that has to be sent to the server</param>
            <param name="outDom">Output parameter: empty XmlDocument that is filled with the server response.</param>
            <param name="url">URL to which request will be sent</param>
            <param name="doSetHeaders">if 'false' then request headers are not set</param>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.SendRequest(System.Xml.XmlDocument,System.String,System.String,System.Boolean)">
             <summary>
            
             </summary>
             <param name="inDom"></param>
             <param name="url"></param>
             <param name="actionName"></param>
             <param name="doSetHeaders"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.getFileUrl(System.String,Aras.IOM.UrlType)">
            <summary>
            Returns file full file url. In some cases with AuthenticationBroker's token.
            </summary>
            <param name="fileId"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:Aras.IOM.HttpServerConnection.Compression">
             <summary>
             Property specifies the way of compression of AML sent through IOM.HttpServerConnection.
             Value from enumeration 'CompressionType' (namespace Aras.Common.Compression) can be set. Available values are:
            <list type="bullet">
            <item>
            <description>
            <b>gzip</b>
            data compression to the gzip format
            </description>
            </item>
            <item>
            <description>
            <b>deflate</b>
            data compression to the deflate format
            </description>
            </item>
            <item>
            <description>
            <b>none</b>
            Default value. Data sent through IOM.HttpServerConnection aren't compressed.
            </description>
            </item>
            </list>
            It is highly recommended to store type of compression you are using in configuration file of your application.
            Example section of application configuration file:
            <code lang="xml">
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="CompressionType" value="gzip"/&gt;
                 &lt;/appSettings &gt;
             &lt;/configuration&gt;
            </code>
            Examples of setting value of Compression property from application configuration file.
            <example>
            <code lang="C#">
            ...
            HttpServerConnection connection = CreateHttpServerConnection("innovatorServerUrl");
            connaction.Compression = GetCompressionTypeFromAppConfig();
            ...
            private CompressionType GetCompressionTypeFromAppConfig()
            {
             string value = ConfigurationManager.AppSettings["CompressionType"];
             if (String.IsNullOrEmpty(value))
             {
                 return CompressionType.none;
             }
             else
             {
                 return (CompressionType)Enum.Parse(typeof(CompressionType), value);
             }
            }
            </code>
            <code lang="vbnet">
            ...
            Dim connection As HttpServerConnection = IomFactory.CreateHttpServerConnection("connectionstring")
            connection.Compression = GetCompressionTypeFromAppConfig()
            ...
            Private Function GetCompressionTypeFromAppConfig() As CompressionType
             Dim value As String = ConfigurationManager.AppSettings("CompressionType")
             If (String.IsNullOrEmpty(value)) Then
                 Return CompressionType.none
             Else
                 Return CType([Enum].Parse(GetType(CompressionType), value), CompressionType)
             End If
            End Function
             </code>
             </example>
             </summary>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.getFileUrls(System.Collections.ArrayList,Aras.IOM.UrlType)">
             <summary>
            
             </summary>
             <param name="fileIds"></param>
             <param name="type"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.Logout">
            <summary>
            Logout from Innovator (do not unlock locked Items).
            </summary>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.GetDatabases">
            <summary>
            Returns all configured databases
            </summary>
            <returns></returns>
        </member>
        <member name="T:Aras.IOM.HttpServerConnection.DbList">
            <summary>
            Generic list of databases id
            </summary>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.AppendCookies(System.Net.CookieCollection)">
            <summary>
            Append cookies to connection requests
            </summary>
        </member>
        <member name="M:Aras.IOM.HttpServerConnection.GetLicenseManagerWebService">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:Aras.IOM.Innovator">
            <summary>
            The Innovator class provides methods for connecting to
            Aras Innovator Server and for performing miscellaneous mostly non-Item related operations.
            </summary>
            <summary>
            The Innovator class provides methods for connecting to
            Aras Innovator Server and for performing miscellaneous mostly non-Item related operations.
            </summary>
        </member>
        <member name="M:Aras.IOM.Innovator.applyAML(System.String)">
            <summary>
            Sends request to Innovator server and returns server response as an item.
            </summary>
            <remarks>
            It's assumed that passed AML script has a root tag &lt;AML&gt; that contains one or more
            &lt;Item&gt; children elements. The method send the AML script to the server
            and returns an Item object where the <c>dom</c> property is
            the xml response returned from the server.
            <seealso cref="T:Aras.IOM.Item"/>
            </remarks>
            <param name="AML">AML script to be sent to Innovator server.</param>
            <returns>Server response.</returns>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the AML.</exception>
        </member>
        <member name="M:Aras.IOM.Innovator.applyMethod(System.String,System.String)">
            <summary>
            Apply a method by name, passing a string value as its body.
            </summary>
            <remarks>
            The context for the method will be the method item, in the form:
            &lt;Item type="Method" action="{methodName}"&gt;{body}&lt;/Item&gt;
            Note, that only methods that use IOM namespace from .NET
            (C#, VBScript) can be applied, and methods written in JavaScript
            cannot be applied.
            </remarks>
            <param name="methodName">Name of the method.</param>
            <param name="body">Context for the method (method item).</param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.Innovator.newXMLDocument">
            <summary>
            Creates new ArasXmlDocument.
            </summary>
            <remarks>Returned ArasXmlDocument has property <c>PreserveWhitespace</c> set to <c>true</c>.</remarks>
            <returns>Instance of System.Xml.ArasXmlDocument</returns>
        </member>
        <member name="M:Aras.IOM.Innovator.getConnection">
            <summary>
            Returns the server connection set on the instance.
            </summary>
            <returns>
            Server connection object that implements <c>IServerConnection</c> interface. The real type of the server
            connection object depends on what was passed to the <c>IomFactory.CreateInnovator(IServerConnection)</c>
            when the instance of the <c>Innovator</c> class was created.
            </returns>
            <seealso cref="T:Aras.IOM.IServerConnection"/>
            <seealso cref="T:Aras.IOM.IomFactory"/>
        </member>
        <member name="M:Aras.IOM.Innovator.getI18NSessionContext">
            <summary>
            Returns current internationalization context.
            <seealso cref="T:Aras.IOM.I18NSessionContext"/>
            </summary>
            <returns>Current I18NSessionContext of the session.</returns>
        </member>
        <member name="M:Aras.IOM.Innovator.getNewID">
            <summary>
            A new 32 character hex string based on a GUID.
            </summary>
            <returns>New GUID.</returns>
        </member>
        <member name="M:Aras.IOM.Innovator.getNextSequence(System.String)">
            <summary>
            Returns the next sequence value by sequence name.
            </summary>
            <remarks>
            Method makes a request to Innovator server in order to get new sequence value.
            </remarks>
            <param name="sequenceName">Sequence name.</param>
            <returns>New sequence value if request to the server succeeded, <c>null</c> otherwise.</returns>
        </member>
        <member name="M:Aras.IOM.Innovator.newItem">
            <summary>
            Returns a new Item.
            <seealso cref="M:Aras.IOM.Item.newItem"/>
            </summary>
            <remarks>
            The new Item will have no properties.
            </remarks>
            <returns>Newly created instance of Item.</returns>
        </member>
        <member name="M:Aras.IOM.Innovator.newItem(System.String)">
            <summary>
            Returns a new Item with the specified type.
            <seealso cref="M:Aras.IOM.Item.newItem(System.String)"/>
            </summary>
            <remarks>
            The ItemType name is used to set the 'type' attribute.
            The new Item will have no properties. In order to populate it with default property values
            of its ItemType call Item.fetchDefaultPropertyValues(true) on the item.
            <seealso cref="M:Aras.IOM.Item.fetchDefaultPropertyValues(System.Boolean)"/>
            </remarks>
            <param name="itemTypeName">Name of the ItemType.</param>
            <returns>Newly created instance of Item.</returns>
        </member>
        <member name="M:Aras.IOM.Innovator.newItem(System.String,System.String)">
             <summary>
             Returns a new Item with the specified type and action.
             <seealso cref="M:Aras.IOM.Item.newItem(System.String,System.String)"/>
             </summary>
             <remarks>
             The ItemType name is used to set the 'type' attribute
             and the action name is used to set the 'action' attribute on the Item.
            
             The new Item will have no properties. In order to populate it with default property values
             of its ItemType call Item.fetchDefaultPropertyValues(true) on the item.
             <seealso cref="M:Aras.IOM.Item.fetchDefaultPropertyValues(System.Boolean)"/>
             </remarks>
             <param name="itemTypeName">Name of the ItemType.</param>
             <param name="action">Name of action (e.g. "get", "update", etc.)</param>
             <returns>Newly created instance of Item.</returns>
        </member>
        <member name="M:Aras.IOM.Innovator.#ctor(Aras.IOM.IServerConnection)">
            <summary>
            The constructor must be __ONLY__ used from internal code (Aras.Server.Core.dll). The
            only reason it's declared public is that IOM and Aras.Server.Core.dll are separate
            DLLs and there is no way in .NET languages to declare a class from one library
            visible to only a particular library or class in it (something like "friend" in C++).
            </summary>
            <example>
            VB.Net
              Dim innovator as Innovator = new Innovator(serverConnection)
            </example>
            <param name="serverConnection">
            On server side, the parameter is an instance of the server context (CCO).
            </param>
        </member>
        <member name="M:Aras.IOM.Innovator.getUserID">
            <summary>
            Returns id of the user assosiated with a given instance of Innovator if this user is currently logged in, otherwise
            throws "Not logged in" exception.
            </summary>
            <returns>User id.</returns>
        </member>
        <member name="M:Aras.IOM.Innovator.getItemById(System.String,System.String)">
            <summary>
            Returns an Item object that matches the ItemType name and ID for the Item.
            <seealso cref="M:Aras.IOM.Innovator.getItemByKeyedName(System.String,System.String)"/>
            </summary>
            <remarks>
            The method sends a request to Innovator server in order to find the required item.
            </remarks>
            <param name="itemTypeName">Name of the ItemType.</param>
            <param name="id">Item's ID.</param>
            <returns>
            If request to the server failed the method returns an "error" item; if no item with specified type and id
            found in the database the method returns 'null'; otherwise the method returns the found item.
            </returns>
            <example>
            C#
            <code>
            ...
            string type = "Part";
            string id = "01234567890123456789012345678901";
            Item result = myInnovator.getItemById( type, id );
            string status_msg = string.Empty;
            if( result == null )
              status_msg = string.Format( "Item of type '{0}' with id '{1}' was not found", type, id );
            else if( result.isError() )
              status_msg =
                string.Format( "Request to find item of type '{0}' with id '{1}' has failed: {2}", type, id, result.getErrorDetail() );
            else
              status_msg = string.Format( "Item of type '{0}' with id '{1}' was successfully found", type, id );
            ...
            </code>
            </example>
            <exception cref="T:System.ArgumentException">
             <list type="bullet">
              <item>
               Item type is not specified.
              </item>
              <item>
               Item ID is not specified.
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Innovator.getItemByKeyedName(System.String,System.String)">
            <summary>
            Returns an Item object that matches the ItemType name and keyed name for the Item.
            <seealso cref="M:Aras.IOM.Innovator.getItemById(System.String,System.String)"/>
            </summary>
            <remarks>
            The method sends a request to Innovator server in order to find the required item.
            </remarks>
            <param name="itemTypeName">Name of the ItemType.</param>
            <param name="keyedName">Keyed name for the searched item.</param>
            <returns>
            If request to the server failed the method returns an "error" item; if no item with specified type and id
            found in the database the method returns 'null'; otherwise the method returns the found item.
            </returns>
            <example>
            C#
            <code>
            ...
            string type = "Part";
            string keyedName="part1";
            Item result = myInnovator.getItemByKeyedName( type, keyedName );
            string status_msg = string.Empty;
            if( result == null )
              status_msg = string.Format( "Item of type '{0}' with keyed name '{1}' was not found", type, keyedName );
            else if( result.isError() )
              status_msg =
                string.Format( "Request to find item of type '{0}' with keyed name '{1}' has failed: {2}", type, keyedName, result.getErrorDetail() );
            else
              status_msg = string.Format( "Item of type '{0}' with keyed name '{1}' was successfully found", type, keyedName );
            ...
            </code>
            </example>
            <exception cref="T:System.ArgumentException">
             <list type="bullet">
              <item>
               Item type is not specified.
              </item>
              <item>
               Keyed name is not specified.
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Innovator.getUserAliases">
            <summary>
            Returns aliases of the logged-in user.
            </summary>
            <remarks>
            The method makes a request to Innovator server to obtain aliases of the logged-in user. The return value is
            a comma delimited string of Identity ID's, which are 'Alias' relationships to the User Item.
            </remarks>
            <returns>
            Comma delimited string of Identity ID's; if request to the server failed or no aliases were found
            the return value is an empty string.
            </returns>
        </member>
        <member name="M:Aras.IOM.Innovator.getFileUrl(System.String,Aras.IOM.UrlType)">
            <summary>
            Returns file full file url. In some cases with AuthenticationBroker's token.
            </summary>
            <param name="fileId"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.Innovator.getFileUrls(System.Collections.ArrayList,Aras.IOM.UrlType)">
             <summary>
            
             </summary>
             <param name="fileIds"></param>
             <param name="type"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOM.Innovator.newError(System.String)">
            <summary>
            Returns a new "error" item.
            </summary>
            <param name="explanation">
            Is used to populate the &lt;faultstring&gt; tag inside &lt;Fault&gt; node.
            According to the SOAP 1.1 specification the <c>faultstring</c> element is intended
            to provide a human readable explanation of the fault and is not intended for
            algorithmic processing.
            Note, that passed <c>message</c> is set as <c>InnerText</c> on the &lt;faultstring&gt;
            element without any pre-processing, so symbols like '&lt;', '&gt;', etc. will be escaped.
            </param>
            <returns>Created "error" item.</returns>
        </member>
        <member name="M:Aras.IOM.Innovator.ConsumeLicense(System.String)">
             <summary>
             Consumes license for feature
             </summary>
             <param name="featureName">the name on the feature</param>
             <returns>Returns id of consumed license</returns>
             <example>
            <code lang="C#">
             ...
             HttpServerConnection connection = IomFactory.CreateHttpServerConnection(innovatorServerUrl, database, userName, password);
             connection.Login();
             Innovator inn = IomFactory.CreateInnovator(connection);
             try
             {
               string featureId = inn.ConsumeLicense("featureName");
             }
             finally
             {
               connection.Logout();
             }
             ...
             </code>
            <code lang="cpp">
             ...
             IOM::IHttpServerConnectionComIncomingPtr connection = iomFactory->CreateHttpServerConnection(innovatorServerUrl, database, userName, password);
             connection->Login();
             IOM::IInnovatorComIncomingPtr innovator = iomFactory->CreateInnovator(connection);
             _bstr_t a = innovatorAdmin->ConsumeLicense("featureName");
             connection->Logout();
            ...
            </code>
             </example>
        </member>
        <member name="M:Aras.IOM.Innovator.newResult(System.String)">
            <summary>
            Returns an Item where the text passed in as the argument is the body for the &lt;Result&gt; tag.
            </summary>
            <remarks>
            After the insertion the method performs a verification that resulting AML is well-formed XML. If
            passed text contains any XML escape symbols it's user's responsibility to put the text inside a
            'CDATA' block.
            </remarks>
            <param name="resultBody">Text to be set as the body for the &lt;Result&gt; tag.</param>
            <returns>Created item.</returns>
            <exception cref="T:System.Xml.XmlException">Resulting AML is not well-formed XML.</exception>
        </member>
        <member name="M:Aras.IOM.Innovator.applySQL(System.String)">
            <summary>
            Sends SQL request to Innovator server and returns server response as an Item.
            </summary>
            <remarks>
            Uses "ApplySQL" type of server request. In the returned Item object the <c>dom</c> property is
            the XML returned from the server.
            <seealso cref="T:Aras.IOM.Item"/>
            </remarks>
            <param name="sql">SQL to be sent to Innovator server.</param>
            <returns>Server response.</returns>
        </member>
        <member name="M:Aras.IOM.Innovator.applySQLWithParameters(System.String,System.String)">
            <summary>
            Sends SQL request (which consists of query and parameters) and returns server response as an Item.
            </summary>
            <remarks>
            Uses "ApplySQL" type of server request. In the returned Item object the <c>dom</c> property is
            the XML returned from the server.
            <seealso cref="T:Aras.IOM.Item"/>
            </remarks>
            <param name="query">SQL to be sent to Innovator server.</param>
            <param name="parameters"></param>
            <returns>Server response.</returns>
        </member>
        <member name="M:Aras.IOM.Innovator.getItemInDom(System.Xml.XmlDocument)">
            <summary>
            Returns an Item with the node property referencing the first found &lt;Item&gt; node from the passed ArasXmlDocument.
            </summary>
            <remarks>
            If passed ArasXmlDocument doesn't have an &lt;Item&gt; node the method returns <c>null</c>; otherwise
            <c>OuterXml</c> of the passed ArasXmlDocument is loaded into the item's <c>dom</c>.
            </remarks>
            <param name="dom">Instance of ArasXmlDocument.</param>
            <returns><c>null</c> if passed ArasXmlDocument doesn't have an &lt;Item&gt; node; new Item otherwise.</returns>
        </member>
        <member name="M:Aras.IOM.Innovator.getAssignedActivities(System.String,System.String)">
            <summary>
            Returns an Item where the <c>nodeList</c> property of the Item contains Activity Items.
            </summary>
            <remarks>
            The method sends a request to Innovator server to obtain activities.
            </remarks>
            <param name="state">
            InBaseket view mode; possible values - "Active" | "Pending" | "Both".
            </param>
            <param name="userId">User ID.</param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.Innovator.calcMD5(System.String)">
            <summary>
            Computes the MD5 hash value for the specified string.
            </summary>
            <param name="val"></param>
            <returns>MD5 hash value.</returns>
        </member>
        <member name="M:Aras.IOM.Innovator.ScalcMD5(System.String)">
            <summary>
            Computes the MD5 hash value for the specified string.
            </summary>
            <param name="val">String to be encoded.</param>
            <returns>MD5 hash value.</returns>
        </member>
        <member name="T:Aras.IOM.IServerConnection">
            <summary>
            The interface is required to connect AML generator (<see cref="T:Aras.IOM.Item"/> and <see cref="T:Aras.IOM.Innovator"/>)
            to Innovator server. Responsibility of this interface is provide abstraction from transport layer.
            </summary>
        </member>
        <member name="M:Aras.IOM.IServerConnection.CallAction(System.String,System.Xml.XmlDocument,System.Xml.XmlDocument)">
            <summary>
            Call the specified action on Innovator Server.
            </summary>
            <param name="actionName">
            Action name.
            </param>
            <param name="inDom">
            <see cref="T:System.Xml.XmlDocument"/> containing AML to send to Innovator Server.
            </param>
            <param name="outDom">
            <see cref="T:System.Xml.XmlDocument"/> containing AML response from Innovator Server.
            </param>
        </member>
        <member name="M:Aras.IOM.IServerConnection.DownloadFile(Aras.IOM.Item,System.String,System.Boolean)">
            <summary>
            Downloads the specified physical file to the specified directory.
            </summary>
            <param name="fileItem">Item of type 'File' to download.</param>
            <param name="directoryPath">Path to a folder where the physical file will be downloaded to.</param>
            <param name="overwriteFile">Specifies if the file should be overwritten if file with the same name already exists.</param>
        </member>
        <member name="M:Aras.IOM.IServerConnection.getUserID">
            <summary>
            Returns id of current logged in Innovator user. Throws exception if there is no logged in user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.IServerConnection.getFileUrl(System.String,Aras.IOM.UrlType)">
            <summary>
            Async returns file full file url. In some cases with AuthenticationBroker's token.
            </summary>
            <param name="fileId"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.IServerConnection.getFileUrls(System.Collections.ArrayList,Aras.IOM.UrlType)">
             <summary>
            
             </summary>
             <param name="fileIds"></param>
             <param name="type"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOM.IServerConnection.GetLicenseInfo">
            <summary>
            Returns information about subscription and all add-on's
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.IServerConnection.GetLicenseInfo(System.String,System.String)">
            <summary>
            Returns information about subscription and all add-on's
            </summary>
            <param name="issuer">Select addons by issuer. Skip if null or empty.</param>
            <param name="addonName">Select add-ons by the name. Skip if null or empty.</param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.IServerConnection.GetDatabases">
            <summary>
            Returns all configured databases
            </summary>
            <returns>List of databases id</returns>
        </member>
        <member name="M:Aras.IOM.IServerConnection.DebugLog(System.String,System.Object)">
             <summary>
            
             </summary>
             <param name="reason"></param>
             <param name="msg"></param>
        </member>
        <member name="M:Aras.IOM.IServerConnection.DebugLogP">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Aras.IOM.IServerConnection.GetDatabaseName">
            <summary>
            Returns name of the current database in use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.IServerConnection.GetFromCache(System.String)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOM.IServerConnection.GetOperatingParameter(System.String,System.Object)">
             <summary>
            
             </summary>
             <param name="name"></param>
             <param name="defaultvalue"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOM.IServerConnection.GetSrvContext">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Aras.IOM.IServerConnection.InsertIntoCache(System.String,System.Object,System.String)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <param name="value"></param>
             <param name="path"></param>
        </member>
        <member name="M:Aras.IOM.IServerConnection.GetValidateUserXmlResult">
            <summary>
            Results of ValidateUser action should be returned by the method and they are required to instantiate I18NSessionContext.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Aras.IOM.FetchFileMode">
            <summary>
            This is an flags enumeration for fetchFileProperty method.
            <seealso cref="M:Aras.IOM.Item.fetchFileProperty(System.String,System.String,Aras.IOM.FetchFileMode)"/>
            </summary>
        </member>
        <member name="F:Aras.IOM.FetchFileMode.Normal">
            <summary>
            Normal: 0 (default) - in this mode method performs file downloading to targetPath. Location of downloaded file is set to item property "checkedout_path".
            </summary>
        </member>
        <member name="F:Aras.IOM.FetchFileMode.Dry">
            <summary>
            Dry: 1 - in this mode method perform "dry" run without downloading physical file, but item property "checkedout_path" is calculated based on targetPath and filename of the File.
            This mode will be used in case it will be required to get real file path to which file is downloaded in order to test if such file already exists on file system,
            which gives opportunity to change targetPath for real file downloading, which by default overwrites existing files.
            </summary>
        </member>
        <member name="T:Aras.IOM.Item">
             <summary>
            
             </summary>
             <summary>
             The class provides interface to AML structure in memory as well as means of
             communication with Innovator server. Depending of Item's <c>dom</c> internal structure,
             as well as its <c>node</c> and <c>nodeList</c> values the instance of this class may
             represents one of the following:
             <list type="bullet">
              <item>
               <description>
               <b>Single</b> Innovator Item of an arbitrary ItemType. In this case <c>Item.node!=null</c>,
               and inside of <c>Item.dom</c> this node can refer to any XmlNode with localName &lt;Item&gt;.
               Notice that in case of Single item the <c>Item.node.OuterXml</c> will look like this
              <code>
                 &lt;Item  /&gt;
              </code>
              or this
              <code>
               &lt;Item &gt;
                 &lt;prop1&gt;a&lt;/prop1&gt;
                 &lt;prop2&gt;b&lt;/prop2&gt;
               &lt;/Item&gt;
              </code>
              </description>
              </item>
              <item>
               <description>
               <b>A collection</b> of Innovator Items, as in a case when more then one Innovator Business Item
               being returned by the Server on a single request from client. In this case
               <c>Item.nodeList!=null</c> and <c>Item.dom.OuterXml</c>
               should comply with one of two following formats:
               (1) AML wrapper
              <code>
                 &lt;AML&gt;
                     &lt;Item ... /&gt;
                      ...
                     &lt;Item ... /&gt;
                 &lt;/AML&gt;
              </code>
              or
              (2) SOAP-Result wrapper
              <code>
                 &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=.../&gt;
                     &lt;SOAP-ENV:Body&gt;
                         &lt;Result&gt;
                             &lt;Item  /&gt;
                             ...
                             &lt;Item  /&gt;
                         &lt;/Result&gt;
                     &lt;/SOAP-ENV:Body&gt;
                 &lt;/SOAP-ENV:Envelope&gt;
              </code>
              </description>
              </item>
              <item>
               <description>
               <b>Error</b> as in the case when a client request results in error from the Server.
               In this case both <c>Item.node</c> and <c>Item.nodeList</c> are set to <c>null</c>, while <c>Item.dom.OuterXml</c>
               complies with the folowing format:
              <code>
               &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=.../&gt;
                &lt;SOAP-ENV:Body&gt;
                   &lt;SOAP-ENV:Fault&gt;
                      &lt;faultcode&gt;...&lt;/faultcode&gt;
                      &lt;faultactor&gt;...&lt;/faultactor&gt;
                      &lt;detail&gt;&lt;...&gt;&lt;/detail&gt;
                   &lt;/SOAP-ENV:Fault&gt;
                &lt;/SOAP-ENV:Body&gt;
               &lt;/SOAP-ENV:Envelope&gt;
              </code>
              </description>
              </item>
              <item>
               <description>
               <b>Result</b> to represent an arbitrary text wrapped by &lt;SOAP-ENV&gt; &lt;Result&gt; tags.
               Again, both <c>Item.node</c> and <c>Item.nodeList</c> are set to <c>null</c> in this case,
               while <c>Item.dom.OuterXml</c> complies with the following format:
              <code>
               &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=.../&gt;
                &lt;SOAP-ENV:Body&gt;
                   &lt;Result&gt;[text]&lt;/Result&gt;
                &lt;/SOAP-ENV:Body&gt;
               &lt;/SOAP-ENV:Envelope&gt;
              </code>
              </description>
              </item>
              <item>
               <description>
               <b>Logical</b> to represent a set of Innovator Item's property-nodes
               wrapped in logical statement by one of three logical tags:
               &lt;or&gt;, &lt;and&gt;, or &lt;not&gt; usually used to specify the search criteria for
               the action "get". Because in this case one of three logical tags is the root tag for the logical <c>Item.node</c>
               its OuterXml may look like this:
              <code>
               &lt;and&gt;
                &lt;prop1&gt;a&lt;/prop1&gt;
                &lt;prop2&gt;b&lt;/prop2&gt;
               &lt;/and&gt;
              </code>
              </description>
              </item>
             </list>
            
             Methods of the class allow:
             <list type="bullet">
              <item>
               <description>
               get\set\add\remove attributes and\or properties of an item or an error, i.e. modify AML in memory
               </description>
              </item>
              <item>
               <description>
               send requests to server (instance of the class is interpreted as an AML request; note
               that server response is also returned in a form of an instance of the class, i.e. response
               AML is encapsulated as an Item).
               </description>
              </item>
             </list>
             </summary>
             <remarks>
             <list type="bullet">
              <item>
             There are two major types of methods in the class: methods that only work with
             item's AML in memory and methods that communicate with Innovator server, i.e. send
             request(s) to and get response(s) from the server. All get\set type of methods as well as
             isXXX(...) (e.g. <c>isError(), isCollection()</c>, etc.) and add\remove methods (e.g. <c>
             addRelationship(...), removeProperty(...)</c>, etc.) belong to the former group. Methods
             like <c>fetchXXX(...)</c> (e.g. <c>fetchLockStatus()</c>), <c>apply(...), email(...),
             promote(...), lock\unlockItem(...)</c>, etc. belong
             to the later group. In case method sends a request to the server it must be explicitly
             mentioned in the method comments.
              </item>
              <item>
              If instance of the class is an "error" item, it contains a single &lt;Fault&gt; node that is SOAP Fault element.
              The SOAP Fault element is used to carry error and/or status information within a SOAP message.
              If present, the SOAP Fault element MUST appear as a body entry and MUST NOT appear more than once
              within a Body element. According to SOAP 1.1 specification the Fault element itself must contain a
              'faultcode' element and a 'faultstring' element, and optionally 'faultactor' and 'detail' elements.
              </item>
              <item>
              In case of multilingual property AML may contain more than one tag for the same property where each tag will
              have a different value of the attribute <c>xml:lang</c>. Multilingual property tag without <c>xml:lang</c>
              denotes the property value for the language of the session; so, if the session language is French
              (language code is 'fr') then the following tags are equivalent: <c>&lt;name&gt;Andre&lt;/name&gt;</c>
              and <c>&lt;name xml:lang='fr'&gt;Andre&lt;/name&gt;</c>.
              </item>
             </list>
             </remarks>
        </member>
        <member name="F:Aras.IOM.Item.XPathResult">
            <summary>
            XPath to the &lt;Result&gt; tag in server response XML.
            <seealso cref="M:Aras.IOM.Item.getResult"/>
            </summary>
            <remarks>
            Note that this field is not available from JavaScript.
            Use the string constant <c>//Result</c> instead.
            </remarks>
            <example>
            <code>
              ...
              Item response = myitem.apply();
              if( !response.isError() )
              {
                ArasXmlNode result_node = response.dom.SelectSingleNode( Item.XPathResult );
                ...
              }
              ...
            </code>
            </example>
        </member>
        <member name="F:Aras.IOM.Item.XPathResultItem">
            <summary>
            XPath to the top_level &lt;Item&gt; tag(s) in item's internal AML.
            <seealso cref="P:Aras.IOM.Item.dom"/>
            </summary>
            <remarks>
            Note that this field is not available from JavaScript.
            Use the string constant <c>//Result/Item</c> instead.
            </remarks>
            <example>
            <code>
              ...
              Item response = myitem.apply();
              if( !response.isError() )
              {
                ArasXmlNodeList item_nodes = response.dom.SelectNodes( Item.XPathResultItem );
                ...
              }
              ...
            </code>
            </example>
        </member>
        <member name="F:Aras.IOM.Item.XPathFault">
            <summary>
            XPath to the root &lt;Fault&gt; node in case the instance represents an "error" item.
            </summary>
            <remarks>
            It's recommended to use <c>get\setErrorXXX()</c> methods (e.g. <c>getErrorDetails()</c> or
            <c>setErrorDetails()</c>, etc.) in order to get\set fault information.
            <seealso cref="M:Aras.IOM.Item.getErrorDetail"/>
            <seealso cref="M:Aras.IOM.Item.getErrorSource"/>
            <seealso cref="M:Aras.IOM.Item.getErrorString"/>
            <seealso cref="M:Aras.IOM.Item.setErrorDetail(System.String)"/>
            <seealso cref="M:Aras.IOM.Item.setErrorSource(System.String)"/>
            <seealso cref="M:Aras.IOM.Item.setErrorString(System.String)"/>
            Note that this field is not available from JavaScript.
            </remarks>
            <example>
            <code>
              ...
              Item response = myitem.apply();
              if( response.isError() )
              {
                ArasXmlNode fault_node = response.dom.SelectNodes( Item.XPathFault );
                ...
              }
              ...
            </code>
            </example>
        </member>
        <member name="M:Aras.IOM.Item.#ctor(Aras.IOM.IServerConnection,System.String,System.String,System.String)">
             <summary>
             The constructor is supposed to be called __ONLY__ from internal code (Aras.Server.Core.dll).
             The __ONLY__ reason it's declared public is that IOM and Aras.Server.Core are separate libraries
             and .NET doesn't have a mechanism to declare "friends". In all other situations instance
             of the class must be either created through Innovator.newItem()\Item.newItem() (client side) or must be available
             as a part of the context in which the custom code is executed (so called "Innovator server methods").
            
             Note that credentials are not instantiated in the constructor but when they
             are requested first time. The reason is that most of the time the Item's credentials are
             not used but its instantiation takes (relatively) a lot of time (2 DOMs are created, request
             to another DLL is done, etc.)
             </summary>
             <param name="serverConnection">The serverConnection object is a reference to the server context and is only required on the server side.</param>
             <param name="itemTypeName"></param>
             <param name="action"></param>
             <param name="mode"></param>
        </member>
        <member name="M:Aras.IOM.Item.newItem">
            <summary>
            Returns a new Item.
            <seealso cref="M:Aras.IOM.Item.newItem(System.String)"/>
            </summary>
            <remarks>
            The new Item will have no properties.
            </remarks>
            <returns>Newly created instance of Item.</returns>
        </member>
        <member name="M:Aras.IOM.Item.newItem(System.String)">
            <summary>
            Returns a new Item with the specified type.
            <seealso cref="M:Aras.IOM.Item.newItem(System.String)"/>
            </summary>
            <remarks>
            The ItemType name is used to set the 'type' attribute.
            The new Item will have no properties. In order to populate it with default property values
            of its ItemType call Item.fetchDefaultPropertyValues(true) on the item.
            <seealso cref="M:Aras.IOM.Item.fetchDefaultPropertyValues(System.Boolean)"/>
            </remarks>
            <param name="itemTypeName">Name of the ItemType.</param>
            <returns>Newly created instance of Item.</returns>
        </member>
        <member name="M:Aras.IOM.Item.newItem(System.String,System.String)">
             <summary>
             Returns a new Item with the specified type and action.
             <seealso cref="M:Aras.IOM.Item.newItem(System.String,System.String)"/>
             </summary>
             <remarks>
             The ItemType name is used to set the 'type' attribute
             and the action name is used to set the 'action' attribute on the Item.
            
             The new Item will have no properties. In order to populate it with default property values
             of its ItemType call Item.fetchDefaultPropertyValues(true) on the item.
             <seealso cref="M:Aras.IOM.Item.fetchDefaultPropertyValues(System.Boolean)"/>
             </remarks>
             <param name="itemTypeName">Name of the ItemType.</param>
             <param name="action">Name of action (e.g. "get", "update", etc.)</param>
             <returns>Newly created instance of Item.</returns>
        </member>
        <member name="M:Aras.IOM.Item.newInnovator">
            <summary>
            Creates a new Innovator object.
            </summary>
            <returns>New instance of Innovator.</returns>
        </member>
        <member name="F:Aras.IOM.Item.NotAnItemExceptionMessage">
            <summary>
            Exception Message
            </summary>
        </member>
        <member name="F:Aras.IOM.Item.serverConnection">
            <summary>
            The only reason 'serverConnection' is declared 'public' is that it's used
            in templates of server methods (see Innovator\Server\method_config.xml)
            to obtain CCO, e.g. C# template:
            <code>
              Aras.Server.Core.CallContext CCO = ((Aras.Server.Core.IOMConnection) serverConnection).CCO;
            </code>
            The moment we replace CCO on a set of server interfaces available in throught public APIs,
            serverConnection must be declared 'private'
            </summary>
        </member>
        <member name="P:Aras.IOM.Item.dom">
            <summary>
            A reference to the instance of ArasXmlDocument that holds the data for
            the Item in the AML format. ArasXmlDocument is an alias that represents
            System.Xml.XmlDocument when IOM namespace is used from .NET (C#, VBScript)
            and MSXML2.IXMLDOMDocument when it used from COM (JavaScript).
            </summary>
        </member>
        <member name="P:Aras.IOM.Item.node">
            <summary>
            A reference to the &lt;Item&gt; node in the <c>dom</c> for this Item instance.
            The type of <c>node</c> is System.Xml.XmlElement when IOM namespace is used from .NET
            (C#, VBScript) and MSXML2.IXMLDOMElement when it used from COM (JavaScript).
            </summary>
        </member>
        <member name="P:Aras.IOM.Item.nodeList">
            <summary>
            List of &lt;Item&gt; nodes from the <c>dom</c> for this Item instance.
            The type of <c>nodeList</c> is System.Xml.XmlNodeList when IOM namespace is used from .NET
            (C#, VBScript) and MSXML2.IXMLDOMNodeList when it used from COM (JavaScript).
            </summary>
        </member>
        <member name="M:Aras.IOM.Item.loadAML(System.String)">
             <summary>
             This loads the <c>dom</c> property for the Item object with the passed AML.
             The method will also set the <c>node</c> and <c>nodeList</c> properties for the Item object
             according to the content of the loaded AML.
             </summary>
             <remarks>
             In general, loaded AML could present any valid XmlDocument.
             However, user must follow one of supported AML formats in order to benefit from IOM public API.
             The most popular of supported AML formats are shown below:
             <list type="bullet">
              <item>
               <description>
             AMLs representing a Single Innovator Item:
             (a) Item node as a root
              <code>
               &lt;Item &gt;
                     &lt;prop1&gt;a&lt;/prop1&gt;
                     ...
                     &lt;propN&gt;b&lt;/propN&gt;
               &lt;/Item&gt;
              </code>
             (b) SOAP-Result wrapper
              <code>
                 &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=.../&gt;
                     &lt;SOAP-ENV:Body&gt;
                         &lt;Result&gt;
                             &lt;Item &gt;
                                 &lt;prop1&gt;a&lt;/prop1&gt;
                                 ...
                                 &lt;propN&gt;b&lt;/propN&gt;
                             &lt;/Item&gt;
                         &lt;/Result&gt;
                     &lt;/SOAP-ENV:Body&gt;
                 &lt;/SOAP-ENV:Envelope&gt;
              </code>
              </description>
              </item>
              <item>
               <description>
             AMLs representing a Set of Innovator Items:
             (a) AML node as a root
              <code>
                 &lt;AML&gt;
                     &lt;Item ... /&gt;
                      ...
                     &lt;Item ... /&gt;
                 &lt;/AML&gt;
              </code>
             (b) SOAP-Result wrapper
              <code>
                 &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=.../&gt;
                     &lt;SOAP-ENV:Body&gt;
                         &lt;Result&gt;
                             &lt;Item &gt;
                                 &lt;prop1&gt;a&lt;/prop1&gt;
                                 ...
                                 &lt;propN&gt;b&lt;/propN&gt;
                             &lt;/Item&gt;
                             ...
                             &lt;Item &gt;
                                 &lt;prop1&gt;a&lt;/prop1&gt;
                                 ....
                                 &lt;propM&gt;b&lt;/propM&gt;
                             &lt;/Item&gt;
                         &lt;/Result&gt;
                     &lt;/SOAP-ENV:Body&gt;
                 &lt;/SOAP-ENV:Envelope&gt;
              </code>
              </description>
              </item>
              <item>
               <description>
             AML representing an Error:
              <code>
               &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=.../&gt;
                &lt;SOAP-ENV:Body&gt;
                   &lt;SOAP-ENV:Fault&gt;
                      &lt;faultcode&gt;[int]&lt;/faultcode&gt;
                      &lt;faultactor&gt;...&lt;/faultactor&gt;
                      &lt;detail&gt;&lt;...&gt;&lt;/detail&gt;
                   &lt;/SOAP-ENV:Fault&gt;
                &lt;/SOAP-ENV:Body&gt;
               &lt;/SOAP-ENV:Envelope&gt;
              </code>
              </description>
              </item>
              <item>
               <description>
             AML representing a SOAP-Result wrapper for an arbitrary Text:
              <code>
               &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=.../&gt;
                &lt;SOAP-ENV:Body&gt;
                   &lt;Result&gt;[text]&lt;/Result&gt;
                &lt;/SOAP-ENV:Body&gt;
               &lt;/SOAP-ENV:Envelope&gt;
              </code>
              </description>
              </item>
             </list>
            </remarks>
             <param name="AML">
             String with AML script. For more details on format of AML please read "Innovator Programmer's Guide".
             </param>
             <exception cref="T:System.Xml.XmlException">There is a load or parse error in the AML. Item remains uninitialized.</exception>
        </member>
        <member name="M:Aras.IOM.Item.clone(System.Boolean)">
            <summary>
            Clones the item.
            </summary>
            <remarks>
            The method creates a new instance of ArasXmlDocument that is referenced by the cloned item's <c>dom</c> and is
            populated by xml of <c>this.node</c>. Cloned item as well as cloned relationships have new IDs and <c>action</c>
            attributes set to 'add'.
            </remarks>
            <param name="cloneRelationships">
            If <c>true</c>, all relationships of the item are cloned as well.
            </param>
            <returns>
            Cloned item.
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException"><c>this.node</c> or some of its children nodes are read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item._initNodes">
            <summary>
            Initiate Item.node and Item.nodeList from Item.dom that is assumed to be set.
            </summary>
        </member>
        <member name="M:Aras.IOM.Item._checkInternalStructure(System.Int32)">
            <summary>
            Checks that internal structure of the item is consistent, i.e. that item's node(s)
            belong to item's dom.
            NOTE: unfortunately the initial design by exposing item's internal structure allows
                  to set dom\node\nodeList to absolutely arbitrary unrelated XML(s).
            </summary>
            <param name="mode">
            Bitwise value:
            Item.NodeDocMatch - check that this.node is consistent with this.dom
            Item.NodeListDocMatch - check that every node from this.nodeList is consistent with this.dom
            Item.NodeIsItem - check that this.node is 'Item'
            Item.NodeListAreItems - check that every node in this.nodeList is 'Item'
            Item.NodeListAreSiblings - check that all nodes in this.nodeList are siblings
            Item.NodeIsLogical - check that this.node is 'and' | 'or' | 'not'
            </param>
            <returns>'false' if any of the requested checks failed</returns>
        </member>
        <member name="M:Aras.IOM.Item.newXMLDocument">
            <summary>
            Creates new ArasXmlDocument.
            </summary>
            <remarks>Returned ArasXmlDocument has property <c>PreserveWhitespace</c> set to <c>true</c>.</remarks>
            <returns>Instance of System.Xml.ArasXmlDocument</returns>
        </member>
        <member name="M:Aras.IOM.Item.apply(System.String)">
            <summary>
            Sets <c>action</c> attribute on the item and applies the AML, which is the XML of <c>this.dom</c>.
            </summary>
            <param name="action">
            Action name. Overwrites current action set on the item. Note, that action can also
            be set when item is created or by <c>Item.setAction(...)</c> method.
            <seealso cref="M:Aras.IOM.Item.setAction(System.String)"/>
            </param>
            <returns>
            Returns an Item where the <c>dom</c> property is the XML returned from the server.
            The <c>dom</c> may contain an Item, a forest of Items (i.e. a disjoint union of AML trees), or an error.
            </returns>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               The instance has a wrong internal structure (e.g. <c>item.node</c> doesn't belong to <c>item.dom</c>; etc.).
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.apply(System.Collections.Hashtable)">
            <summary>
            Sets specified properties and applies the AML, which is the XML of <c>this.dom</c>.
            </summary>
            <param name="argsObject">
            A collection of name-value pairs where 'name' is interpreted as 'property name' and
            'value' as the property value. Specified in the collection properties are set on
            the item prior to applying its AML.
            <seealso cref="M:Aras.IOM.Item.setProperty(System.String,System.String,System.String)"/>
            </param>
            <returns>
            Returns an Item where the <c>dom</c> property is the XML returned from the server.
            The <c>dom</c> may contain an Item, a forest of Items (i.e. a disjoint union of AML trees), or an error.
            </returns>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               The instance has a wrong internal structure (e.g. <c>item.node</c> doesn't belong to <c>item.dom</c>; etc.).
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.apply">
            <summary>
            Applies the AML, which is the XML of <c>this.dom</c>.
            </summary>
            <returns>
            Returns an Item where the <c>dom</c> property is the XML returned from the server.
            The <c>dom</c> may contain an Item, a forest of Items (i.e. a disjoint union of AML trees), or an error.
            </returns>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               The instance has a wrong internal structure (e.g. <c>item.node</c> doesn't belong to <c>item.dom</c>; etc.).
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.apply(System.String,System.Collections.Hashtable)">
            <summary>
            Sets <c>action</c> attribute on the item; sets specified properties and applies the AML,
            which is the XML of <c>this.dom</c>.
            </summary>
            <param name="action">
            Action name. Overwrites current action set on the item. Note, that action can also
            be set when item is created or by <c>Item.setAction(...)</c> method.
            <seealso cref="M:Aras.IOM.Item.setAction(System.String)"/>
            </param>
            <param name="argsObject">
            A collection of name-value pairs where 'name' is interpreted as 'property name' and
            'value' as the property value. Specified in the collection properties are set on
            the item prior to applying its AML.
            <seealso cref="M:Aras.IOM.Item.setProperty(System.String,System.String,System.String)"/>
            </param>
            <returns>
            Returns an Item where the <c>dom</c> property is the XML returned from the server.
            The <c>dom</c> may contain an Item, a forest of Items (i.e. a disjoint union of AML trees), or an error.
            </returns>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               The instance has a wrong internal structure (e.g. <c>item.node</c> doesn't belong to <c>item.dom</c>; etc.).
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.apply(System.String,System.Collections.Hashtable,System.String)">
            <summary>
            Applies the AML, which is the XML of 'this.dom'.
            </summary>
            <param name="action">
            The action argument is optional and if passed is assigned to the action attribute.
            The action can be assigned when the Item was created or by the setAction() method.
            </param>
            <param name="argsObject">
            A collection of name-value pairs where 'name' is interpreted as 'property name' and
            'value' as the property value. Specified in the collection properties are set on the
            item prior to applying its AML.
            <seealso cref="M:Aras.IOM.Item.setProperty(System.String,System.String)"/>
            </param>
            <param name="location">
            The location argument value is either client or server and is only meaningful on the client side.
            The location is optional and defaults to server. If location is client the Method specified
            by the action attribute value is loaded into the client and is evaluated as
            an anonymous function for the Item object so the code is evaluated with the context object.
            </param>
            <returns>
            Returns an Item where the dom property is the XML returned from the server.
            The dom may contain an Item, a forest of Items (i.e. a disjoint union of AML trees), or an Error.
            </returns>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               The instance has a wrong internal structure (e.g. <c>item.node</c> doesn't belong to <c>item.dom</c>; etc.).
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.getAttribute(System.String)">
            <summary>
            Returns value of the attribute with the specified name on the item's node.
            </summary>
            <param name="attributeName">The qualified name of the attribute.</param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <returns>Attribute value or null if the attribute doesn't exist</returns>
        </member>
        <member name="M:Aras.IOM.Item.getAttribute(System.String,System.String)">
            <summary>
            Returns value of the attribute with the specified name on the item's node.
            </summary>
            <param name="attributeName">The qualified name of the attribute.</param>
            <param name="defaultValue">Default value of the attribute.</param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <returns>Attribute value if the attribute exists, default value otherwise</returns>
        </member>
        <member name="M:Aras.IOM.Item.setAttribute(System.String,System.String)">
            <summary>
            Set the value of the attribute with the specified name on the item's node.
            </summary>
            <param name="attributeName">
            The name of the attribute to create or alter. This is a qualified name. If the name
            contains a colon it is parsed into prefix and local name components.
            </param>
            <param name="attributeValue">The value to set for the attribute.</param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.Xml.XmlException">The specified attribute name contains an invalid character.</exception>
            <exception cref="T:System.ArgumentException">The <c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.removeAttribute(System.String)">
            <summary>
            Removes the specified attribute if the attribute exist; does nothing otherwise.
            </summary>
            <param name="attributeName">The name of the attribute to remove.This is a qualified name.</param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">The <c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getAction">
            <summary>
            Returns the 'action' attribute from the Item node.
            <seealso cref="M:Aras.IOM.Item.getAttribute(System.String)"/>
            </summary>
            <returns>Value of the 'action' attribute if the attribute exists, empty string otherwise</returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.setAction(System.String)">
            <summary>
            Set the 'action' attribute on <c>this.node</c>.
            <seealso cref="M:Aras.IOM.Item.setAttribute(System.String,System.String)"/>
            </summary>
            <param name="action">Action name</param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">The <c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getInnovator">
            <summary>
            Returns instance of Innovator this Item "belongs" to.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.Item.getID">
            <summary>
            Returns ID of the Item node. According to AML standard ID could be set on &lt;Item&gt;
            either as the attribute with name 'id' or as a sub-tag &lt;id&gt; (i.e. item property) or both.
            </summary>
            <returns>ID of the item or empty string if ID was not found.</returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.setID(System.String)">
            <summary>
            Set the <c>id</c> attribute on the Item node. If the item has the property <c>id</c> as well,
            the property is set too.
            </summary>
            <param name="id">ID of the item</param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">The <c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getType">
            <summary>
            Returns value of the 'type' attribute of the Item node.
            </summary>
            <returns>Value of 'type' attribute if the attribute exists, empty string otherwise.</returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.setType(System.String)">
            <summary>
            Set the 'type' attribute on the Item node.
            </summary>
            <param name="itemTypeName">Name of the item type</param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">The <c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getProperty(System.String)">
            <summary>
            Gets value of the property with the specified name.
            </summary>
            <param name="propertyName">Property name.</param>
            <returns>
            If the property is an item-property, ID of the item-property is returned.
            If the property doesn't exist or it's an item-property without ID, <c>null</c>
            is returned ( in JavaScript <c>undefined</c> is return)  ; otherwise the method returns value of the specified property.
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getProperty(System.String,System.String)">
            <summary>
            Gets value of the property with the specified name.
            </summary>
            <param name="propertyName">Property name.</param>
            <param name="defaultValue">Default value of the property.</param>
            <returns>
            If the property is an item-property, ID of the item-property is returned.
            If the property doesn't exist or it's an item-property without ID, the default value
            is returned; otherwise the method returns value of the specified property. Note,
            that if the property has attribute <c>is_null</c> set to <c>1</c> and the property
            value is empty string (e.g. &lt;p1 is_null='1'/&gt; or &lt;p1 is_null='1'&gt;&lt;/p1&gt;) then the
            property value is interpreted as <c>null</c>.
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getProperty(System.String,System.String,System.String)">
            <summary>
            Gets value of the property with the specified name.
            </summary>
            <param name="propertyName">Property name.</param>
            <param name="defaultValue">Default value of the property.</param>
            <param name="lang">
            Language for which the property value has to be returned. If <c>null</c> value is passed,
            the language of the current session is assumed.
            </param>
            <returns>
            If the property is an item-property, ID of the item-property is returned.
            If the property doesn't exist or it's an item-property without ID, the default value
            is returned; otherwise the method returns value of the specified property name
            for the specified language.
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.setProperty(System.String,System.String)">
            <summary>
            Set the property with the specified name. If property doesn't exist on the item, create it
            first and then set.
            </summary>
            <remarks>
            If property has attribute <c>is_null</c> set to <c>1</c> and specified property value
            is not an empty string, the attribute is removed from the property. If specified property
            value is <c>null</c>, then attribute <c>is_null='1'</c> is set on the property and it's
            value is set to empty string (i.e. after setting <c>null</c> value the property tag will
            look like: &lt;prop is_null='1' /&gt;).
            </remarks>
            <param name="propertyName">Property name.</param>
            <param name="propertyValue">Value to be set on the property.</param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">The <c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.setProperty(System.String,System.String,System.String)">
            <summary>
            Set the property with the specified name and language. If property doesn't exist on the item, create it
            first and then set.
            <seealso cref="M:Aras.IOM.Item.setPropertyCondition(System.String,System.String)"/>
            <seealso cref="M:Aras.IOM.Item.setPropertyAttribute(System.String,System.String,System.String)"/>
            </summary>
            <param name="propertyName">Property name.</param>
            <param name="propertyValue">Value to be set on the property.</param>
            <param name="lang">
            Language for which the property needs to be set. If <c>null</c> value is passed,
            the language of the current session is assumed.
            </param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">The <c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.removeProperty(System.String)">
            <summary>
            Removes the property tag with the specified name from the item's dom.
            </summary>
            <remarks>No action if the specified property was not found.</remarks>
            <param name="propertyName">Property name.</param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">The <c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.removeProperty(System.String,System.String)">
            <summary>
            Removes the property tag with the specified name and language from the item's dom.
            </summary>
            <remarks>No action if the specified property was not found.</remarks>
            <param name="propertyName">Property name.</param>
            <param name="lang">
            Language for which the property needs to be removed. If <c>null</c> value is passed,
            the language of the current session is assumed.
            </param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">The <c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getPropertyCondition(System.String)">
            <summary>
            Gets the 'condition' attribute of the property with the specified name.
            <seealso cref="M:Aras.IOM.Item.getPropertyAttribute(System.String,System.String)"/>
            </summary>
            <param name="propertyName">Property name.</param>
            <returns>
            If either property with the specified name or attribute 'condition' on the property
            doesn't exist, returns <c>null</c> ( in JavaScript, returns <c>undefined</c>.)
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getPropertyCondition(System.String,System.String)">
            <summary>
            Gets the 'condition' attribute of the property with the specified name and language.
            <seealso cref="M:Aras.IOM.Item.getPropertyAttribute(System.String,System.String)"/>
            </summary>
            <param name="propertyName">Property name.</param>
            <param name="lang">
            Language for which the property condition has to be returned. If <c>null</c> value is passed,
            the language of the current session is assumed.
            </param>
            <returns>
            If either property with the specified name or attribute 'condition' on the property
            doesn't exist, returns <c>null</c>.
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.setPropertyCondition(System.String,System.String)">
            <summary>
            Sets the attribute 'condition' on the specified property.
            <seealso cref="M:Aras.IOM.Item.setPropertyAttribute(System.String,System.String,System.String)"/>
            </summary>
            <param name="propertyName">Property name</param>
            <param name="condition">Condition value</param>
            <remarks>
            If property tag with the specified name doesn't exist in <c>this.node</c>,
            the property tag is created after which the attribute 'condition' is set on it.
            Note, that if the property tag is created by the method, the property value (i.e. tag's InnerText)
            is empty. See "Innovator Programmer's Guide" for more details on condition syntax.
            </remarks>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">The property node is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.setPropertyCondition(System.String,System.String,System.String)">
            <summary>
            Sets the attribute 'condition' on the specified property with the specified language.
            <seealso cref="M:Aras.IOM.Item.setPropertyAttribute(System.String,System.String,System.String)"/>
            </summary>
            <param name="propertyName">Property name</param>
            <param name="condition">Condition value</param>
            <param name="lang">
            Language for which the property condition has to be set. If <c>null</c> value is passed,
            the language of the current session is assumed.
            </param>
            <remarks>
            If property tag with the specified name and language doesn't exist in <c>this.node</c>,
            the property tag is created after which the attribute 'condition' is set on it.
            Note, that if the property tag is created by the method, the property value (i.e. tag's InnerText)
            is empty. See "Innovator Programmer's Guide" for more details on condition syntax.
            </remarks>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">The property node is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getPropertyAttribute(System.String,System.String)">
            <summary>
            Gets the specified attribute of the property with the specified name.
            <seealso cref="M:Aras.IOM.Item.getPropertyCondition(System.String)"/>
            </summary>
            <param name="propertyName">Property name.</param>
            <param name="attributeName">Attribute name</param>
            <returns>
            If either property with the specified name or the specified attribute on the property
            doesn't exist, returns <c>null</c> ( in JavaScript, returns <c>undefined</c>.)
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getPropertyAttribute(System.String,System.String,System.String)">
            <summary>
            Gets the specified attribute of the property with the specified name.
            <seealso cref="M:Aras.IOM.Item.getPropertyCondition(System.String)"/>
            </summary>
            <param name="propertyName">Property name.</param>
            <param name="attributeName">Attribute name</param>
            <param name="defaultValue">Attribute default value</param>
            <returns>
            If either property with the specified name or the specified attribute on the property
            doesn't exist, returns the default value.
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getPropertyAttribute(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the specified attribute of the property with the specified name and language.
            <seealso cref="M:Aras.IOM.Item.getPropertyCondition(System.String)"/>
            </summary>
            <param name="propertyName">Property name.</param>
            <param name="attributeName">Attribute name</param>
            <param name="defaultValue">Attribute default value</param>
            <param name="lang">
            Language for which the property attribute has to be returned. If <c>null</c> value is passed,
            the language of the current session is assumed.
            </param>
            <returns>
            If either property with the specified name or the specified attribute on the property
            doesn't exist, returns the default value; otherwise returns value of the property attribute
            for the specified language.
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.setPropertyAttribute(System.String,System.String,System.String)">
            <summary>
            Set the attribute for the specified property.
            </summary>
            <remarks>
            If property tag with the specified name doesn't exist
            in <c>this.node</c>, the property tag is created after which the attribute is set on it.
            Note, that if the property tag is created by the method, the property value (i.e. tag's InnerText)
            is empty.
            <seealso cref="M:Aras.IOM.Item.setPropertyCondition(System.String,System.String)"/>
            </remarks>
            <param name="propertyName">Property name</param>
            <param name="attributeName">Attribute name</param>
            <param name="attributeValue">Attribute value to be set</param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.Xml.XmlException">The specified attribute name contains an invalid character.</exception>
            <exception cref="T:System.ArgumentException">The property node\tag is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.setPropertyAttribute(System.String,System.String,System.String,System.String)">
            <summary>
            Set the attribute for the specified property and language.
            </summary>
            <remarks>
            If property tag with the specified name and language doesn't exist
            in <c>this.node</c>, the property tag is created after which the attribute is set on it.
            Note, that if the property tag is created by the method, the property value (i.e. tag's InnerText)
            is empty.
            <seealso cref="M:Aras.IOM.Item.setPropertyCondition(System.String,System.String)"/>
            </remarks>
            <param name="propertyName">Property name</param>
            <param name="attributeName">Attribute name</param>
            <param name="attributeValue">Attribute value to be set</param>
            <param name="lang">
            Language for which the property attribute has to be set. If <c>null</c> value is passed,
            the language of the current session is assumed.
            </param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.Xml.XmlException">The specified attribute name contains an invalid character.</exception>
            <exception cref="T:System.ArgumentException">The property node\tag is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.removePropertyAttribute(System.String,System.String)">
            <summary>
            Modifies item's node by removing attribute on the specified property.
            </summary>
            <remarks>No action if either specified property or attribute were not found.</remarks>
            <param name="propertyName">Name of the property</param>
            <param name="attributeName">Name of the attribute</param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">The <c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.removePropertyAttribute(System.String,System.String,System.String)">
            <summary>
            Modifies item's node by removing attribute on the specified property with the specified
            <c>xml:lang</c> attribute.
            </summary>
            <remarks>No action if either specified property or attribute were not found.</remarks>
            <param name="propertyName">Name of the property</param>
            <param name="attributeName">Name of the attribute</param>
            <param name="lang">
            Language for which the property attribute needs to be removed. If <c>null</c> value is passed,
            the language of the current session is assumed.
            </param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">The <c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getPropertyItem(System.String)">
            <summary>
            Gets item-property by name.
            </summary>
            <remarks>
            The method tries to find the specified property on the item. If found, the propery may either
            a) contain child &lt;Item&gt; node or b) contain just id. In case a), the child &lt;Item&gt; node is
            used for constructing the returned Item; note, that in this case the returned item shares <c>dom</c> with
            <c>this</c> item. In case b), an attempt is made to construct a simple Item with the following <c>dom</c>:
             &lt;Item type='...' id='...'&gt;&lt;id&gt;...&lt;/id&gt;&lt;/Item&gt;
            to be returned. Note that in this case, the returned Item doesn't share its <c>dom</c> with <c>this</c>.
            </remarks>
            <param name="propertyName">Property name.</param>
            <returns>
            Found item-property. If by some reason an item can't be returned (e.g. 'this.dom' doesn't have
            a property with the specified name or the property contains just id but type of
            the item-property is unknown), the method returns null.
            NOTE: If specified property name is 'id' then the method returns <c>this</c> item.
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.setPropertyItem(System.String,Aras.IOM.Item)">
            <summary>
            Sets a property to an item reference.
            </summary>
            <remarks>
            The method is trying to find the property with the specified name on the item. If not found, creates it.
            If the property's node contains child &lt;Item&gt; node, replace it with the passed item, else append
            passed item to the property's node. After the method was called, the passed item shares its
            'dom' with <c>this</c> (i.e. 'dom' property of both instances points to the same instance of ArasXmlDocument).
            </remarks>
            <param name="propertyName">Name of the property</param>
            <param name="item">
            Instance of Item whose 'node' appends or replaces child &lt;Item&gt; node under the specified property.
            </param>
            <returns>
            Instance of the class that represent the item-property. Returned item shares its 'dom' with <c>this</c> (i.e.
            <c>dom</c> property of both instances points to the same instance of ArasXmlDocument).
            </returns>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               The instance has a wrong internal structure (e.g. <c>item.node</c> doesn't belong to <c>item.dom</c>; etc.).
              </item>
             </list>
            </exception>
            <exception cref="T:System.ArgumentException">
             <list type="bullet">
              <item>
              The item passed to the method doesn't represent a single item.
              </item>
              <item>
               <c>this.node</c> is read-only.
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.setFileProperty(System.String,System.String)">
            <summary>
            Set a file to an item reference.
            </summary>
            <remarks>
            This method will allow to add/update a value of property with data type Item and data source File.
            Internally it will be created an item "File" with action "add" and set this new item to the property with name "propertyName".
            When Apply method would be called on the container item, new file will uploaded to the user's default vault server.</remarks>
            <param name="propertyName">name of property of type File for which new physical file should be set</param>
            <param name="pathToFile">path to physical file which should be attached to property of the item</param>
            <returns>Item of type File generated by method</returns>
            <exception cref="T:System.ArgumentNullException">
             <list type="bullet">
              <item>
               Agrument "propertyName" is null or empty.
              </item>
              <item>
               Agrument "pathToFile" is null or empty.
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.setFilePropertyViaStream(System.String,System.String,System.IO.Stream)">
            <summary>
            Set a file stream to an item reference.
            </summary>
            <remarks>
            This method will allow to add/update a value of property with data type Item and data source File.
            Internally it will be created an item "File" with action "add" and set this new item to the property with name "propertyName".
            When Apply method would be called on the container item, new file will uploaded to the user's default vault server.</remarks>
            <param name="propertyName">name of property of type File for which new physical file should be set</param>
            <param name="fileName">name of the file which should be attached to property of the item</param>
            <param name="stream">stream with the file content which should be uploaded to Vault server</param>
            <returns>Item of type File generated by method</returns>
            <exception cref="T:System.ArgumentNullException">
             <list type="bullet">
              <item>
               Agrument "propertyName" is null or empty.
              </item>
              <item>
               Agrument "fileName" is null or empty.
              </item>
              <item>
               Agrument "stream" is null.
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.fetchFileProperty(System.String,System.String,Aras.IOM.FetchFileMode)">
            <summary>
            Downloads a file to target path.
            </summary>
            <param name="propertyName">Name of property of type File for which physical file needs to be downloaded</param>
            <param name="targetPath">Path to folder or file to which physical file should be downloaded. Here is examples of possible values:
            - Folder path, example: C:/temp/
            - Full file path, example: C:/temp/1.txt
            </param>
            <param name="mode">Responsible for reflecting in which mode operation should be completed. <seealso cref="T:Aras.IOM.FetchFileMode"/></param>
            <returns>Item of type File. Property "checkedout_path" of item will be populated by the path to which file was downloaded.</returns>
            <exception cref="T:System.ArgumentNullException">
             <list type="bullet">
              <item>
               Agrument "propertyName" is null or empty.
              </item>
              <item>
               Agrument "targetPath" is null or empty.
              </item>
             </list>
            </exception>
            <exception cref="T:System.ArgumentException">
             <list type="bullet">
              <item>
               Agrument "mode" is not a part of FetchFileMode enumeration.
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.fetchFilePropertyWithStream(System.String)">
            <summary>
            Downloads a file to target path via stream
            </summary>
            <param name="propertyName">Name of property of type File for which physical file needs to be downloaded</param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.Item.fetchDefaultPropertyValues(System.Boolean)">
            <summary>
            Fetches from server default values for all properties of the item's ItemType and sets them on the item.
            </summary>
            <remarks>
            If a property doesn't have a default value, the property is not set.
            </remarks>
            <param name="overwrite_current">If 'true', overwrite existing property values.</param>
            <returns>
            If fetching failed, returns "error" item that contains information about the failure. Otherwise, returns
            <c>this</c> with set property values.
            </returns>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
                The instance doesn't represent a single item.
              </item>
              <item>
                The item doesn't have attribute 'type' set.
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.getErrorDetail">
            <summary>
            Returns details of the error item.
            </summary>
            <remarks>
            In most cases error details contains a low level error details (e.g. actual SQL error message)
            obtained from server.
            <seealso cref="M:Aras.IOM.Item.setErrorDetail(System.String)"/>
            </remarks>
            <returns>If the instance is not an error item an empty string is retured.</returns>
        </member>
        <member name="M:Aras.IOM.Item.setErrorDetail(System.String)">
            <summary>
            Sets the detailed error message of the error item.
            <seealso cref="M:Aras.IOM.Item.getErrorDetail"/>
            </summary>
            <remarks>
            Error details are always placed in &lt;detail&gt; tag inside <c>CDATA</c> block.
            If the instance is not an error item the method does nothing.
            </remarks>
            <param name="detail">
            Error details that are set as <c>InnerText</c> on
            &lt;detail&gt; element of &lt;Fault&gt; without any pre-processing, so symbols like
            '&lt;', '&gt;', etc. will be escaped.
            </param>
        </member>
        <member name="M:Aras.IOM.Item.getErrorString">
            <summary>
            Returns the error message.
            <seealso cref="M:Aras.IOM.Item.setErrorString(System.String)"/>
            </summary>
            <returns>
            The returned value is obtained from the &lt;faultstring&gt; tag of &lt;Fault&gt;.
            If the instance is not an error item an emtpy string is returned.
            </returns>
        </member>
        <member name="M:Aras.IOM.Item.setErrorString(System.String)">
            <summary>
            Sets the error message of the error item.
            </summary>
            <remarks>
            Passed value is set on &lt;faultstring&gt; tag of &lt;Fault&gt;. If the instance is not
            an error item the method does nothing.
            </remarks>
            <param name="errorMessage">Error message to be set.</param>
        </member>
        <member name="M:Aras.IOM.Item.getErrorWho">
            <summary>
            Same as getErrorCode().
            <seealso cref="M:Aras.IOM.Item.getErrorCode"/>
            </summary>
            <returns>Value of &lt;faultcode&gt;.</returns>
        </member>
        <member name="M:Aras.IOM.Item.getErrorCode">
            <summary>
            Gets error code of the "error" item.
            <seealso cref="M:Aras.IOM.Item.getErrorCode"/>
            </summary>
            <returns>Value of &lt;faultcode&gt;. If the item is not an "error" item, empty string is returned.</returns>
        </member>
        <member name="M:Aras.IOM.Item.getFileName">
            <summary>
            Returns the filename for the attached file.
            This is only is meaningful if the type="File", otherwise throws an exception.
            </summary>
            <returns>Name of the physical file attached to the Item of type "File".</returns>
        </member>
        <member name="M:Aras.IOM.Item.setErrorWho(System.String)">
            <summary>
            Same as setErrorCode().
            <seealso cref="M:Aras.IOM.Item.setErrorCode(System.String)"/>
            </summary>
            <param name="who">Value to set</param>
        </member>
        <member name="M:Aras.IOM.Item.setErrorCode(System.String)">
            <summary>
            Sets error code on the "error" item.
            <seealso cref="M:Aras.IOM.Item.setErrorCode(System.String)"/>
            </summary>
            <remarks>If the item is not an "error" item, the method does nothing.</remarks>
            <param name="errcode">Error code to set.</param>
        </member>
        <member name="M:Aras.IOM.Item.setFileName(System.String)">
            <summary>
            Set the filename for the attached file. This is only is meaningful if the type="File"
            and will cause the apply() to submit multipart/form-data to the VaultServer.
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Aras.IOM.Item.getErrorSource">
            <summary>
            Returns the content of the &lt;faultactor&gt; element of SOAP Fault element.
            </summary>
            <returns>If the instance is not an error item, an empty string is returned.</returns>
        </member>
        <member name="M:Aras.IOM.Item.setErrorSource(System.String)">
            <summary>
            Sets the &lt;faultactor&gt; of the SOAP Fault element. If the instance is not an error item, the method does nothing.
            </summary>
            <param name="source">Value to be set on 'faultactor' element of SOAP Fault.</param>
        </member>
        <member name="M:Aras.IOM.Item.getResult">
            <summary>
            Returns 'InnerText' property of ArasXmlNode with xpath = Item.XPathResult from the
            item's dom.
            </summary>
            <returns>
            If <c>this.dom</c> is <c>null</c> or node with xpath = Item.XPathResult was not found, the method
            returns an empty string.
            </returns>
        </member>
        <member name="M:Aras.IOM.Item.email(Aras.IOM.Item,Aras.IOM.Item)">
            <summary>
            Send e-mail to the specified identity. In order to do so, the method sends a special
            request to the Innovator server.
            </summary>
            <param name="emailItem">Item of type "EMail Message"</param>
            <param name="identityItem">Item of type "Identity"</param>
            <returns>'true' if mail was successfully sent, 'false' otherwise</returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.isNew">
            <summary>
            Checks the attribute 'isNew' on the item.
            </summary>
            <returns>'true' if the Item has the attribute 'isNew' set to '1', 'false' otherwise</returns>
        </member>
        <member name="M:Aras.IOM.Item.isRoot">
            <summary>
            Checks if <c>this.node</c> is the root item in <c>this.dom</c>.
            </summary>
            <returns>'true' if <c>this.node</c> is the top 'Item' node in <c>this.dom</c>, 'false' otherwise</returns>
        </member>
        <member name="M:Aras.IOM.Item.isCollection">
            <summary>
            Checks if the instance represents a set of items and not a single item.
            </summary>
            <returns>'true' if <c>this.nodeList != null AND this.node == null</c>, 'false' otherwise</returns>
        </member>
        <member name="M:Aras.IOM.Item.isLocked">
            <summary>
            Fetches from the server the locked status of the item using the item's ID.
            </summary>
            <returns>
            <list type="bullet">
             <item>
              <description>
              0  not locked
              </description>
             </item>
             <item>
              <description>
              1  locked by user
              </description>
             </item>
             <item>
              <description>
              2  locked by other
              </description>
             </item>
            </list>
            </returns>
            <remarks>
            The method sends a request to the server to fetch item's lock status only if the item
            doesn't have property <c>locked_by_id</c> set, otherwise the value of the property is returned.
            <seealso cref="M:Aras.IOM.Item.fetchLockStatus"/>
            <seealso cref="M:Aras.IOM.Item.getLockStatus"/>
            </remarks>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.fetchLockStatus">
            <summary>
            Fetches from the server the locked status of the item using the item's ID.
            </summary>
            <returns>
            <list type="bullet">
             <item>
              <description>
              -1 - failed to fetch item's lock status from server
              </description>
             </item>
             <item>
              <description>
              0  not locked
              </description>
             </item>
             <item>
              <description>
              1  locked by user
              </description>
             </item>
             <item>
              <description>
              2  locked by other
              </description>
             </item>
            </list>
            </returns>
            <remarks>
            The method sends a request to the server in order to fetch the latest lock status of the item on server and
            updates the item's property <c>locked_by_id</c>.
            <seealso cref="M:Aras.IOM.Item.getLockStatus"/>
            </remarks>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               The item's type or ID is not set.
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.getLockStatus">
            <summary>
            Gets item's lock status based on the property <c>locked_by_id</c>.
            </summary>
            <returns>
            <list type="bullet">
             <item>
              <description>
              0  not locked
              </description>
             </item>
             <item>
              <description>
              1  locked by user
              </description>
             </item>
             <item>
              <description>
              2  locked by other
              </description>
             </item>
            </list>
            </returns>
            <remarks>
            If the property <c>locked_by_id</c> is not set on item's AML, the method returns 0. In order to fetch
            item's lock status from the server use <c>fetchLockStatus</c>.
            <seealso cref="M:Aras.IOM.Item.fetchLockStatus"/>
            <seealso cref="M:Aras.IOM.Item.getProperty(System.String)"/>
            </remarks>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.isError">
            <summary>
            Checks if the item is an "error item".
            </summary>
            <returns>
            'true' if the item is an "error item" (i.e. <c>this.dom</c> has a top_level tag <c>Item.XPathFault</c>),
            'false' otherwise
            </returns>
        </member>
        <member name="M:Aras.IOM.Item.isEmpty">
            <summary>
            This is the replacement for the old hasFault() function
            with the Boolean argument of false to indicate to ignore the zero based faults.
            </summary>
            <returns>'true' if the item is an error but has <c>faultcode="0"</c>, 'false' otherwise.</returns>
        </member>
        <member name="M:Aras.IOM.Item.appendItem(Aras.IOM.Item)">
            <summary>
            Appends passed item to <c>this.nodeList</c>.
            </summary>
            <remarks>
            The method works <b>only</b> if all nodes from <c>this.nodeList</c> (if available) and <c>this.node</c>
            are siblings; otherwise an exception is thrown. The method does the following:
            <list type="bullet">
             <item>
              <description>
              <c>this.node != null</c>: a) moves <c>this.node</c> into <c>this.nodeList</c> providing that all of them
              are siblings (<c>this.node</c> is set to null after that); b) appends passed item's <c>node</c> into
              <c>this.nodeList</c>; if passed item's <c>node</c> is not set (is <c>null</c>), appends to <c>this.nodeList</c>
              all nodes from passed item's <c>nodeList</c>. Note, that either passed item's <c>node</c> or <c>nodeList</c>
              is appended to <c>this.nodeList</c>, but not both.
              </description>
             </item>
             <item>
              <description>
              <c>this.node == null AND this.nodeList != null</c>: a) checks that all nodes in the <c>this.nodeList </c>
              are siblings; b) appends passed item nodes to <c>this.nodeList</c> same way as in the case <c>this.node != null</c>
              </description>
             </item>
             <item>
              <description>
              <c>this.node == null AND this.nodeList == null</c>: throws an exception.
              </description>
             </item>
            </list>
            Note, that the item passed as the argument to the method is not changed in the method.
            </remarks>
            <param name="item">Item to append</param>
            <exception cref="T:System.Exception">
            <list type="bullet">
             <item>
               <c>this</c> has invalid internal structure (e.g. <c>this.node</c> is from a different DOM then <c>this.dom</c>, etc.)
             </item>
             <item>
               <c>this.node</c> is not a sibling with nodes from <c>this.nodeList</c> or (if <c>this.node == null</c>) not
               all nodes from <c>this.nodeList</c> are siblings.
             </item>
            </list>
            </exception>
            <exception cref="T:System.ArgumentException">
            Passed item has invalid internal structure (e.g. item's <c>node</c> is from a different DOM then item's <c>dom</c>, etc.)
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.removeItem(Aras.IOM.Item)">
            <summary>
            Remove specified item from the <c>this.dom</c>
            </summary>
            <remarks>
            <c>this</c> has to represent a collection of items. Passed item's <c>dom</c> must reference the
            same ArasXmlDocument as <c>this.dom</c>. If passed item's <c>node</c> is not <c>null</c>, the node and all
            its sub-items are removed from <c>this.dom</c>; else if passed item's <c>nodeList</c> is not <c>null</c>,
            every element of the list and its children are removed from <c>this.dom</c>. If before the removal either
            <c>this.node</c> or <c>this.nodeList</c> referenced any of the removed items, those properties are adjusted, i.e.
            <c>this.node</c> is set to <c>null</c> and\or <c>this.nodeList</c> is stripped of items that were
            just removed.
            </remarks>
            <param name="item">Item to be removed.</param>
            <exception cref="T:System.Exception">The instance doesn't represent a collection of items.</exception>
            <exception cref="T:System.ArgumentException">
             <list type="bullet">
              <item>
               Passed item and <c>this</c> don't reference the same ArasXmlDocument.
              </item>
              <item>
               Passed item has wrong internal strucure; e.g. both <c>node</c> and <c>nodeList</c> are <c>null</c>; etc.
              </item>
              <item>
               Can't remove an item node as its parent node is read-only.
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.getItemsByXPath(System.String)">
            <summary>
            Gets an item (single or collection) resolving xpath specified.
            </summary>
            <remarks>
            The method applies the specified <c>xpath</c> on <c>this.node</c> if it's set or on <c>this.dom</c> otherwise.
            If a single &lt;Item&gt; node was found, it's assigned to the <c>node</c>. If 0 or more than 1
            &lt;Item&gt; nodes were found, it's referenced by the <c>nodeList</c> of the returned item.
            </remarks>
            <param name="xpath">XPath for selecting &lt;Item&gt; nodes</param>
            <returns>
            Instance of the class that represents either a single item or a collection of items. The collection could be empty.
            The returned item shares its <c>dom</c> with <c>this</c> item, i.e. returned item <c>dom</c> and <c>this.dom</c>
            reference the same instance of ArasXmlDocument.
            </returns>
            <exception cref="T:System.Exception">Item's internal structure is wrong (e.g. <c>this.dom == null</c>)</exception>
            <exception cref="T:System.ArgumentException">Specified XPath doesn't resolve to &lt;Item&gt; nodes.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getItemCount">
            <summary>
            Returns the number of items that the instance represents.
            </summary>
            <returns>
            <list type="bullet">
             <item>
              <description>'0' if the item is an error with error code 0 (No Items Found).</description>
             </item>
             <item>
              <description>'-1' if the item is an error of any other type</description>
             </item>
             <item>
              <description>
              N (where N is a positive integer for number of items that the instance represents) if the item is not an error
              </description>
             </item>
            </list>
            </returns>
        </member>
        <member name="M:Aras.IOM.Item.getItemByIndex(System.Int32)">
            <summary>
            Gets an item by index.
            </summary>
            <remarks>
            The returned item shares the <c>dome</c> with <c>this</c> item.
            </remarks>
            <param name="index">0 based index</param>
            <returns>
            Found item. Returned item shares its <c>dom</c> with <c>this</c> item (i.e. returned item and <c>this</c>
            item <c>dom</c> property reference the same instance of ArasXmlDocument).
            </returns>
            <exception cref="T:System.Exception">The instance does not represent a collection of items.</exception>
            <exception cref="T:System.IndexOutOfRangeException">Passed index is out of range.</exception>
        </member>
        <member name="M:Aras.IOM.Item.lockItem">
            <summary>
            Applies the 'lock' action on the item and returns the server response.
            </summary>
            <returns>
            Response item from the server.
            </returns>
            <remarks>
            The method sends a request to the server to lock the item. This is almost the equivalent to
            <c>this.apply("lock")</c> except that: a) the method checks that item's
            type and ID are set before sending the request; b) the method updates <c>locked_by_id</c> property
            of <c>this</c> item with the value obtained from the server if the server response is not an error.
            <seealso cref="M:Aras.IOM.Item.apply"/>
            </remarks>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               The item's type or ID is not set.
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.unlockItem">
            <summary>
            Applies the 'unlock' action on the item and returns the server response.
            </summary>
            <returns>
            Response item from the server.
            </returns>
            <remarks>
            The method sends a request to the server to unlock the item. This is almost the equivalent to
            <c>this.apply("unlock")</c> except that: a) the method checks that item's
            type and ID are set before sending the request; b) the method removes <c>locked_by_id</c> property
            of <c>this</c> item if the server response is not an error.
            <seealso cref="M:Aras.IOM.Item.apply"/>
            </remarks>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               The item's type or ID is not set.
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.fetchRelationships(System.String,System.String,System.String)">
            <summary>
            Fetches relationships of specified type from the server and sets them on the item. Specified
            select list and order are set on the request AML.
            </summary>
            <remarks>
            The method performs a server request. If relationships of the specified type already exist on <c>this.node</c>
            they are removed and replaced by the relationships fetched from the server.
            </remarks>
            <param name="relationshipTypeName">Name of the relationship type.</param>
            <param name="selectList">
            Select list that is set on attribute 'select' of the request (see "Programmer's Guide" for more info on
            format of select list).
            </param>
            <param name="orderBy">
            The value is set on attribute 'order_by' of the request (see "Programmer's Guide" for more info on
            format of 'order_by').
            </param>
            <returns>If server request failed the method returns an "error" item; otherwise it returns <c>this</c>.</returns>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               Item's ID is not set.
              </item>
             </list>
            </exception>
            <exception cref="T:System.ArgumentException">Relationship type either <c>null</c> or empty.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getRelatedItem">
            <summary>
            Gets related item of the relationship.
            </summary>
            <remarks>
            Tries to find <c>related_id</c> property on the item. If found, the propery may either
            a) contain child &lt;Item&gt; node or b) contain just id. In case a), the child &lt;Item&gt; node is
            used for constructing the returned Item; note, that in this case the returned item shares <c>dom</c> with
            <c>this</c> item. In case b), an attempt is made to construct a simple Item with the following <c>dom</c>:
             &lt;Item type='...' id='...'&gt;&lt;id&gt;...&lt;/id&gt;&lt;/Item&gt;
            to be returned. Note that in this case, the returned Item doesn't share its <c>dom</c> with <c>this</c>.
            <seealso cref="M:Aras.IOM.Item.getRelatedItemID"/>
            </remarks>
            <seealso cref="M:Aras.IOM.Item.getPropertyItem(System.String)"/>
            <returns>
            Related item. If by some reason the related item can't be returned (e.g. 'this.dom' doesn't have
            'related_id' property or type of the related item is unknown), the method returns null.
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.setRelatedItem(Aras.IOM.Item)">
            <summary>
            Sets the 'related_id' property to an item reference.
            <seealso cref="M:Aras.IOM.Item.createRelatedItem(System.String,System.String)"/>
            </summary>
            <remarks>
            The method is trying to find 'related_id' property on the item. If not found, creates it.
            If 'related_id' contains child &lt;Item&gt; node, replace it with the passed item, else append
            passed item to the 'related_id' node. After the method was called, the passed related item shares its
            <c>dom</c> with <c>this</c> item (i.e. <c>dom</c> property of both instances reference the
            same instance of ArasXmlDocument).
            </remarks>
            <param name="ritem">Related item</param>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               The instance has a wrong internal structure (e.g. <c>item.node</c> doesn't belong to <c>item.dom</c>; etc.).
              </item>
             </list>
            </exception>
            <exception cref="T:System.ArgumentException">
             <list type="bullet">
              <item>
              The item passed to the method doesn't represent a single item.
              </item>
              <item>
               <c>this.node</c> is read-only.
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.getRelationships">
            <summary>
            Returns an item that is a collection of all relationships items available on the instance.
            </summary>
            <remarks>
            The methods does <b>not</b> make a request to the server but rather returns relationships items
            available on <c>this.dom</c> in memory. If order to get relationships from server please use
            <c>fetchRelationships(...)</c> methods.
            <seealso cref="M:Aras.IOM.Item.fetchRelationships(System.String)"/>
            </remarks>
            <returns>
            Item that is a collection of all relationships items available on the instance. If <c>this</c> doesn't
            have relationships, the returned item <c>nodeList</c> will be empty.
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.addRelationship(Aras.IOM.Item)">
            <summary>
            Add specified item as a relationship item to the instance.
            </summary>
            <remarks>
            No checking that passed item is a relationship of <c>this</c> is performed. The method just inserts
            passed item's <c>node</c> under 'Relationships' node inside <c>this.node</c> (if 'Relationships' node
            doesn't exist, it's created). After the method was called the item passed as argument to the method
            shares its <c>dom</c> with <c>this</c> (i.e. both items reference the same instance of ArasXmlDocument
            through their <c>dom</c> properties).
            </remarks>
            <param name="item">Items to be added to item's relationships.</param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">The argument is not a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getRelationships(System.String)">
            <summary>
            Returns an item that is a collection of relationships item with specified type available on the instance.
            </summary>
            <remarks>
            The methods does <b>not</b> make a request to the server but rather returns relationships items
            available on <c>this.dom</c> in memory. If order to get relationships from server please use
            <c>fetchRelationships(...)</c> methods.
            <seealso cref="M:Aras.IOM.Item.fetchRelationships(System.String)"/>
            </remarks>
            <param name="itemTypeName">Type of relationship.</param>
            <returns>
            Item that is a collection of relationships items with specified name available on the instance. If <c>this</c> doesn't
            have any relationships of this type, the returned item <c>nodeList</c> will be empty.
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.removeRelationship(Aras.IOM.Item)">
            <summary>
            Removes the passed item's node from the 'Relationships' node of the item.
            </summary>
            <remarks>
            Method doesn't sent a request to the server, it just edits item's DOM in memory. Passed item
            must share its <c>dom</c> with <c>this</c> item, i.e. both items <c>dom</c> must reference the
            same instance of ArasXmlDocument.
            </remarks>
            <param name="item">The relationship item to be removed.</param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">
             <list type="bullet">
              <item>
               Passed item doesn't represent a single item.
              </item>
              <item>
               Passed item doesn't share its <c>dom</c> with <c>this</c> item.
              </item>
              <item>
               Passed item is not a relationship.
              </item>
              <item>
               'Relationship' node of <c>this</c> is read-only.
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.getRelatedItemID">
            <summary>
            Tries to find related item (xpath: "./related_id") on item's node and
            returns its ID.
            <seealso cref="M:Aras.IOM.Item.getRelatedItem"/>
            </summary>
            <returns>ID of the related item. If related item not found, return empty string.</returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getParentItem">
            <summary>
            Returns a parent item of the instance.
            </summary>
            <remarks>
            The returned parent item is constructed the following way:
            <list type="bullet">
             <item>
              <c>dom = this.dom</c>
             </item>
             <item>
              <c>node = this.node.SelectSingleItem( "ancestor::Item" )</c>
             </item>
            </list>
            Note, that returned item <c>dom </c> and <c>this.dom</c> reference the same instance of ArasXmlDocument.
            </remarks>
            <returns>
            If <c>this.node</c> doesn't have an ancestor::Item, <c>null</c> is returned.
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.isLogical">
            <summary>
            Find out if the item's node is a "logical" node ("AND", "OR", "NOT").
            </summary>
            <returns>
            <c>true</c> if the <c>this.node != null</c> and <c>this.node.LocalName</c> is "AND" | "OR" | "NOT"
            (case insensitive); <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Aras.IOM.Item.newAND">
            <summary>
            Inserts logical node with tag &lt;and&gt; under the parent node, which can be Item or Logical,
            and returns an Item Object that represents a newly inserted logical node.
            </summary>
            <remarks>
            Logical item is an item which <c>node</c> references to the "logical" tag, i.e. 'or', 'and' or 'not'. Logical
            items are used to build request conditions where item's properties serve as condition expressions.
            User has to use <c>setProperty(...), setPropertyCondition(...)</c> to set condition expressions on logical
            item (see example below). It's possible to build nested logical request conditions by calling <c>newOR()</c>,
            <c>newAND()</c> or <c>newNOT()</c> on a logical item.
            <seealso cref="M:Aras.IOM.Item.newOR"/>
            <seealso cref="M:Aras.IOM.Item.newNOT"/>
            </remarks>
            <example>
            <code>
            ...
            var myItem = myInnovator.newItem('Foo','get');
            var logicalAND = myItem.newAND();
            logicalAND.setProperty('foo','bar1');
            var nestedOR = logicalAND.newOR();
            nestedOR.setProperty('foo2','bar2');
            nestedOR.setProperty('foo3','bar3');
            //The following line of code is optional because 'eq' is the default property condition:
            logicalOR.setPropertyCondition('foo3', 'eq');
            ...
            </code>
            </example>
            <returns>Logical "AND" item. Returned item shares <c>dom</c> with <c>this</c> item.</returns>
            <exception cref="T:System.Exception">
            If the instance is neither a single regular item (i.e. item referencing &lt;Item&gt; node) nor a logical item.
            </exception>
            <exception cref="T:System.ArgumentException"><c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.newOR">
            <summary>
            Inserts logical node with tag &lt;or&gt; under the parent node, which can be Item or Logical,
            and returns an Item Object that represents a newly inserted logical node.
            </summary>
            <remarks>
            Logical item is an item which <c>node</c> references to the "logical" tag, i.e. 'or', 'and' or 'not'. Logical
            items are used to build request conditions where item's properties serve as condition expressions.
            User has to use <c>setProperty(...), setPropertyCondition(...)</c> to set condition expressions on logical
            item (see example below). It's possible to build nested logical request conditions by calling <c>newOR()</c>,
            <c>newAND()</c> or <c>newNOT()</c> on a logical item.
            <seealso cref="M:Aras.IOM.Item.newAND"/>
            <seealso cref="M:Aras.IOM.Item.newNOT"/>
            </remarks>
            <example>
            <code>
            ...
            var myItem = myInnovator.newItem('Foo','get');
            var logicalOR = myItem.newOR();
            logicalOR.setProperty('foo1','bar1, bar2');
            logicalOR.setPropertyCondition('foo1', 'in');
            logicalOR.setProperty('foo2','junk');
            //The following line of code is optional because 'eq' is the default property condition:
            logicalOR.setPropertyCondition('foo2', 'eq');
            ...
            </code>
            </example>
            <returns>Logical "OR" item. Returned item shares <c>dom</c> with <c>this</c> item.</returns>
            <exception cref="T:System.Exception">
            If the instance is neither a single regular item (i.e. item referencing &lt;Item&gt; node) nor a logical item.
            </exception>
            <exception cref="T:System.ArgumentException"><c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.newNOT">
            <summary>
            Inserts logical node with tag &lt;not&gt; under the parent node, which can be Item or Logical,
            and returns an Item Object that represents a newly inserted logical node.
            </summary>
            <remarks>
            Logical item is an item which <c>node</c> references to the "logical" tag, i.e. 'or', 'and' or 'not'. Logical
            items are used to build request conditions where item's properties serve as condition expressions.
            User has to use <c>setProperty(...), setPropertyCondition(...)</c> to set condition expressions on logical
            item (see example below). It's possible to build nested logical request conditions by calling <c>newOR()</c>,
            <c>newAND()</c> or <c>newNOT()</c> on a logical item.
            <seealso cref="M:Aras.IOM.Item.newOR"/>
            <seealso cref="M:Aras.IOM.Item.newAND"/>
            </remarks>
            <example>
            <code>
            ...
            var myItem = myInnovator.newItem('Foo','get');
            var logicalNOT = myItem.newNOT();
            logicalNOT.setProperty('foo','bar1');
            //The following line of code is optional because 'eq' is the default property condition:
            logicalNOT.setPropertyCondition('foo', 'eq');
            ...
            </code>
            <code>
            ...
            var myItem = myInnovator.newItem('Foo','get');
            var logicalNOT = myItem.newNOT();
            logicalNOT.setProperty('foo','bar1, bar2);
            logicalNOT.setPropertyCondition('foo','in')
            ...
            </code>
            </example>
            <returns>Logical "NOT" item. Returned item shares <c>dom</c> with <c>this</c> item.</returns>
            <exception cref="T:System.Exception">
            If the instance is neither a single regular item (i.e. item referncing &lt;Item&gt; node) nor a logical item.
            </exception>
            <exception cref="T:System.ArgumentException"><c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.removeLogical(Aras.IOM.Item)">
            <summary>
            Removes logical node referenced by the passed item from <c>this.node</c>.
            </summary>
            <remarks>
            It's assumed that passed item's <c>node</c> is a child of <c>this.node</c>.
            </remarks>
            <param name="logicalItem">Logical item to be removed.</param>
            <exception cref="T:System.Exception">
            The instance is neither a single regular item (i.e. item referencing &lt;Item&gt; node) nor a logical item.
            </exception>
            <exception cref="T:System.ArgumentException">
             <list type="bullet">
              <item>
               Passed item is not a logical item.
              </item>
              <item>
               The passed item is not a child of <c>this</c> item. Or <c>this.node</c> is read-only.
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.promote(System.String,System.String)">
            <summary>
            Promote item to the specified state.
            </summary>
            <remarks>
            The method sends a request to the server to promote item and returns the response. Note that <c>this</c>
            item is not modified by the method.
            </remarks>
            <param name="state">State to promote.</param>
            <param name="comments">
            If ItemType of the item is configured to log "history" records when items of the ItemType are created\promoted\etc.,
            (i.e. if the ItemType's property "save_history" is set to "1") then the <c>comments</c>
            will be used as a comment for the "history" record about the promote event.
            </param>
            <returns>"Result" item with inner text "Ok" in case of success. Otherwise  "error" item (if promote failed).</returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">Argument 'state' is either 'null' or an empty string.</exception>
        </member>
        <member name="M:Aras.IOM.Item._moveNodeToList">
            <summary>
            Moves this.node into this.nodeList. If this.nodeList is not empty, make
            sure that all its elements and this.node are siblings. The bottom line:
            after the method this.nodeList must contains only siblings.
            </summary>
        </member>
        <member name="M:Aras.IOM.Item.checkout(System.String)">
            <summary>
            Checkout physical file from the vault to the specified local directory.
            </summary>
            <remarks>
            There are several rules about how the method could be used: a) the method could be invoked <b>only</b> on client;
            b) it's assumed that the item is of type 'File'; c) the item must have property 'filename' set. It's possible
            to checkout the same file multiple times. If the same file is downloaded into the same directory more than once,
            latest version of the file overwrites the previous one. If checkout succeeded, the method sets property
            'checkedout_path' to the full path of the checked out file (this is only the run-time setting, so no update will be done
            in the corresponding File's record in the Innovator database.) <br/>If physical file of the item was checked out it doesn't
            mean that it will be send back to the server when the item is applied. In order to check-in physical file back
            to the server one should call <c>attachPhysicalFile</c> on the item prior to calling <c>apply</c> on it or its parent
            item.<br/>
            <seealso cref="M:Aras.IOM.Item.attachPhysicalFile(System.String)"/>
            </remarks>
            <param name="dir">
            Path to the directory to which the file will be checked out. The path can be either relative to the location
            of the client executable or absolute.
            </param>
            <returns>If checkout has failed the method returns an "error" item; otherwise <c>this</c> is returned.</returns>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               Item is not of type 'File'.
              </item>
              <item>
               Item doesn't have ID set.
              </item>
              <item>
               The item was never stored on server (i.e. has 'isNew' attribute set to '1').
              </item>
             </list>
            </exception>
            <exception cref="T:System.IO.IOException">File download failed.</exception>
            <example>
            C#
            <code>
            <![CDATA[
            ...
            Item files = myItem.getItemsByXPath( "/Item[@type='File']" );
            int fcount = files.getItemCount();
            for( int i = 0; i < fcount; i++ )
            {
              Item file = files.getItemByIndex( i );
              Item result = file.checkout( "c:\\temp" );
              if( result.isError() )
              {
                Console.WriteLine( string.Format( "Failed to checkout file '{0}'", file.getProperty( "filename" ) ) );
              }
            }
            ...
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Aras.IOM.Item.setNewID">
            <summary>
            Gets new ID by calling <c>getNewID()</c> then passes obtained ID to <c>setID(id)</c>.
            <seealso cref="M:Aras.IOM.Item.getNewID"/>
            <seealso cref="M:Aras.IOM.Item.setID(System.String)"/>
            </summary>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException">The <c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getNewID">
            <summary>
            Generate new 32 character hex string globally unique identifier.
            </summary>
            <returns>GUID as a string</returns>
        </member>
        <member name="M:Aras.IOM.Item._appendOrReplaceItemNode(System.String,Aras.IOM.Item,System.Boolean)">
            <summary>
            The method is trying to find the property with specified name on the item. If not found, creates it.
            If the property contains child &lt;Item&gt; node, replace it with the passed item, else append
            passed item to the property's node. After the method was called, the passed item shares its
            'dom' with 'this' item (i.e. 'dom' property of both instances points to the same instance of ArasXmlDocument).
            </summary>
            <param name="pname">property name</param>
            <param name="ritem">item to be set</param>
            <param name="check_for_logical">Check if the item is logical</param>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
            <exception cref="T:System.Exception">
            The instance has a wrong internal structure (e.g. <c>item.node</c> doesn't belong to <c>item.dom</c>; etc.)
            </exception>
            <exception cref="T:System.ArgumentException">The item passed to the method doesn't represent a single item.</exception>
            <exception cref="T:System.ArgumentException"><c>this.node</c> is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getLogicalChildren">
            <summary>
            Returns Item object with the <c>nodeList</c> containing logical nodes that are children of the <c>this.node</c>.
            <seealso cref="M:Aras.IOM.Item.isLogical"/>
            <seealso cref="M:Aras.IOM.Item.newAND"/>
            <seealso cref="M:Aras.IOM.Item.newOR"/>
            <seealso cref="M:Aras.IOM.Item.newNOT"/>
            </summary>
            <remarks>
            The method allows to traverse logical nodes of an item using exclusively IOM API.
            <example>
            <code>
            <![CDATA[
            ...
            Item lchildren = item.getLogicalChildren();
            for( int i = 0; i < lchildren.getItemCount(); i++ )
            {
              Item lchild = lchildren.getItemByIndex(i);
              ...
            }
            ...
            ]]>
            </code>
            </example>
            </remarks>
            <returns>
            Item object with the <c>nodeList</c> containing logical nodes that are direct children of the <c>this.node</c>.
            The returned item shares its <c>dom</c> with <c>this</c> item.
            </returns>
            <exception cref="T:System.Exception">
            The instance is neither a single regular item (i.e. item referencing &lt;Item&gt; node) nor a logical item.
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.instantiateWorkflow(System.String)">
            <summary>
            Instantiates workflow for the item using specified workflow map.
            </summary>
            <remarks>
            The method does the following: a) sends a request to the server to instantiate the specified Workflow Map
            to a Workflow Process b) using ID of the WorkflowProcess item obtained from the server, sends another request
            to  attach the Workflow Process to the controlled item via the "Workflow" relationship.
            Note, that the item itself is not modified by the method.
            </remarks>
            <param name="workflowMapID">ID of a WorkflowMap.</param>
            <returns>Returns a Workflow Process item created by this method or an "error" item.</returns>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               Either 'id' or 'typeId' is not set on the item.
              </item>
              <item>
               The item is a new item not saved in the database yet.
              </item>
             </list>
            </exception>
            <exception cref="T:System.ArgumentException">WorkflowMap ID is either 'null' or empty string.</exception>
        </member>
        <member name="M:Aras.IOM.Item.ToString">
            <summary>
            Returns AML string that represents the current <see cref="T:Aras.IOM.Item"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.Item.createRelationship(System.String,System.String)">
            <summary>
            Creates new &lt;Item&gt; node with specified 'type' and 'action' under &lt;Relationships&gt; node
            inside <c>this.node</c>.
            </summary>
            <remarks>
            If &lt;Relationships&gt; node doesn't exist inside <c>this.node</c>, it's created.
            </remarks>
            <param name="type">Value of attribute 'type' that will be set on the created &lt;Item&gt; node.</param>
            <param name="action">Value of attribute 'action' that will be set on the created &lt;Item&gt; node.</param>
            <returns>
            Item that reference newly created &lt;Item&gt; node. Returned item shares it's DOM with <c>this</c> item, i.e.
            both items reference the same instance of ArasXmlDocument throught their <c>dom</c> properties.
            </returns>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               The instance has a wrong internal structure (e.g. <c>item.node</c> doesn't belong to <c>item.dom</c>; etc.).
              </item>
             </list>
            </exception>
            <exception cref="T:System.ArgumentException">'Relationships' node being updated is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.createPropertyItem(System.String,System.String,System.String)">
             <summary>
             Creates an item with the specified type and action and sets it as the specified property of <c>this</c> item.
             </summary>
             <remarks>
             Returned item shares <c>dom</c> property with <c>this</c> item (i.e. both returned item's and <c>this</c>
             item's <c>dom</c> reference the same instance of ArasXmlDocument).
            
             The method is similar to setPropertyItem(propName, item) except that setPropertyItem(propName, item) gets
             an item as the method argument and doesn't create it internally.
             <seealso cref="M:Aras.IOM.Item.setPropertyItem(System.String,Aras.IOM.Item)"/>
             </remarks>
             <param name="propName">Name of property.</param>
             <param name="type">Type of the item property.</param>
             <param name="action">Name of the action that will be set on the item property.</param>
             <returns>Created item with the specified type and action.</returns>
             <exception cref="T:System.Exception">
              <list type="bullet">
               <item>
                The instance doesn't represent a single item.
               </item>
               <item>
                The instance has a wrong internal structure (e.g. <c>item.node</c> doesn't belong to <c>item.dom</c>; etc.).
               </item>
              </list>
             </exception>
             <exception cref="T:System.ArgumentException">Property node is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.createRelatedItem(System.String,System.String)">
             <summary>
             Creates an item with the specified type and action and sets it as the related item on <c>this</c> item.
             </summary>
             <remarks>
             If property <c>related_id</c> doesn't exist on <c>this</c> item, it's created.
             Returned item shares <c>dom</c> property with <c>this</c> item (i.e. both returned item's and <c>this</c>
             item's <c>dom</c> reference the same instance of ArasXmlDocument).
            
             The method is similar to setRelatedItem(Item) except that setRelatedItem(Item) gets related item as method
             argument and doesn't create it internally.
             <seealso cref="M:Aras.IOM.Item.setRelatedItem(Aras.IOM.Item)"/>
             </remarks>
             <param name="type">Type of the related item.</param>
             <param name="action">Name of the action that will be set on created related item.</param>
             <returns>Created related item with specified type and action.</returns>
             <exception cref="T:System.Exception">
              <list type="bullet">
               <item>
                The instance doesn't represent a single item.
               </item>
               <item>
                The instance has a wrong internal structure (e.g. <c>item.node</c> doesn't belong to <c>item.dom</c>; etc.).
               </item>
              </list>
             </exception>
             <exception cref="T:System.ArgumentException">'related_id' node is read-only.</exception>
        </member>
        <member name="M:Aras.IOM.Item.createInnerItem(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates new item under nodeName node.
            </summary>
            <remarks>
            The method does the following: a) sends a request to the server to instantiate the specified Workflow Map
            to a Workflow Process b) using ID of the WorkflowProcess item obtained from the server, sends another request
            to  attach the Workflow Process to the controlled item via the "Workflow" relationship.
            Note, that the item itself is not modified by the method.
            </remarks>
            <param name="nodeName">Name of root node.</param>
            <param name="type">Type of the item.</param>
            <param name="action">Name of the action that will be set on created item.</param>
            <param name="doChildReplace">Replace item, if node allready have one.</param>
            <returns>Returns a new item, created by this method.</returns>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               The instance has a wrong internal structure (e.g. <c>item.node</c> doesn't belong to <c>item.dom</c>; etc.).
              </item>
             </list>
            </exception>
            <exception cref="T:System.ArgumentException">WorkflowMap ID is either 'null' or empty string.</exception>
        </member>
        <member name="M:Aras.IOM.Item.attachPhysicalFile(System.String)">
            <summary>
            Attach physical file to the item. Calling the method means that the physical will be streamed to the server
            when <c>apply()</c> is called on the item.
            </summary>
            <remarks>
            The method could <b>only</b> be called on client side and for items of type 'File'. User can pass to the method
            either absolute or relative path to a physical file. Relative path information is interpreted as relative to the
            current working directory (i.e. location of the client executable). It's possible to attach to the item a
            physical file with a name different than the value of item's property <c>filename</c> - in this case the file
            stored in vault will still have name and type equal to values of <c>filename</c> and <c>file_type</c> properties
            correspondingly. Note, that if physical file was moved or deleted between calls to this method
            and <c>Item.apply()</c>, the later operation would fail.
            </remarks>
            <param name="filePath">Path to the physical file.</param>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               Item is not of type 'File'.
              </item>
              <item>
               Item doesn't have ID set.
              </item>
              <item>
               Failed to obtain user's default vault ID.
              </item>
             </list>
            </exception>
            <exception cref="T:System.ArgumentException">Specified file was not found.</exception>
        </member>
        <member name="M:Aras.IOM.Item.attachPhysicalFile(System.String,System.String)">
            <summary>
            Attach physical file to the item. Calling the method means that the physical will be streamed to the server
            when <c>apply()</c> is called on the item.
            </summary>
            <remarks>
            The method could <b>only</b> be called on client side and for items of type 'File'. User can pass to the method
            either absolute or relative path to a physical file. Relative path information is interpreted as relative to the
            current working directory (i.e. location of the client executable). It's possible to attach to the item a
            physical file with a name different than the value of item's property <c>filename</c> - in this case the file
            stored in vault will still have name and type equal to values of <c>filename</c> and <c>file_type</c> properties
            correspondingly. Note, that if physical file was moved or deleted between calls to this method
            and <c>Item.apply()</c>, the later operation would fail.
            </remarks>
            <param name="filePath">Path to the physical file.</param>
            <param name="vaultServerId">Vault server id.</param>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               Item is not of type 'File'.
              </item>
              <item>
               Item doesn't have ID set.
              </item>
              <item>
               Vault server ID is not set.
              </item>
             </list>
            </exception>
            <exception cref="T:System.ArgumentException">Specified file was not found.</exception>
        </member>
        <member name="M:Aras.IOM.Item.attachPhysicalFileViaStream(System.String,System.IO.Stream)">
            <summary>
            Attach physical file as a stream to the item. Calling the method means that the physical will be streamed to the server
            when <c>apply()</c> is called on the item.
            </summary>
            <remarks>
            The method could <b>only</b> be called on client side and for items of type 'File'. It's possible to attach to the item a
            file with a name different than the value of item's property <c>filename</c> - in this case the file
            stored in vault will still have name and type equal to values of <c>filename</c> and <c>file_type</c> properties
            correspondingly.
            </remarks>
            <param name="fileName">Name of the file in the stream.</param>
            <param name="stream">Stream with the file content.</param>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               Item is not of type 'File'.
              </item>
              <item>
               Item doesn't have ID set.
              </item>
              <item>
               Vault server ID is not set.
              </item>
             </list>
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <list type="bullet">
              <item>
               Argument "fileName" is null or empty.
              </item>
              <item>
               Argument "stream" is null.
              </item>
             </list>
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.#ctor(Aras.IOM.IServerConnection)">
            <summary>
            The constructor is supposed to be called __ONLY__ from internal code (Aras.Server.Core.dll).
            The __ONLY__ reason it's declared public is that IOM and Aras.Server.Core are separate libraries
            and .NET doesn't have a mechanism to declare "friends". In all other situations instance
            of the class must be either created through Innovator.newItem()\Item.newItem() (client side) or must be available
            as a part of the context in which the custom code is executed (so called "Innovator server methods").
            </summary>
            <param name="serverConnection"></param>
        </member>
        <member name="M:Aras.IOM.Item.#ctor(Aras.IOM.IServerConnection,System.String)">
            <summary>
            See comment to the previous constructor.
            <seealso cref="M:Aras.IOM.Item.#ctor(Aras.IOM.IServerConnection)"/>
            </summary>
            <param name="serverConnection"></param>
            <param name="itemTypeName"></param>
        </member>
        <member name="M:Aras.IOM.Item.#ctor(Aras.IOM.IServerConnection,System.String,System.String)">
            <summary>
            See comments to the previous constructor.
            <seealso cref="M:Aras.IOM.Item.#ctor(Aras.IOM.IServerConnection)"/>
            </summary>
            <param name="serverConnection"></param>
            <param name="itemTypeName"></param>
            <param name="action"></param>
        </member>
        <member name="M:Aras.IOM.Item.applyStylesheet(System.String,System.String)">
            <summary>
            Performs XSL transformation of the item's DOM and returns the result of the transformation.
            IMPORTANT: Be very carefull when using slylesheets from untrusted urls, there's a possibility to use scripts in the stylesheets with the code that can cause damage.
            Make sure that the stylesheet doesn't contain intrader's script code before using.
            </summary>
            <remarks>
            <list type="bullet">
             <item>
            If <c>type='url'</c> the <c>xslStylesheet</c> argument is interpreted as file URL. It means that user
            can pass to the method URLs like: "http://localhost/mystylesheets/stylesheet1.xslt" or "file:///c:/tmp/stylesheet2.xslt";
            or absolute or relative path to the file, e.g. "c:/tmp/stylesheet2.xslt" or "../../stylesheet3.xslt".
             </item>
             <item>
              The item itself is <b>not</b> modified by the method.
             </item>
            </list>
            </remarks>
            <param name="xslStylesheet">
            If <c>type='text'</c> then it's XML text for the stylesheet; <c>if type='url'</c> then it's URL
            of a stylesheet file.
            </param>
            <param name="type">
            The type argument is either 'text' or a 'url' (case insensitive).
            </param>
            <returns>
            String that represents XML of the item's DOM after XSL transformation.
            </returns>
            <exception cref="T:System.Xml.XmlException">Failed to load the xsl.</exception>
            <exception cref="T:System.Xml.Xsl.XsltCompileException">Specified xsl does not conform to a valid stylesheet.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getRelationships(System.String,System.String)">
            <summary>
            Returns an item that is a collection of relationship item with specified type; each relationship item has
            only properties specified in the select list.
            </summary>
            <param name="itemTypeName">Type of relationship.</param>
            <param name="selectAttr">Select list for relations items.</param>
            <returns>
            Item that is a collection of relationship items with specified name. If <c>this</c> doesn't
            have any relationship of this type, the returned item <c>nodeList</c> will be empty.
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getRelationships(System.String,System.String,System.String)">
            <summary>
            Returns an item that is a collection of relationship item with specified type; each relationship item has
            only properties specified in the select list.
            </summary>
            <param name="itemTypeName">Type of relationship.</param>
            <param name="selectAttr">Select list for relations items.</param>
            <param name="orderByAttr">Comma delimited list of property names used to set the SQL "ORDER BY" clause.</param>
            <returns>
            Item that is a collection of relationship items with specified name. If <c>this</c> doesn't
            have any relationship of this type, the returned item <c>nodeList</c> will be empty.
            </returns>
            <exception cref="T:System.Exception">The instance doesn't represent a single item.</exception>
        </member>
        <member name="M:Aras.IOM.Item.fetchRelationships(System.String)">
            <summary>
            Fetches relationships of specified type from the server and sets them on the item.
            </summary>
            <remarks>
            The method performs a server request.
            </remarks>
            <param name="relationshipTypeName">Name of the relationship type.</param>
            <returns>If server request failed the method returns an "error" item; otherwise it returns <c>this</c>.</returns>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               Item's ID is not set.
              </item>
             </list>
            </exception>
            <exception cref="T:System.ArgumentException">Relationship type either <c>null</c> or empty.</exception>
        </member>
        <member name="M:Aras.IOM.Item.fetchRelationships(System.String,System.String)">
            <summary>
            Fetches relationships of specified type from the server and sets them on the item. Specified
            select list will be set on the request AML.
            </summary>
            <remarks>
            The method performs a server request.
            </remarks>
            <param name="relationshipTypeName">Name of the relationship type.</param>
            <param name="selectList">
            Select list that is set on attribute 'select' of the request (see "Programmer's Guide" for more info on
            format of select list).
            </param>
            <returns>If server request failed the method returns an "error" item; otherwise it returns <c>this</c>.</returns>
            <exception cref="T:System.Exception">
             <list type="bullet">
              <item>
               The instance doesn't represent a single item.
              </item>
              <item>
               Item's ID is not set.
              </item>
             </list>
            </exception>
            <exception cref="T:System.ArgumentException">Relationship type either <c>null</c> or empty.</exception>
        </member>
        <member name="M:Aras.IOM.Item.getLogicalItems">
            <summary>
            Returns the Item object with the <c>nodeList</c> containing all logical nodes of <c>this.node</c>.
            <seealso cref="M:Aras.IOM.Item.isLogical"/>
            <seealso cref="M:Aras.IOM.Item.newAND"/>
            <seealso cref="M:Aras.IOM.Item.newOR"/>
            <seealso cref="M:Aras.IOM.Item.newNOT"/>
            </summary>
            <returns>
            Item object with the <c>nodeList</c> containing all logical nodes of <c>this.node</c>.
            The returned item shares its <c>dom</c> with <c>this</c> item.
            </returns>
            <exception cref="T:System.Exception">
            The instance is neither a single regular item (i.e. item referencing &lt;Item&gt; node) nor a logical item.
            </exception>
        </member>
        <member name="M:Aras.IOM.Item.startWorkflow">
            <summary>
            Starts the workflow process.  Item's type must be "Workflow Process".
            </summary>
        </member>
        <member name="M:Aras.IOM.Item.cancelWorkflow">
            <summary>
            Cancels the workflow process. Item's type must be "Workflow Process".
            </summary>
        </member>
        <member name="M:Aras.IOM.Item.closeWorkflow">
            <summary>
            Closes the workflow process. Item's type must be "Workflow Process".
            </summary>
        </member>
        <member name="T:Aras.IOM.RestrictedHttpServerConnection">
            <summary>
            Specify restricted access to the innovator server without login.
            Implementation of <see cref="T:Aras.IOM.IServerConnection"/> over HTTP.
            </summary>
        </member>
        <member name="M:Aras.IOM.RestrictedHttpServerConnection.#ctor(System.String)">
            <summary>
             Create instance of restricted <see cref="T:Aras.IOM.HttpServerConnection"/>.
            </summary>
            <param name="innovatorServerUrl">
            URL of Innovator server in one of the following two forms:
            <list>
            <item>http://{host}/{base_URL}; e.g. http://devserver/MyInnovator</item>
            <item>http://{host}/{base_URL}/Server/InnovatorServer.aspx; e.g. http://devserver/MyInnovator/Server/InnovatorServer.aspx</item>
            </list>
            </param>
        </member>
        <member name="M:Aras.IOM.RestrictedHttpServerConnection.getUserID">
            <summary>
            Not supported
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.RestrictedHttpServerConnection.GetDatabaseName">
            <summary>
            Not supported
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.RestrictedHttpServerConnection.GetValidateUserXmlResult">
            <summary>
            Not supported
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.RestrictedHttpServerConnection.Login">
            <summary>
            Not supported
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.RestrictedHttpServerConnection.Logout">
            <summary>
            Not supported
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.RestrictedHttpServerConnection.Logout(System.Boolean)">
            <summary>
            Not supported
            </summary>
            <returns></returns>
        </member>
        <member name="T:Aras.IOM.ServerConnectionBase">
            <summary>
            Base class for standard <see cref="T:Aras.IOM.IServerConnection"/> implementations.
            </summary>
        </member>
        <member name="F:Aras.IOM.ServerConnectionBase.CachedUserInfo">
            <summary>
            User information cached after first request to the server
            </summary>
        </member>
        <member name="P:Aras.IOM.ServerConnectionBase.UserName">
            <summary>
            Gets current user name
            </summary>
        </member>
        <member name="P:Aras.IOM.ServerConnectionBase.UserPassword">
            <summary>
            Gets current user password in md5 form.
            </summary>
            <remarks>
            UserPassword is <see langword="null"/> since innovator SP15, because token authentication is used in IOM 11.0 SP15 and above.
            </remarks>
        </member>
        <member name="P:Aras.IOM.ServerConnectionBase.Locale">
            <summary>
            Gets locale name
            </summary>
        </member>
        <member name="P:Aras.IOM.ServerConnectionBase.TimeZoneName">
            <summary>
            Gets current time zone name
            </summary>
        </member>
        <member name="P:Aras.IOM.ServerConnectionBase.IsApplyThroughVaultServerSupported">
            <summary>
            Gets indication of "_applyThroughVaultServer" is supported for current instance
            of ServerConnectionBase
            </summary>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.GetReadVaultForFile(Aras.IOM.Item)">
            <summary>
            Return a vault from which the file must be downloaded. The vault is searched by the following algorithm:
            - return a vault with highest priority from the list of vaults defined by the "ReadPriority" relationships in which the file is not stale
            - if not found, then return default vault of the user if the file is not stale in the vault
            - if not, then return the first vault in which the file is not stale
            - append user's default vault to the list (if
            </summary>
            <param name="fileItem">File item.</param>
            <returns>Found vault item.</returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase._getSortedLocatedList(Aras.IOM.Item,Aras.IOM.Item)">
            <summary>
            Build a list of 'Located' sorted by the priorities of vaults that they reference.
            Sorting is done based on the 'ReadPriority' relationships of the current user + the
            default vault of the user + remaining vaults.
            </summary>
            <param name="fileItem">File item</param>
            <param name="all_located">Item with all 'Located' of the file</param>
            <returns>List of 'Located' items sorted by vault priorities.</returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.GetDatabases">
            <summary>
            Returns all configured databases
            </summary>
            <returns>List of databases id</returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.CallAction(System.String,System.Xml.XmlDocument,System.Xml.XmlDocument)">
            <summary>
            Call the specified action on Innovator Server.
            Not implemented.
            </summary>
            <param name="actionName">
            Action name.
            </param>
            <param name="inDOM">
            <see cref="T:System.Xml.XmlDocument"/> containing AML to send to Innovator Server.
            </param>
            <param name="outDOM">
            <see cref="T:System.Xml.XmlDocument"/> containing AML response from Innovator Server.
            </param>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.DebugLog(System.String,System.Object)">
             <summary>
            
             </summary>
             <param name="reason"></param>
             <param name="msg"></param>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.DebugLogP">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.DownloadFile(Aras.IOM.Item,System.String,System.Boolean)">
            <summary>
            Downloads the specified physical file to the specified directory.
            </summary>
            <param name="fileItem">Item of type 'File' to download. If attribute '__aras_file_has_all_located__' is set to '1' then redundant request will be ommited.</param>
            <param name="fileName">Path where the physical file will be downloaded to.</param>
            <param name="overwrite">Specifies if the file should be overwritten if file with the same name already exists.</param>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.GetFileStream(Aras.IOM.Item)">
            <summary>
            Get file stream from vault server.
            </summary>
            <param name="fileItem"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.getUserID">
            <summary>
            Returns id of current logged in Innovator user. Throws exception if there is no logged in user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.getUserInfo">
            <summary>
            Returns result of the request for user’s info cached during the login
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.GetDatabaseName">
            <summary>
            Returns name of the current database in use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.GetFromCache(System.String)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.GetLicenseInfo">
            <summary>
            Returns information about subscription and all add-on's
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.GetLicenseInfo(System.String,System.String)">
            <summary>
            Returns information about subscription and all add-on's
            </summary>
            <param name="issuer">Select addons by issuer. Skip if null or empty.</param>
            <param name="addon_name">Select add-ons by the name. Skip if null or empty.</param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.GetOperatingParameter(System.String,System.Object)">
             <summary>
            
             </summary>
             <param name="name"></param>
             <param name="defaultvalue"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.GetSrvContext">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.InsertIntoCache(System.String,System.Object,System.String)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <param name="value"></param>
             <param name="path"></param>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.GetValidateUserXmlResult">
            <summary>
            Results of ValidateUser action should be returned by the method and they are required to instantiate I18NSessionContext.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.getFileUrl(System.String,Aras.IOM.UrlType)">
            <summary>
            Returns file url with a security token by it's Id.
            IR-014093 "Thumbnails in PE"
            </summary>
            <param name="fileId"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.getFileUrls(System.Collections.ArrayList,Aras.IOM.UrlType)">
             <summary>
            
             </summary>
             <param name="fileIds"></param>
             <param name="type"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.getClientHTTPHeaders(System.String)">
             <summary>
            
             </summary>
             <param name="soapAction"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase._CallActionThroughVaultServer(System.String,System.Collections.Generic.Dictionary{System.String,Aras.Utils.IFileUploadInfo},System.String,System.String,System.String,Aras.IOM.Vault.VaultServerTransaction)">
            <summary>
            This one is called only from <see cref="M:Item.apply"/> only if serverConnection is HttpServerConnection.
            </summary>
            <param name="itemXml">Item to apply</param>
            <param name="fileList"></param>+
            <param name="action"></param>
            <param name="transaction"></param>
            <param name="vaultServerId"></param>
            <param name="vault_url"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.#ctor">
            <summary>
            Creates instance of <see cref="T:Aras.IOM.ServerConnectionBase"/>
            </summary>
        </member>
        <member name="M:Aras.IOM.ServerConnectionBase.GetLicenseManagerWebService">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:Aras.IOM.WinAuthHttpServerConnection">
            <summary>
            The class extends the HttpServerConnection class allowing to connect to Innovator server that is configured
            to use Windows authentication instead of Innovator's database authentication.
            </summary>
            <remarks>
            The class is supposed to be used <b>only</b> when Innovator server is configured to use native Windows authentication.
            The class uses credentials of the user that is currently logged on the client machine. It connects to the special aspx on server
            (Innovator\Client\scripts\IOMLogin.aspx) that must be setup to use Windows authentication and <b>not</b> use
            anonymous access (for more info see: http://www.aras.com/university/TechNotes/ActiveDirectory%20Configuration%20Notes.pdf
            and "Login Hooks.doc" that is a part of the documentation for every release).
            </remarks>
        </member>
        <member name="M:Aras.IOM.WinAuthHttpServerConnection.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of the class with the specified parameters.
            </summary>
            <param name="innovatorServerUrl">URL of Innovator server</param>
            <param name="database">Name of database to be used in the session</param>
        </member>
        <member name="T:Aras.Utils.FileDownload">
            <summary>
            Provide methods to download files from HTTP server.
            </summary>
        </member>
        <member name="M:Aras.Utils.FileDownload.DownloadFile(Aras.IOM.IRequestSender,System.Uri,System.String,System.Collections.Generic.IList{Aras.Utils.IClientData},System.Net.ICredentials)">
            <summary>
            Downloads file from URL to specified directory.
            </summary>
            <param name="requestSender">Request sender.</param>
            <param name="uri">URL to send a request for downloading.</param>
            <param name="path">Path to save a file to.</param>
            <param name="clientData">Set of Request headers or client data that will be addded to a stream.</param>
            <param name="credentials">Credentials that used if URL request an authorization to downloading files.</param>
        </member>
        <member name="M:Aras.Utils.FileDownload.GetFileStream(Aras.IOM.IRequestSender,System.Uri,System.Collections.Generic.IList{Aras.Utils.IClientData},System.Net.ICredentials)">
            <summary>
            Downloading file method implementation.
            </summary>
            <param name="requestSender">Request sender.</param>
            <param name="uri">URL to send a request for downloading.</param>
            <param name="clientData">Set of Request headers or client data that will be addded to a stream.</param>
            <param name="credentials">Credentials that used if URL request an authorization to downloading files.</param>
        </member>
        <member name="M:Aras.Utils.FileDownload.DownloadFileImplementation(Aras.IOM.IRequestSender,System.Uri,System.String,System.Collections.Generic.IList{Aras.Utils.IClientData},System.Net.ICredentials)">
            <summary>
            Downloading file method implementation.
            </summary>
            <param name="requestSender">Request sender.</param>
            <param name="uri">URL to send a request for downloading.</param>
            <param name="path">Path to save a file to.</param>
            <param name="clientData">Set of Request headers or client data that will be added to a stream.</param>
            <param name="cred">Credentials that used if URL request an authorization to downloading files.</param>
        </member>
        <member name="M:Aras.Utils.FileDownload.SetRequestClientData(System.Net.HttpWebRequest,System.Collections.Generic.IList{Aras.Utils.IClientData})">
            <summary>
            Sets request headers or client data to request.
            </summary>
            <param name="request">Request to add data to.</param>
            <param name="clientData">Set of Request headers or client data that will be added to a stream.</param>
        </member>
        <member name="T:Aras.Utils.FileHelper">
            <summary>
            FileHelper
            </summary>
        </member>
        <member name="T:Aras.Utils.FilePathValidation">
            <summary>
            Class for validation file name, file path
            </summary>
        </member>
        <member name="M:Aras.Utils.FilePathValidation.ValidatePath(System.String)">
            <summary>
            Path
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Aras.Utils.FilePathValidation.ValidateFileName(System.String)">
            <summary>
            validation file name , incorrect symbol, empty etc.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Aras.Utils.FilePathValidation.CanonicalPathCombine(System.String,System.String)">
            <summary>
            Path combine with checking basePath and fileName
            </summary>
            <param name="basePath"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="T:Aras.Utils.FileUpload">
            <summary>
            Provide methods to upload files to HTTP server.
            </summary>
        </member>
        <member name="P:Aras.Utils.FileUpload.BreakLine">
            <summary>
            BreakLine for MultiPart HTTP 'POST' request.
            </summary>
        </member>
        <member name="M:Aras.Utils.FileUpload.#ctor(System.Uri,Aras.IOM.IRequestSender)">
            <summary>
            Initialize an instance of <see cref="T:Aras.Utils.FileUpload"/> using the specified URI.
            </summary>
            <param name="uri">URI where to upload a file.</param>
            <param name="requestSender">Approach to uploading file.</param>
        </member>
        <member name="M:Aras.Utils.FileUpload.UploadFiles(System.Collections.Hashtable,System.Collections.Generic.IList{Aras.Utils.IClientData})">
            <summary>
            The method uploads several files to Innovator Vault Server using several HTTP "POST" requests.
            </summary>
            <param name="fileList">Collection of files to upload.</param>
            <param name="clientData">Client data that will be added to the stream.</param>
            <returns>Xml response of the Innovator Vault Server.</returns>
        </member>
        <member name="M:Aras.Utils.FileUpload.UploadFiles(System.Collections.Generic.Dictionary{System.String,Aras.Utils.IFileUploadInfo},System.Collections.Generic.IList{Aras.Utils.IClientData})">
            <summary>
            The method uploads several files to Innovator Vault Server using several HTTP "POST" requests.
            </summary>
            <param name="fileList">Collection of files to upload.</param>
            <param name="clientData">Client data that will be added to the stream.</param>
            <returns>Xml response of the Innovator Vault Server.</returns>
        </member>
        <member name="T:Aras.Utils.IClientData">
             <summary>
            
             </summary>
        </member>
        <member name="P:Aras.Utils.IClientData.Name">
             <summary>
            
             </summary>
        </member>
        <member name="T:Aras.Utils.CookieClientData">
             <summary>
            
             </summary>
        </member>
        <member name="M:Aras.Utils.CookieClientData.#ctor(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="name"></param>
             <param name="value"></param>
        </member>
        <member name="P:Aras.Utils.CookieClientData.Cookie">
             <summary>
            
             </summary>
        </member>
        <member name="P:Aras.Utils.CookieClientData.Name">
             <summary>
            
             </summary>
        </member>
        <member name="T:Aras.Utils.HeaderClientData">
             <summary>
            
             </summary>
        </member>
        <member name="M:Aras.Utils.HeaderClientData.#ctor(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="name"></param>
             <param name="value"></param>
        </member>
        <member name="P:Aras.Utils.HeaderClientData.Value">
             <summary>
            
             </summary>
        </member>
        <member name="P:Aras.Utils.HeaderClientData.Name">
             <summary>
            
             </summary>
        </member>
        <member name="T:Aras.I18NUtils.DateTimeConverter">
            <summary>
            The class contains static methods that allows to convert a string representing a local date-time into
            an instance of System.DateTime (UTC) and back. Both methods get time zone name as a parameter; the name
            uniquely identifies a time zone to\from which the convertion must be made.
            </summary>
            <remarks>
            As of November 2007 methods of the class are supported only on the following operating systems:
              * client OS: XP, Vista
              * server OS: Windows Server 2003, Windows Server 2008
            (subsequent versions of OS must support it as well)
            </remarks>
        </member>
        <member name="F:Aras.I18NUtils.DateTimeConverter.DATETIME_NEUTRAL_FORMAT">
            <summary>
            Format of date-time strings that is passed between Innovator's client and server for date-time values.
            Note, that date-time passed between client and server is _always_ in the time zone of the client (or
            corporate time zone if it's set).
            </summary>
        </member>
        <member name="F:Aras.I18NUtils.DateTimeConverter.DATE_NEUTRAL_FORMAT">
            <summary>
            Format of date-only strings that is passed between Innovator's client and server for date-only values.
            If date-only string is passed then time is assumed to be 00:00:00 (midnight) on client, i.e. for instance
            "2007-11-20" is the same as "2007-11-20T00:00:00"
            </summary>
        </member>
        <member name="F:Aras.I18NUtils.DateTimeConverter.UTC_TIMEZONE_NAME">
            <summary>
            Name of UTC time zone
            </summary>
        </member>
        <member name="M:Aras.I18NUtils.DateTimeConverter.ParseFromLocal(System.String,System.String)">
            <summary>
            The method converts passed string to a UTC DateTime. It's assumed that:
             a. The string represents a time in the time zone with the name passed to the method
                (e.g. "Eastern Standard Time"). Note, that time zone name and time zone display name
                are different; the former one is unique and used as registry key.
             b. The string has one of the following formats
                  - "yyyy-MM-ddTHH:mm:ss" (e.g. "2007-06-22T17:43:00")
                  - "yyyy-MM-dd" (e.g. "2007-06-22")
            </summary>
            <param name="tzname">Time zone name</param>
            <param name="s">String representation of a date-time in the time zone</param>
            <returns>UTC DateTime</returns>
            <exception cref="T:System.FormatException">Format of the passed string is not "yyyy-MM-ddTHH:mm:ss"</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Time zone with the specified name is not found</exception>
            <exception cref="T:System.NotSupportedException">The method is running on not supported platform</exception>
        </member>
        <member name="M:Aras.I18NUtils.DateTimeConverter.ToLocalString(System.String,System.DateTime)">
            <summary>
            The method converts instance of UTC DateTime to the string representation of the instance
            in the specified time zone. Format of the returned string is "yyyy-MM-ddTHH:mm:ss".
            </summary>
            <param name="tzname">Time zone name</param>
            <param name="dt">UTC DateTime</param>
            <returns>String representation of the date-time for the specified time zone.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Time zone with the specified name is not found</exception>
            <exception cref="T:System.NotSupportedException">The method is running on not supported platform</exception>
        </member>
        <member name="M:Aras.I18NUtils.DateTimeConverter.HasTimeZone(System.String)">
            <summary>
            Checks if time zone with the specified name is known to the server.
            </summary>
            <param name="tzname">Time zone name. 'null' or empty string means UTC.</param>
            <returns>'true' if the time zone found; 'false' otherwise.</returns>
        </member>
        <member name="M:Aras.I18NUtils.DateTimeConverter.OffsetBetweenTimeZones(System.String,System.String)">
            <summary>
            Returns current (today) offset in minutes between first and second time zones. Note that the offset
            might be different on different dates because of different daylight schedule in different zones.
            </summary>
            <param name="tzname1">First time zone name</param>
            <param name="tzname2">Second time zone name</param>
            <returns>Offset between time zones in minutes for UTC Now date</returns>
        </member>
        <member name="M:Aras.I18NUtils.DateTimeConverter.OffsetBetweenTimeZones(System.String,System.String,System.DateTime)">
            <summary>
            Returns offset in minutes between first and second time zones on the specified date. Note that the offset
            might be different on different dates because of different daylight schedule in different zones.
            </summary>
            <param name="tzname1">First time zone name</param>
            <param name="tzname2">Second time zone name</param>
            <param name="utcdt">UTC Date on which the offset has to be calculated</param>
            <returns>Offset between time zones in minutes</returns>
        </member>
        <member name="M:Aras.I18NUtils.I18NConverter.ConvertToOrFromNeutral(System.String,System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Converts to or from neutral format
            </summary>
            <param name="val"></param>
            <param name="dataType"></param>
            <param name="isTo"></param>
            <param name="datePattern"></param>
            <param name="locale"></param>
            <param name="timeZone"></param>
            <returns>The convertation result.</returns>
            <exception cref="T:System.FormatException"><c>val</c> is not a value in a valid format.</exception>
        </member>
        <member name="M:Aras.I18NUtils.I18NConverter.GetDotNetDatePattern(System.String,System.String)">
            <summary>
            Note: this function is duplicated on Server
            </summary>
            <param name="innovatorDateFormat">string</param>
            <param name="locale">string</param>
            <returns>string</returns>
        </member>
        <member name="M:Aras.I18NUtils.I18NConverter.ParseToDate(System.String,System.String,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Parses the input string using the pattern and culture info. The code likes to server parseToDate function.
            </summary>
            <param name="si">input string</param>
            <param name="sp">pattern. "MM/dd/yyyy" if null</param>
            <param name="ci">culture info. Current thread culture info if null</param>
            <param name="forceSpecialIso8601FormatFirst">bool</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:Aras.I18NUtils.I18NConverter.ParseFromDate(System.DateTime,System.String,System.Globalization.DateTimeFormatInfo)">
            <summary>
            Represents dt as the string in ptrn format.
            </summary>
            <param name="dt">DateTime</param>
            <param name="ptrn">string</param>
            <param name="dtfi">DateTimeFormatInfo</param>
            <returns>string</returns>
        </member>
        <member name="M:Aras.I18NUtils.I18NConverter.IsValueNumber(System.String,System.String)">
            <summary>
            Duplicate is defined in CompilableCode/XControls/CommonFiles/InternalUtils.cs
            </summary>
            <param name="val">string</param>
            <param name="locale">string</param>
            <returns>bool</returns>
        </member>
        <member name="M:Aras.I18NUtils.I18NConverter.IsValueDouble(System.String,System.Globalization.CultureInfo)">
            <summary>
            Duplicate is defined in CompilableCode/XControls/CommonFiles/InternalUtils.cs
            </summary>
            <param name="val">string</param>
            <param name="ci">CultureInfo</param>
            <returns>bool</returns>
        </member>
        <member name="M:Aras.I18NUtils.I18NConverter.ParseFromDouble(System.Double,System.Globalization.CultureInfo)">
            <summary>
            Parses double to string with specidied CultureInfo
            </summary>
            <param name="val">double</param>
            <param name="ci">CultureInfo</param>
            <returns>string</returns>
        </member>
        <member name="M:Aras.I18NUtils.I18NConverter.ParseToDouble(System.String,System.Globalization.CultureInfo)">
            <summary>
            Parses string to Double with specidied CultureInfo
            </summary>
            <param name="val">string</param>
            <param name="ci">CultureInfo</param>
            <returns>double</returns>
        </member>
        <member name="M:Aras.I18NUtils.I18NConverter.ParseFromDecimal(System.Decimal,System.Globalization.CultureInfo)">
            <summary>
            Parses decimal to String with specidied CultureInfo
            </summary>
            <param name="val">decimal</param>
            <param name="ci">CultureInfo</param>
            <returns>string</returns>
        </member>
        <member name="M:Aras.I18NUtils.I18NConverter.ParseToDecimal(System.String,System.Globalization.CultureInfo)">
            <summary>
            Parses string to decimal with specidied CultureInfo
            </summary>
            <param name="val">string</param>
            <param name="ci">CultureInfo</param>
            <returns>decimal</returns>
        </member>
        <member name="M:Aras.I18NUtils.I18NConverter.ParseNumber(System.String,System.String@,System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
            <summary>
            Tries to parse val as decimal, then as double using sourceInfo. Then converts the number to string using targetInfo.
            val is returned if it is not recognized as a number.
            </summary>
            <param name="val">string</param>
            <param name="retType">decimal or double or null</param>
            <param name="sourceInfo">CultureInfo</param>
            <param name="targetInfo">CultureInfo</param>
            <returns>string</returns>
        </member>
        <member name="T:Aras.I18NUtils.I18NSystemInfo">
            <summary>
            Provides a way to read culture related system information.
            </summary>
        </member>
        <member name="M:Aras.I18NUtils.I18NSystemInfo.ClearCachedData">
            <summary>
            Clears cached culture-related information, clears current <see cref="T:System.TimeZone"/> info.
            Read more about <see cref="M:System.Globalization.CultureInfo.ClearCachedData"/>.
            </summary>
        </member>
        <member name="P:Aras.I18NUtils.I18NSystemInfo.CurrentCulture">
            <summary>
            Gets the <see cref="T:System.Globalization.CultureInfo"/> that represents the culture used by the current thread.
            Read more about <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>.
            </summary>
        </member>
        <member name="P:Aras.I18NUtils.I18NSystemInfo.CurrentUICulture">
            <summary>
            Gets the <see cref="T:System.Globalization.CultureInfo"/> that represents the current culture used by the Resource Manager to look up culture-specific resources at run time.
            Read more about <see cref="P:System.Globalization.CultureInfo.CurrentUICulture"/>.
            </summary>
        </member>
        <member name="P:Aras.I18NUtils.I18NSystemInfo.CurrentTimeZoneName">
            <summary>
            Returns id (which is the name of the registry entry) of the current time zone set on the machine where the method runs.
            </summary>
            <value>Id (registry entry name) of the time zone currently set on the machine.</value>
        </member>
        <member name="M:Aras.I18NUtils.TimeZoneInformation.FromUniversalTime(System.String,System.DateTime)">
            <summary>
            Convert a time from UTC to the time zone with the supplied name.
            </summary>
            <param name="tzname">The time zone name.</param>
            <param name="utc">The time to convert.</param>
            <returns>The converted time.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the time zone with the specified name was not found.
            </exception>
        </member>
        <member name="M:Aras.I18NUtils.TimeZoneInformation.ToUniversalTime(System.String,System.DateTime)">
            <summary>
            Convert a time from the time zone with the supplied name to UTC.
            </summary>
            <param name="tzname">The time zone name.</param>
            <param name="local">The time to convert.</param>
            <returns>The converted time.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if time zone with the specified name was not found.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Thrown if the method failed due to missing platform support.
            </exception>
        </member>
        <member name="M:Aras.I18NUtils.TimeZoneInformation.EnumZones">
            <summary>
            Enumerate the available time zones
            </summary>
            <returns>The list of known time zones</returns>
        </member>
        <member name="M:Aras.I18NUtils.TimeZoneInformation.ForName(System.String)">
            <summary>
            Get a TimeZoneInformation for the specified time zone name.
            </summary>
            <param name="tzname">The time zone to find.</param>
            <returns>The corresponding TimeZoneInformation.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if time zone with the specified name was not found.
            </exception>
        </member>
        <member name="T:Aras.IOME.CacheableContainer">
            <summary>
            Special class is using to set rendered string to cache.
            </summary>
        </member>
        <member name="P:Aras.IOME.CacheableContainer.Content">
            <summary>
            Returns the rendered string.
            </summary>
        </member>
        <member name="M:Aras.IOME.CacheableContainer.GetGuidsItemDependsOn">
            <summary>
            Returns array of strings which are all guids current instance depends on.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Aras.IOME.CheckinCompletedEventArgs">
            <summary>
            Provides data for <c>CheckinCompleted</c> which is raised when checkin operation was completed.
            <list type="bullet">
            <item>
            <description>
            <b>Result</b>
            Result Item for applying checkin configuration after uploading files to vault.
            </description>
            </item>
            <item>
            <description>
            <b>Error</b>
            Information on error that occured while checkin.
            </description>
            </item>
            <item>
            <description>
            <b>Cancelled</b>
            Boolean value. Shows if checkin operation was cancelled.
            </description>
            </item>
            <item>
            <description>
            <b>UserState</b>
            May contain additional information. Usually contains Item configuration for which checkin action was called.
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Aras.IOME.CheckinCompletedEventArgs.Result">
            <summary>
            Result item for applying checkin configuration after uploading all files.
            </summary>
            <see cref="T:Aras.IOM.Item"/>
        </member>
        <member name="T:Aras.IOME.CheckinManager">
             <summary>
            
             </summary>
        </member>
        <member name="M:Aras.IOME.CheckinManager.CheckinAsync(System.Int32)">
            <summary>
            Start asynchronous checkin of all files in the configuration.
            While asychronous checkin is in progress cancel, pause and resume operations are available.
            </summary>
            <seealso cref="M:Aras.IOME.CheckinManager.CheckinPauseAsync"/>
            <seealso cref="M:Aras.IOME.CheckinManager.CheckinCancelAsync"/>
            <seealso cref="M:Aras.IOME.CheckinManager.CheckinResumeAsync"/>
            <param name="numberOfThreads">
            The amount of threads from 1 to 10.
            </param>
            <example>
            <code lang="C#">
            ...
            HttpServerConnection connection = CreateHttpServerConnection("innovatorServerUrl");
            Innovator innovator = IomFactory.CreateInnovator(connection);
            Item itm = innovator.newItem();
            itm.loadAML("&lt;AML/&gt;");
            CheckinManager checkin = factory.CreateCheckinManager(itm);
            Item result = checkin.CheckinAsync(2);
            ...
            </code>
             <code lang="cpp">
            ...
            IOM::IHttpServerConnectionComIncomingPtr connection = iomFactory->CreateHttpServerConnection(innovatorServerUrl, database, userName, password);
            connection->Login();
            IOM::IInnovatorComIncomingPtr innovator = iomFactory->CreateInnovator(connection);
            IOM::IItemComIncomingPtr configuration = innovator->newItem("CAD", "add");
            configuration->loadAML(aml);
            IOM::ICheckinManagerComIncomingPtr checkinManager = iomFactory->CreateCheckinManager(configuration);
            checkinManager->CheckinAsync(2);
            ...
            </code>
            </example>
        </member>
        <member name="M:Aras.IOME.CheckinManager.CmUploadFileAsyncCompleted(System.Object,Aras.IOME.UploadFileCompletedEventArgs)">
            <summary>
            Event handler used by async upload files method
            </summary>
        </member>
        <member name="M:Aras.IOME.CheckinManager.CheckinPauseAsync">
            <summary>
            Pause asynchronous upload of all files in the configuration that was started by <c>UploadFilesAsync</c>.
            Method is available for asynchronous checkin only.
            </summary>
        </member>
        <member name="M:Aras.IOME.CheckinManager.CheckinCancelAsync">
            <summary>
            Cancel asynchronous upload of all files in the configuration that was started by <c>UploadFilesAsync</c>.
            Checkin will be completed with Cancelled value 'true'.
            Method is available for asynchronous checkin only.
            </summary>
        </member>
        <member name="M:Aras.IOME.CheckinManager.CheckinResumeAsync">
            <summary>
            Resume asynchronous upload of all files in the configuration that was started by <c>UploadFilesAsync</c>.
            Method is available for asynchronous checkin only.
            </summary>
        </member>
        <member name="E:Aras.IOME.CheckinManager.UploadFilesCompleted">
            <summary>
            Uploading files to vault server was completed event.
            Use this event in order to perform custom actions when uploading files operation was completed.
            For example check result of uploading file to vault.
            </summary>
            <seealso cref="T:Aras.IOME.UploadFilesCompletedEventHandler"/>
        </member>
        <member name="E:Aras.IOME.CheckinManager.UploadFilesProgressChanged">
            <summary>
            Uploading progress has changed.
            Use this event in order to track progress of uploading files operation.
            Might be useful for progress bars in custom application.
            </summary>
            <seealso cref="T:Aras.IOME.UploadFilesProgressChangedHandler"/>
        </member>
        <member name="E:Aras.IOME.CheckinManager.UploadFileCompleted">
            <summary>
            Uploading of file to vault server was completed.
            Use this event for performing custom operations when uploading of a single file was completed.
            </summary>
            <seealso cref="T:Aras.IOME.UploadFileCompletedEventHandler"/>
        </member>
        <member name="E:Aras.IOME.CheckinManager.CheckinCompleted">
            <summary>
            Checkin operation was completed.
            Use this event for checking result of checkin operation or performing custom actions when checkin operation was completed.
            </summary>
            <seealso cref="T:Aras.IOME.CheckinCompletedEventHandler"/>
        </member>
        <member name="E:Aras.IOME.CheckinManager.CheckinProgressChanged">
            <summary>
            Checkin operation progress has changed.
            Use this event for tracking checkin progress.
            Might be useful for progress bars in custom application.
            </summary>
            <seealso cref="T:Aras.IOME.CheckinProgressChangedEventHandler"/>
        </member>
        <member name="M:Aras.IOME.CheckinManager.CheckThreadsNumber(System.Int32)">
            <summary>
            Initial check of threads_num for max-min values
            </summary>
            <param name="threadsNumber">Specified number of threads </param>
            <returns>Corrected number of threads</returns>
        </member>
        <member name="P:Aras.IOME.CheckinManager.Flags">
            <summary>
            Property contains value of <c>CheckinManagerFlags</c> and shows which operations should be performed after checkin.
            </summary>
            <see cref="T:Aras.IOME.CheckinManagerFlags"/>
        </member>
        <member name="M:Aras.IOME.CheckinManager.Checkin(System.Int32)">
            <summary>
            Does synchronous checkin of all files in the configuration.
            </summary>
            <param name="numberOfThreads">
            The amount of threads from 1 to 10.
            </param>
            <returns>
            <see cref="T:Aras.IOM.Item">Item</see> - result of applying of configuration
            </returns>
            <example>
            <code lang="C#">
            ...
            HttpServerConnection connection = CreateHttpServerConnection("innovatorServerUrl");
            Innovator innovator = IomFactory.CreateInnovator(connection);
            Item itm = innovator.newItem();
            itm.loadAML("&lt;AML/&gt;");
            CheckinManager checkin = factory.CreateCheckinManager(itm);
            Item result = checkin.Checkin(2);
            ...
            </code>
            <code lang="cpp">
            ...
            IOM::IHttpServerConnectionComIncomingPtr connection = iomFactory->CreateHttpServerConnection(innovatorServerUrl, database, userName, password);
            connection->Login();
            IOM::IInnovatorComIncomingPtr innovator = iomFactory->CreateInnovator(connection);
            IOM::IItemComIncomingPtr configuration = innovator->newItem("CAD", "add");
            configuration->loadAML(aml);
            IOM::ICheckinManagerComIncomingPtr checkinManager = iomFactory->CreateCheckinManager(configuration);
            checkinManager->Checkin(2);
            ...
            </code>
            </example>
        </member>
        <member name="M:Aras.IOME.CheckinManager.CheckForConflicts(System.Collections.ArrayList)">
            <summary>
            Checks configuration in checkin manager for conflicts in array
            </summary>
            <param name="rulesArray">Array of <see cref="T:Aras.IOME.ConflictDetection.IConflictDetectionRule">IConflictDetectionRule</see> for which check operation should be performed.</param>
            <returns>ArrayList of <see cref="T:Aras.IOME.ConflictDetection.ConflictDetectionResult">ConflictDetectionResult</see></returns>
            <example>
            <code lang="C#">
            ...
            HttpServerConnection connection = CreateHttpServerConnection("innovatorServerUrl");
            Innovator innovator = IomFactory.CreateInnovator(connection);
            Item itm = innovator.newItem();
            itm.loadAML("&lt;AML/&gt;");
            CheckinManager checkin = factory.CreateCheckinManager(itm);
            ConflictDetectionRuleFactory conflictFactory = checkin.GetConflictDetectionRuleFactory();
            ArrayList rules = new ArrayList();
            rules.Add(conflictFactory.FileNotAccessible);
            ArrayList result = checkin.CheckForConflicts(rules);
            ...
            </code>
            <code lang="cpp">
            ...
            IOM::IHttpServerConnectionComIncomingPtr connection = iomFactory->CreateHttpServerConnection(innovatorServerUrl, database, userName, password);
            connection->Login();
            IOM::IInnovatorComIncomingPtr innovator = iomFactory->CreateInnovator(connection);
            IOM::IItemComIncomingPtr configuration = innovator->newItem("CAD", "add");
            configuration->loadAML(aml);
            IOM::ICheckinManagerComIncomingPtr checkinManager = iomFactory->CreateCheckinManager(configuration);
            IOM::IConflictDetectionRuleFactoryComIncomingPtr ruleFactory = checkinManager->GetConflictDetectionRuleFactory();
            IOM::ILocalConflictDetectionRuleComIncomingPtr customRule = ruleFactory->CreateCustomConflictDetectionRule(innovator->getConnection(), "test");
            mscorlib::_ArrayListPtr myAL = iomFactory->CreateArrayList();
            mscorlib::IListPtr myList = myAL;
            VARIANT v;
            v.vt = VT_DISPATCH;
            v.pdispVal = customRule;
            myList->Add(v);
            mscorlib::_ArrayListPtr result = checkinManager->CheckForConflicts(myAL);
            ...
            </code>
            </example>
        </member>
        <member name="M:Aras.IOME.CheckinManager.GetConflictDetectionRuleFactory">
            <summary>
            Method for creation of factory that is used to create conflict detection rules.
            </summary>
            <returns><see cref="T:Aras.IOME.ConflictDetection.ConflictDetectionRuleFactory">Factory</see> for creation conflict detection rules.</returns>
        </member>
        <member name="M:Aras.IOME.CheckinManager.ValidateConfigurationAML(Aras.IOM.Item)">
            <summary>
            Method is used for checking basic CheckinManager configurationAML rules:
            1. Configuration must contain at least one File Item.
            2. All File Items must have allowed actions.
            3. All Items must have allowed actions.
            </summary>
        </member>
        <member name="M:Aras.IOME.CheckinManager.Dispose">
            <summary>
            Release all resources managed by instance
            </summary>
        </member>
        <member name="M:Aras.IOME.CheckinManager.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">Boolean value that shows if disposing is in progress</param>
        </member>
        <member name="T:Aras.IOME.CheckinProgressChangedEventArgs">
            <summary>
            Provides data for <c>CheckinProgressChanged</c> event which is raised when one of the steps of checkin operation was completed.
            <list type="bullet">
            <item>
            <description>
            <b>ProgressPercentage</b>
            Current progress of operation in percents.
            </description>
            </item>
            <item>
            <description>
            <b>
            UserState
            </b>
            Contains additional information for action. Usually initial checkin configuration.
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Aras.IOME.CheckinProgressChangedEventArgs.#ctor(System.Int32,System.Object)">
            <summary>Initializes a new instance of the ProgressChangedEventArgs class</summary>
        </member>
        <member name="T:Aras.IOME.ConflictDetection.ConflictDetectionResult">
            <summary>
            Structure for detailed description of results of conflict detection.
            Used to represent result of conflict detection for configuration.
            <seealso cref="M:Aras.IOME.CheckinManager.CheckForConflicts(System.Collections.ArrayList)"/>
            </summary>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.ConflictDetectionResult.RuleName">
            <summary>
            Name of the rule where conflict was detected.
            </summary>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.ConflictDetectionResult.XPath">
            <summary>
            Xpath to the node where conflict was detected
            </summary>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.ConflictDetectionResult.UserData">
            <summary>
            Additional information about conflict.
            </summary>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.ConflictDetectionResult.Message">
            <summary>
            Message of conflict
            </summary>
        </member>
        <member name="T:Aras.IOME.ConflictDetection.CustomConflictDetectionRuleOnExecuteHandler">
            <summary>
            OnExecute methods are executed during execution of conflict detection.
            OnExecute methods should contain custom logic of adding <see cref="T:Aras.IOME.ConflictDetection.ConflictDetectionResult"/> to the result list.
            </summary>
            <param name="sender">Object from which the handler was called.</param>
            <param name="e">Custom conflict detection rule argument. Contains configuration Item and list of <see cref="T:Aras.IOME.ConflictDetection.ConflictDetectionResult"/> for current configuration. </param>
        </member>
        <member name="T:Aras.IOME.ConflictDetection.CustomConflictDetectionRuleOnExecuteEventArgs">
            <summary>
            Custom conflict detection rule class.
            </summary>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.CustomConflictDetectionRuleOnExecuteEventArgs.#ctor(Aras.IOM.Item)">
            <summary>
            Constructor for <see cref="T:Aras.IOME.ConflictDetection.CustomConflictDetectionRuleOnExecuteEventArgs"/>.
            </summary>
            <param name="configuration">Item configuration for check with custom rule.</param>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.CustomConflictDetectionRuleOnExecuteEventArgs.Configuration">
            <summary>
            validation configuration
            </summary>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.CustomConflictDetectionRuleOnExecuteEventArgs.Conflicts">
            <summary>
            List of <see cref="T:Aras.IOME.ConflictDetection.ConflictDetectionResult"/> detected in current configuration.
            </summary>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.CustomConflictDetectionRuleOnExecuteEventArgs.AddConflict(Aras.IOME.ConflictDetection.ConflictDetectionResult)">
            <summary>
            Add conflict to the list of conflicts in result.
            Conflicts property is readonly. Method provies the way to add new item to the collection.
            </summary>
            <param name="conflict">Instance of <see cref="T:Aras.IOME.ConflictDetection.ConflictDetectionResult"/> for current configuration.</param>
        </member>
        <member name="T:Aras.IOME.ConflictDetection.CustomConflictDetectionRule">
             <summary>
            
             </summary>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.CustomConflictDetectionRule.#ctor(Aras.IOM.IServerConnection,System.String)">
            <summary>
            Constructor fot <see cref="T:Aras.IOME.ConflictDetection.CustomConflictDetectionRule"/>.
            </summary>
            <param name="serverConnection">Instance of <see cref="T:Aras.IOM.IServerConnection"/> for Innovator instance in the context.</param>
            <param name="name">Name of the custom rule.</param>
        </member>
        <member name="E:Aras.IOME.ConflictDetection.CustomConflictDetectionRule.OnExecute">
             <summary>
             handler for validation methods
             OnExecute event is fired during execution of conflict detection.
             OnExecute methods should contain custom logic of adding <see cref="T:Aras.IOME.ConflictDetection.ConflictDetectionResult"/> to the result list.
             </summary>
            <example>
            <code lang="C#">
            void CustomHandler(object sender, CustomConflictDetectionRuleOnExecuteEventArgs e)
            {
            CustomConflictDetectionRule s = sender as CustomConflictDetectionRule;
            e.AddConflict(s.CreateConflict(e.Configuration, "test string from custom rule"));
            }
            ...
            HttpServerConnection connection = CreateHttpServerConnection("innovatorServerUrl");
            Innovator innovator = IomFactory.CreateInnovator(connection);
            Item itm = innovator.newItem();
            itm.loadAML("&lt;AML/&gt;");
            CheckinManager checkin = factory.CreateCheckinManager(itm);
            ConflictDetectionRuleFactory conflictFactory = checkin.GetConflictDetectionRuleFactory();
            CustomConflictDetectionRule rule = conflictFactory.CreateCustomConflictDetectionRule(connection, "test rule");
            rule.OnExecute += CustomHandler;
            ArrayList rules = new ArrayList();
            rules.Add(rule);
            ArrayList result = checkin.CheckForConflicts(rules);
            ...
            </code>
            </example>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.CustomConflictDetectionRule.Execute(Aras.IOM.Item)">
            <summary>
            Executes validation methods for configaration
            </summary>
            <param name="configuration">Item configuration for check with custom rule.</param>
            <returns>List of <see cref="T:Aras.IOME.ConflictDetection.ConflictDetectionResult"/></returns>
        </member>
        <member name="T:Aras.IOME.ConflictDetection.ConflictDetectionRuleFactory">
            <summary>
            Factory. Provides mechanism of creation conflict detection rules.
            </summary>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.ConflictDetectionRuleFactory.#ctor(Aras.IOM.IServerConnection)">
            <summary>
            Constructor for ConflictDetectionRuleFactory
            </summary>
            <param name="connection">instance of <c>IServerConnection</c>. Connection is used for creation of local conflict detection rules.</param>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.ConflictDetectionRuleFactory.ItemNotLocked">
            <summary>
            Returns instance of rule for detection of ItemNotLocked conflict.
            </summary>
            <see cref="T:Aras.IOME.ConflictDetection.ServiceConflictDetectionRule"/>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.ConflictDetectionRuleFactory.ItemNotUnique">
            <summary>
            Returns instance of rule for detection of ItemNotUnique conflict.
            </summary>
            <see cref="T:Aras.IOME.ConflictDetection.ServiceConflictDetectionRule"/>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.ConflictDetectionRuleFactory.NotEnoughPermissions">
            <summary>
            Returns instance of rule for detection of NotEnoughPermissions conflict.
            </summary>
            <see cref="T:Aras.IOME.ConflictDetection.ServiceConflictDetectionRule"/>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.ConflictDetectionRuleFactory.NotTheLatestGeneration">
            <summary>
            Returns instance of rule for detection of NotTheLatestGeneration conflict.
            </summary>
            <see cref="T:Aras.IOME.ConflictDetection.ServiceConflictDetectionRule"/>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.ConflictDetectionRuleFactory.FileNotAccessible">
            <summary>
            Returns instance of rule for detection of FileNotAccessible conflict.
            </summary>
            <see cref="T:Aras.IOME.ConflictDetection.LocalConflictDetectionRule"/>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.ConflictDetectionRuleFactory.CreateServiceConflictDetectionRule(System.String)">
            <summary>
            Returs new instance of ServiceConflictDetectionRule.
            </summary>
            <param name="name">Name of the method for conflict detection. </param>
            <returns>Instance of <c>ServiceConflictDetectionRule</c> with the method.</returns>
            <see cref="T:Aras.IOME.ConflictDetection.ServiceConflictDetectionRule"/>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.ConflictDetectionRuleFactory.CreateCustomConflictDetectionRule(Aras.IOM.IServerConnection,System.String)">
            <summary>
            Returns new instance of CreateCustomConflictDetectionRule
            </summary>
            <param name="serverConnection">Connection to the server, used to created instance of Innovator within class context.</param>
            <param name="name">Name of the custom method. Used for specifying the name of the rule in <c>ConflictDetectionResult</c> where conflict occured.</param>
            <returns>Instance of <c>CustomConflictDetectionRule</c> with specified name and connection.</returns>
            <see cref="T:Aras.IOME.ConflictDetection.CustomConflictDetectionRule"/>
            <see cref="T:Aras.IOM.IServerConnection"/>
        </member>
        <member name="T:Aras.IOME.ConflictDetection.ConflictDetectionRuleExecutionLocation">
            <summary>
            Enumeration represents available execution location type.
            <list type="bullet">
            <item>
            <description>
            <b>Local</b>
            Rule will be executed on local machine.
            </description>
            </item>
            <item>
            <description>
            <b>Service</b>
            The request to the service will be sent and rule will be executed there.
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Aras.IOME.ConflictDetection.ConflictDetectionRuleExecutionLocation.Local">
            <summary>
            Execution location is local
            </summary>
        </member>
        <member name="F:Aras.IOME.ConflictDetection.ConflictDetectionRuleExecutionLocation.Service">
            <summary>
            Execution location is service
            </summary>
        </member>
        <member name="T:Aras.IOME.ConflictDetection.LocalConflictDetectionRule">
            <summary>
            class for Local conflict detection rule
            </summary>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.LocalConflictDetectionRule.#ctor(Aras.IOM.IServerConnection,System.String)">
             <summary>
            
             </summary>
             <param name="serverConnection"></param>
             <param name="name"></param>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.LocalConflictDetectionRule.Innovator">
            <summary>
            returns instance of innovator
            </summary>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.LocalConflictDetectionRule.Name">
            <summary>
            returns name of conflict detection rule
            </summary>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.LocalConflictDetectionRule.Execute(Aras.IOM.Item)">
            <summary>
            Executes the conflict detection method
            </summary>
            <param name="configuration">Item with the configuration for check</param>
            <returns>List of <see cref="T:Aras.IOME.ConflictDetection.ConflictDetectionResult"/></returns>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.LocalConflictDetectionRule.ExecutionLocation">
            <summary>
            Returns the execution location value. Value from the enumeration <see cref="T:Aras.IOME.ConflictDetection.ConflictDetectionRuleExecutionLocation"/>.
            </summary>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.LocalConflictDetectionRule.CreateConflict(Aras.IOM.Item,System.String)">
            <summary>
            Creates instance of ConflictDetectionResult
            </summary>
            <param name="conflictItem">Item where conflict occured.</param>
            <param name="message">Error message for the conflict Item.</param>
            <returns>Instance of <see cref="T:Aras.IOME.ConflictDetection.ConflictDetectionResult"/> for the conflictItem and error message.</returns>
        </member>
        <member name="T:Aras.IOME.ConflictDetection.ServiceConflictDetectionRule">
            <summary>
            Service conflict detection rule calss. Implements IConflictDetectionRule
            </summary>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.ServiceConflictDetectionRule.#ctor">
            <summary>
            creates ServiceConflictDetectionRule
            </summary>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.ServiceConflictDetectionRule.#ctor(System.String)">
            <summary>
            creates ServiceConflictDetectionRule
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.ServiceConflictDetectionRule.Name">
            <summary>
            gets or sets the name of ConflictDetectionRule
            </summary>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.ServiceConflictDetectionRule.ExecutionLocation">
            <summary>
            returns the execution location
            </summary>
        </member>
        <member name="T:Aras.IOME.ConflictDetection.IConflictDetectionService">
            <summary>
            Common interface for ConflictDetection services
            </summary>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.IConflictDetectionService.CheckForConflicts(Aras.IOM.Item,System.Collections.Generic.IList{Aras.IOME.ConflictDetection.ServiceConflictDetectionRule})">
            <summary>
            checks for conflicts configuration according to rules
            </summary>
            <param name="configuration"></param>
            <param name="rules"></param>
            <returns></returns>
        </member>
        <member name="T:Aras.IOME.ConflictDetection.IConflictDetectionServiceFactory">
             <summary>
            
             </summary>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.IConflictDetectionServiceFactory.GetConflictDetectionService">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:Aras.IOME.ConflictDetection.ConflictDetectionWebService">
            <remarks/>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.ConflictDetectionWebService.#ctor(System.String,System.Net.CookieContainer,System.String,System.String,System.String)">
            <summary>
            web service for detection conflicts
            </summary>
            <param name="url"></param>
            <param name="cookieContainer"></param>
            <param name="database"></param>
            <param name="userName"></param>
            <param name="password"></param>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.ConflictDetectionWebService.SetRequestHeader(System.ServiceModel.Channels.HttpRequestMessageProperty)">
            <summary>
            Set request headers.
            </summary>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.ConflictDetectionWebService.CheckForConflicts(System.Xml.XmlElement,Aras.IOME.ConflictDetection.ServiceConflictDetectionRule[])">
            <remarks/>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.ConflictDetectionWebService.Dispose(System.Boolean)">
             <summary>
            
             </summary>
             <param name="disposing"></param>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.ConflictDetectionWebService.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="T:Aras.IOME.ConflictDetection.ConflictDetector">
             <summary>
            
             </summary>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.ConflictDetector.#ctor(Aras.IOM.IServerConnection)">
            <summary>
            Contains logic of conflict detection
            </summary>
            <param name="serverConnection">Instance of <c>IServerConnection</c>.</param>
        </member>
        <member name="M:Aras.IOME.ConflictDetection.ConflictDetector.CheckForConflicts(Aras.IOM.Item,System.Collections.Generic.IList{Aras.IOME.ConflictDetection.IConflictDetectionRule})">
            <summary>
            checks configuration for conflicts according to rules and returns list of ConflictDetectionResult
            </summary>
            <param name="configuration">Item with configuration for checking for conflicts.</param>
            <param name="rules">List of <c>IConflictDetectionRule</c> for which configuration should be checked.</param>
            <returns>IList of <c>ConflictDetectionResult</c></returns>
        </member>
        <member name="T:Aras.IOME.ConflictDetection.IConflictDetectionRule">
            <summary>
            Base interface for all conflict detection rules
            </summary>
        </member>
        <member name="P:Aras.IOME.ConflictDetection.IConflictDetectionRule.ExecutionLocation">
            <summary>
            returns the execution location value
            </summary>
        </member>
        <member name="T:Aras.IOME.ItemErrorException">
            <summary>
            Exception which wrap error Item
            </summary>
        </member>
        <member name="M:Aras.IOME.ItemErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>
            
             </summary>
             <param name="serializationInfo"></param>
             <param name="streamingContext"></param>
        </member>
        <member name="M:Aras.IOME.ItemErrorException.#ctor">
            <summary>
            Constructor for <c>ItemErrorException</c>
            </summary>
        </member>
        <member name="M:Aras.IOME.ItemErrorException.#ctor(System.String)">
            <summary>
            Constructor for <c>ItemErrorException</c>
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:Aras.IOME.ItemErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor for <c>ItemErrorException</c>
            </summary>
            <param name="message">Error message</param>
            <param name="ex">Instance of Exception</param>
        </member>
        <member name="M:Aras.IOME.ItemErrorException.#ctor(Aras.IOM.Item)">
            <summary>
            Constructor for <c>ItemErrorException</c>
            </summary>
            <param name="error">Item with error</param>
        </member>
        <member name="P:Aras.IOME.ItemErrorException.Error">
            <summary>
            Readonly property. Returns Item with error.
            </summary>
        </member>
        <member name="M:Aras.IOME.ItemErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>
            
             </summary>
             <param name="info"></param>
             <param name="context"></param>
        </member>
        <member name="T:Aras.IOME.InvalidConflictDetectionResult">
            <summary>
            Class represents invalid ConflictDetection result exception.
            </summary>
        </member>
        <member name="M:Aras.IOME.InvalidConflictDetectionResult.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for <c>InvalidConflictDetectionResult</c>
            </summary>
            <param name="serializationInfo">Data that is required to serialize/deserialize an object</param>
            <param name="streamingContext">Source and destination of serialization steam.</param>
        </member>
        <member name="M:Aras.IOME.InvalidConflictDetectionResult.#ctor">
            <summary>
            Constructor for <c>InvalidConflictDetectionResult</c>
            </summary>
        </member>
        <member name="M:Aras.IOME.InvalidConflictDetectionResult.#ctor(System.String)">
            <summary>
            Constructor for <c>InvalidConflictDetectionResult</c>
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:Aras.IOME.InvalidConflictDetectionResult.#ctor(System.String,System.Exception)">
            <summary>
            Constructor for <c>InvalidConflictDetectionResult</c>
            </summary>
            <param name="message">Error message</param>
            <param name="ex">Instance of Exception</param>
        </member>
        <member name="T:Aras.IOME.IItemConfigurationBuilder">
            <summary>
            Interface must be implemented by ItemConfigurationBuilders, allows to get modified configuration
            </summary>
        </member>
        <member name="M:Aras.IOME.IItemConfigurationBuilder.GetItemConfiguration">
            <summary>
            Returns resulting configuration.
            </summary>
            <returns>
            Item object, which represents resulting configuration.
            </returns>
        </member>
        <member name="T:Aras.IOME.MultiParentConfigurationBuilder">
            <summary>
            This ItemConfigurationBuilder allows to add parent Items for all Items in configuration
            </summary>
        </member>
        <member name="M:Aras.IOME.MultiParentConfigurationBuilder.addParent(System.String,Aras.IOM.Item,System.String)">
            <summary>
             Modifies configuration, appends parentItem with the related 'childId' Item.
            </summary>
            <param name="childId">
            ID of the item in the configuration
            </param>
            <param name="parentItem">
            Parent Item, it will be appended to configuration with the related 'childId' Item
            </param>
            <param name="relationshipName">
            name of the relationship that connects parentItem and item with 'itemId' in the configuration
            </param>
        </member>
        <member name="M:Aras.IOME.MultiParentConfigurationBuilder.GetItemConfiguration">
            <summary>
            returns resulting Configuration Item
            </summary>
        </member>
        <member name="T:Aras.IOME.UploadFileCompletedEventArgs">
            <summary>
            Provides data for <c>UploadFileCompleted</c> event which is raised when uploading of a single file to vault was completed.
            <list type="bullet">
            <item>
            <description>
            <b>Result</b>
            Result Item for uploading file to vault.
            </description>
            </item>
            <item>
            <description>
            <b>Error</b>
            Information on error that occured while uploading file.
            </description>
            </item>
            <item>
            <description>
            <b>Cancelled</b>
            Boolean value. Shows if upload operation was cancelled.
            </description>
            </item>
            <item>
            <description>
            <b>UserState</b>
            May contain additional information. Usually id of the file for which upload operation was completed.
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Aras.IOME.UploadFileCompletedEventArgs.Result">
            <summary>
            Contains result Item of uploading file to vault operation.
            </summary>
            <see cref="T:Aras.IOM.Item"/>
        </member>
        <member name="T:Aras.IOME.UploadFilesCompletedEventArgs">
             <summary>
            Provides information for <c>UploadFilesCompleted</c> event which is raised when uploading of all files in configuration was completed.
            <list type="bullet">
            <item>
            <description>
            <b>Result</b>
            Returns hashtable with the results of uploading files to vault.
            Key is the id of uploaded file, value is the instance of <see cref="T:Aras.IOME.UploadResult"/> class.
            </description>
            </item>
             <item>
             <description>
             <b>Error</b>
             Information on error that occured while uploading files.
             </description>
             </item>
             <item>
             <description>
             <b>Cancelled</b>
             Boolean value. Shows if upload operation was cancelled.
             </description>
             </item>
             <item>
             <description>
             <b>UserState</b>
             May contain additional information. Usually initial checkin configuration.
             </description>
             </item>
            </list>
             </summary>
        </member>
        <member name="P:Aras.IOME.UploadFilesCompletedEventArgs.Result">
            <summary>
            Contains collection of results of uploading files to vault operations.
            Keys in hashtable are ids of the files that were uploaded to vault.
            Values are instances of <see cref="T:Aras.IOME.UploadResult"/> class. With additional information.
            </summary>
        </member>
        <member name="T:Aras.IOME.UploadFilesProgressChangedEventArgs">
            <summary>
            Provides data for <c>UploadFilesProgressChanged</c> event which is raised when the progress percentage is changed (a file is uploaded to vault).
            </summary>
            <list type="bullet">
            <item>
            <description>
            <b>ProgressPercentage</b>
            Current progress of operation in percents.
            </description>
            </item>
            <item>
            <description>
            <b>
            UserState
            </b>
            Contains additional information for action. Usually id of the file uploading of which was completed.
            </description>
            </item>
            </list>
            <seealso cref="T:System.ComponentModel.ProgressChangedEventArgs"/>
        </member>
        <member name="M:Aras.IOME.UploadFilesProgressChangedEventArgs.#ctor(System.Int32,System.Object)">
            <summary>Initializes a new instance of the ProgressChangedEventArgs class</summary>
        </member>
        <member name="E:Aras.IOME.UploadManager.UploadFileCompleted">
             <summary>
            
             </summary>
        </member>
        <member name="M:Aras.IOME.UploadManager.UploadFileAsync(Aras.IOM.Item,Aras.IOM.Vault.VaultServerTransaction)">
            <summary>
            Async upload method
            </summary>
            <param name="item">Item-file to download</param>
            <param name="tnx">Vault transaction</param>
        </member>
        <member name="M:Aras.IOME.UploadManager.UploadFileCancelAsync(System.Object)">
            <summary>
            Allows you to interrupt the upload for a given thread
            </summary>
            <param name="userState">Key object identifies the file-item</param>
        </member>
        <member name="T:Aras.IOME.UploadResult">
            <summary>
            Represents result of a single file upload.
            </summary>
            <remarks>
            In case an unhandled exception was raised during the file upload the upload of the file is interrupted
            and the exception is stored in the <c>Error</c> property of the class. Otherwise the result of the
            <c>Aras.IOME.CheckinManager.Checkin(...)</c> for the file is stored in the <c>Result</c> property of the class.
            </remarks>
            <seealso cref="M:Aras.IOME.CheckinManager.Checkin(System.Int32)"/>
            <see cref="T:Aras.IOM.Item"/>
        </member>
        <member name="M:Aras.IOME.UploadResult.#ctor(Aras.IOME.UploadFileCompletedEventArgs)">
            <summary>
            Default 'ctor
            </summary>
            <param name="eventArg"></param>
        </member>
        <member name="P:Aras.IOME.UploadResult.Result">
            <summary>
            Allows to get result item which is the item that was returned by <c>Aras.IOME.Checkin(...)</c>
            for the file.
            </summary>
            <remarks>
            Read only property. If an unhandled exception was raised during the file download then the property is <c>null</c>.
            </remarks>
        </member>
        <member name="P:Aras.IOME.UploadResult.Error">
            <summary>
            Allow to get an unhandled exception that was raised during the file upload.
            </summary>
            <remarks>
            Read only property. If no unhandled exception was raised during the file upload then the property is <c>null</c>
            </remarks>
        </member>
        <member name="M:Aras.IOME.UploadResult.RaiseExceptionIfNecessary">
            <summary>
            Raises a user-supplied exception if an asynchronous operation failed.
            </summary>
        </member>
        <member name="T:Aras.IOME.CheckoutManager">
            <summary>
            Provide methods for locking all required items in the specified configuration of items and
            for synchronous and asynchronous downloading of all the files in the configuration.
            </summary>
            <summary>
            Provide methods for locking all required items in the specified configuration of items and
            for synchronous and asynchronous downloading of all the files in the configuration.
            </summary>
        </member>
        <member name="M:Aras.IOME.CheckoutManager.DownloadFilesAsync(System.String,System.Int32)">
            <summary>
            Start asynchronous parallel multi-threaded download of all files in the configuration.
            </summary>
            <remarks>
            The method finds all items of type 'File' in the configuration and downloads their physical files
            to the specified download directory. The following assumptions are made:
            <list type="bullet">
             <item>
              <description>
              If an item of type 'File' has <b>at least one</b> relationship of type 'Located' it's assumed that the item
              has <b>all</b> relationships of type 'Located' with their corresponding related items of type 'Vault'; i.e.
              the full configuration of the item of type 'File' is present in the configuration.
              </description>
             </item>
             <item>
              <description>
              If an item of type 'File' does not have any relationships of type 'Located' the full configuration of the
              item (i.e. all its 'Located' with corresponding items of type 'Vault') are obtained from the Innovator server
              during the file checkout.
              </description>
             </item>
            </list>
            </remarks>
            <param name="targetDir">
            Target download directory
            </param>
            <param name="numberOfThreads">
            The amount of processing threads (from 1 to 10). If parameter valus is less than <c>1</c> then <c>1</c>
            is assumed. If parameter value is greater than <c>10</c> then <c>10</c> is assumed.
            </param>
        </member>
        <member name="M:Aras.IOME.CheckoutManager.DownloadFilesCancelAsync">
            <summary>
            Cancel asynchronous download that was started by <see cref="M:Aras.IOME.CheckoutManager.DownloadFilesAsync(System.String,System.Int32)"/>.
            </summary>
            <remarks>
            Returns immediately. Files that are being downloaded at the moment of the call
            continue downloading untill they are done. Calling the method causes the <c>DownloadFilesCompleted</c>
            event to be raised.
            </remarks>
            <seealso cref="T:System.ComponentModel.AsyncCompletedEventArgs"/>
            <seealso cref="T:Aras.IOME.DownloadFileCompletedEventArgs"/>
        </member>
        <member name="M:Aras.IOME.CheckoutManager.DownloadFilesPauseAsync">
            <summary>
            Pause asynchronous download of files that was started by <see cref="M:Aras.IOME.CheckoutManager.DownloadFilesAsync(System.String,System.Int32)"/>.
            </summary>
            <remarks>
            The method could be called only if asynchronous download is in progress; otherwise the method
            throws an exception.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            Thrown in case the method is called when there is no asynchronous download in progress.
            </exception>
        </member>
        <member name="M:Aras.IOME.CheckoutManager.DownloadFilesResumeAsync">
            <summary>
            Resume asynchronous download of files if it was previously paused by <see cref="M:Aras.IOME.CheckoutManager.DownloadFilesPauseAsync"/>.
            </summary>
            <remarks>
            The method must be called <b>only</b> in case the operation was previously
            paused by <see cref="M:Aras.IOME.CheckoutManager.DownloadFilesPauseAsync"/>.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            Thrown in case the operation was not previously paused by <see cref="M:Aras.IOME.CheckoutManager.DownloadFilesPauseAsync"/>.
            </exception>
        </member>
        <member name="M:Aras.IOME.CheckoutManager.doDownloadFilesAsync(System.String)">
            <summary>
            This method used by DownloadFilesAsync and DownloadFiles methods.
            Provides functionality for manage the loading of files by DownloadManager.
            With semaphores, we can easily adjust the number of simultaneously loaded threads (semaphore_maxThreads).
            this.semaphore_loadResume used for manage resume / pause state.
            </summary>
            <param name="target_dir">Directory to download</param>
            <returns>A composite task containing all download tasks</returns>
        </member>
        <member name="M:Aras.IOME.CheckoutManager.dm_DownloadFileAsyncCompleted(System.Object,Aras.IOME.DownloadFileCompletedEventArgs)">
            <summary>
            Event handler used by async download files method
            </summary>
        </member>
        <member name="E:Aras.IOME.CheckoutManager.DownloadFilesCompleted">
            <summary>
            Downloads are complete; arguments contain result of the operation.
            </summary>
            <remarks>
            The event is raised when either all file downloads are finished or when the operation was
            canceled by user.
            </remarks>
            <seealso cref="T:System.ComponentModel.AsyncCompletedEventArgs"/>
            <seealso cref="T:Aras.IOME.DownloadFilesCompletedEventArgs"/>
            <seealso cref="T:Aras.IOME.DownloadResult"/>
        </member>
        <member name="E:Aras.IOME.CheckoutManager.DownloadFilesProgressChanged">
            <summary>
            Progress of download operation is changed; arguments contains progress percentage.
            </summary>
            <seealso cref="T:System.ComponentModel.ProgressChangedEventArgs"/>
        </member>
        <member name="E:Aras.IOME.CheckoutManager.DownloadFileCompleted">
            <summary>
            A single file download is complete; the argument contains the result of the download.
            </summary>
            <seealso cref="T:System.ComponentModel.AsyncCompletedEventArgs"/>
            <seealso cref="T:Aras.IOME.DownloadFileCompletedEventArgs"/>
        </member>
        <member name="F:Aras.IOME.CheckoutManager.semaphore_maxThreads">
            <summary>
            blocks current thread if max number of simultaneous operations achieved
            </summary>
        </member>
        <member name="F:Aras.IOME.CheckoutManager.semaphore_loadResume">
            <summary>
            Blocks current thread until CheckoutManager.DownloadFilesResumeAsync will be called
            </summary>
        </member>
        <member name="P:Aras.IOME.CheckoutManager.Flags">
            <summary>
            Property contains value of <c>CheckoutManagerFlags</c> and shows which operations should be performed during checkout.
            </summary>
            <see cref="T:Aras.IOME.CheckoutManagerFlags"/>
        </member>
        <member name="M:Aras.IOME.CheckoutManager.#ctor(Aras.IOM.Item)">
            <summary>
            Constructor that gets the configuration\collection of items that have to be processed.
            </summary>
            <remarks>
            If ApartmentState of thread where constructor is called use STA model, then WindowsFormsSynchronizationContext
            will be used by default if SynchronizationContext.Current property is not set.
            </remarks>
            <param name="configuration">Configuration\collection of Items that has to be processed.</param>
        </member>
        <member name="M:Aras.IOME.CheckoutManager.#ctor(Aras.IOM.Item,Aras.IOME.CheckoutManagerFlags)">
            <summary>
            Constructor that gets the configuration\collection of items that have to be processed and CheckoutManager flags that shows which operations should be performed during checkout.
            </summary>
            <param name="configuration">Configuration\collection of Items that has to be processed.</param>
            <param name="flags">CheckoutManager flags that shows which operations should be performed during checkout.</param>
        </member>
        <member name="M:Aras.IOME.CheckoutManager.Lock">
            <summary>
            Lock all items in the configuration that have <c>action='lock'</c>.
            </summary>
            <remarks>
            Locking of all required items is performed in a single request. Items of type 'File', 'Vault', 'Located' are
            explicitly excluded even if they have <c>action='lock'</c>.
            </remarks>
            <returns>The result of the operation is returned as <see cref="T:Aras.IOM.Item"/></returns>
            <seealso cref="T:Aras.IOM.Item"/>
        </member>
        <member name="M:Aras.IOME.CheckoutManager.DownloadFiles(System.String,System.Int32)">
            <summary>
            Performs synchronous parallel multi-threaded download of all files in the configuration.
            </summary>
            <remarks>
            The method finds all items of type 'File' in the configuration and downloads their physical files
            to the specified download directory. The following assumptions are made:
            <list type="bullet">
             <item>
              <description>
              If an item of type 'File' has <b>at least one</b> relationship of type 'Located' it's assumed that the item
              has <b>all</b> relationships of type 'Located' with their corresponding related items of type 'Vault'; i.e.
              the full configuration of the item of type 'File' is present in the configuration.
              </description>
             </item>
             <item>
              <description>
              If an item of type 'File' does not have any relationships of type 'Located' the full configuration of the
              item (i.e. all its 'Located' with corresponding items of type 'Vault') are obtained from the Innovator server
              during the file checkout.
              </description>
             </item>
            </list>
            </remarks>
            <param name="targetDir">
            Target download directory
            </param>
            <param name="numberOfThreads">
            The amount of processing threads (from 1 to 10). If parameter value is less than <c>1</c> then <c>1</c>
            is assumed. If parameter value is greater than <c>10</c> then <c>10</c> is assumed.
            </param>
            <returns>
            The return collection contain the result of the download for
            each file: key = FileId, value = <see cref="T:Aras.IOME.DownloadResult"/>
            </returns>
            <seealso cref="T:Aras.IOME.DownloadResult"/>
        </member>
        <member name="M:Aras.IOME.CheckoutManager.InitCheckoutManager">
            <summary>
            Init some variables and objects of checkout manager
            </summary>
        </member>
        <member name="M:Aras.IOME.CheckoutManager.dm_DownloadFileCompleted(System.Object,Aras.IOME.DownloadFileCompletedEventArgs)">
            <summary>
            Event handler used by sync download files method
            </summary>
        </member>
        <member name="M:Aras.IOME.CheckoutManager.checkThreadsNum(System.Int32)">
            <summary>
            Initial check of threads_num for max-min values
            </summary>
            <param name="threadsNum">Specified number of threads </param>
            <returns>Corrected number of threads</returns>
        </member>
        <member name="M:Aras.IOME.CheckoutManager.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Aras.IOME.CheckoutManager.Dispose">
            <summary>
            Release all resources managed by instance
            </summary>
        </member>
        <member name="T:Aras.IOME.DownloadFileCompletedEventArgs">
            <summary>
            Provides data for <c>DownloadFileCompleted</c> event which is raised when a single file download is complete.
            </summary>
            <remarks>
            In case an unhandled exception was raised during the file download the download of the file is interrupted
            and the exception is stored in the <c>Error</c> property of the class. Otherwise the result of the
            <c>Aras.IOM.Item.checkout(...)</c> for the file is stored in the <c>Result</c> property of the class.
            </remarks>
        </member>
        <member name="M:Aras.IOME.DownloadFileCompletedEventArgs.#ctor(Aras.IOM.Item,System.Exception,System.Boolean,System.Object)">
            <summary>Initializes a new instance of the DownloadFileCompletedEventArgs class</summary>
            <param name="result">Item object that contain Item info</param>
            <param name="error">Exception object that indicated error state</param>
            <param name="cancelled">Bool value that indicated operation state</param>
            <param name="userState">Object user state</param>
        </member>
        <member name="P:Aras.IOME.DownloadFileCompletedEventArgs.Result">
            <summary>
            Returns the result item which is the item that was returned by <c>Aras.IOM.Item.checkout(...)</c>
            for the file.
            </summary>
            <remarks>
            Read only property. If an unhandled exception was raised during the file download then the property is <c>null</c>.
            </remarks>
            <exception cref="T:System.InvalidOperationException">The <c>Cancelled</c> property is true.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">
            The Error property has been set by the asynchronous operation. The InnerException property holds a reference to Error.
            </exception>
        </member>
        <member name="T:Aras.IOME.DownloadFilesCompletedEventArgs">
            <summary>
            Provides data for <c>DownloadFilesCompleted</c> event which is raised when either all file downloads
            are complete or when the operation was cancled by user.
            </summary>
            <remarks>
            In case an unhandled exception was raised during the initiation of asynchronous download of files
            the download operation is interrupted and the exception is stored in the <c>Error</c> property of the class.
            Otherwise the <c>Result</c> property of the class contains a hash table of <c>file ID</c> - <see cref="T:Aras.IOME.DownloadResult"/>
            pairs where each element represents download result for a particular file.
            </remarks>
        </member>
        <member name="M:Aras.IOME.DownloadFilesCompletedEventArgs.#ctor(System.Collections.Hashtable,System.Exception,System.Boolean,System.Object)">
            <summary>
            Default 'ctor
            </summary>
            <param name="hashResult">Hashtable contains FileId as key and DownloadResult object as value</param>
            <param name="error">Exception object that indicated method state</param>
            <param name="cancelled">Bool value that indicated operation state</param>
            <param name="userState">Object user state</param>
        </member>
        <member name="P:Aras.IOME.DownloadFilesCompletedEventArgs.Result">
            <summary>
            Returns the hashtable of <c>file ID</c> - <see cref="T:Aras.IOME.DownloadResult"/> pairs where each element
            represent a download results for a particular file.
            </summary>
            <remarks>
            Read only property. If an unhandled exception was raised during initiation of asynchronous download of files
            then the property is <c>null</c>.
            </remarks>
            <exception cref="T:System.InvalidOperationException">The <c>Cancelled</c> property is true.</exception>
            <exception cref="T:System.Reflection.TargetInvocationException">
            The Error property has been set by the asynchronous operation. The InnerException property holds a reference to Error.
            </exception>
        </member>
        <member name="T:Aras.IOME.DownloadManager">
            <summary>
            DownloadManager provides basic functionality for single file download.
            Loading can be either synchronous or asynchronous.
            Both options are implemented via the method Item.checkout(target_dir).
            Each file is loaded into a new thread in the asynchronous version.
            In the asynchronous version is also supported canceling the file download.
            Asynchronous downloading and cancelling downloading interact with caller via the event DownloadFileCompleted
            </summary>
            <summary>
            DownloadManager provides basic functionality for single file download.
            Loading can be either synchronous or asynchronous.
            Both options are implemented via the method Item.checkout(target_dir).
            Each file is loaded into a new thread in the asynchronous version.
            In the asynchronous version is also supported canceling the file download.
            Asynchronous downloading and cancelling downloading interact with caller via the event DownloadFileCompleted
            </summary>
        </member>
        <member name="E:Aras.IOME.DownloadManager.DownloadFileCompleted">
            <summary>
            DownloadFileCompleted: operation are completed(arguments contain result of operation)
            </summary>
        </member>
        <member name="M:Aras.IOME.DownloadManager.DownloadFile(Aras.IOM.Item,System.String)">
            <summary>
            Sync download method
            </summary>
            <param name="dmFile">Item-file to download</param>
            <param name="targetDir">Directory where the file will be saved</param>
            <returns>Item-file which represent result of sync download</returns>
        </member>
        <member name="M:Aras.IOME.DownloadManager.DownloadFileAsync(Aras.IOM.Item,System.String,System.Object,Aras.IOM.Vault.VaultServerTransaction)">
            <summary>
            Async download method
            </summary>
            <param name="dmFile">Item-file to download</param>
            <param name="targetDir">Directory where the file will be saved</param>
            <param name="userState">Key object identifies the file-item</param>
            <param name="tnx">VaultServer transaction of the file</param>
        </member>
        <member name="M:Aras.IOME.DownloadManager.CancelAsyncDownload(System.Object)">
            <summary>
            Allows you to interrupt the download for a given thread
            </summary>
            <param name="userState">Key object identifies the file-item</param>
        </member>
        <member name="T:Aras.IOME.DownloadFilesProgressChangedEventArgs">
            <summary>
            Provides data for <c>DownloadFilesProgressChanged</c> event which is raised when the progress percentage is changed.
            </summary>
            <seealso cref="T:System.ComponentModel.ProgressChangedEventArgs"/>
        </member>
        <member name="M:Aras.IOME.DownloadFilesProgressChangedEventArgs.#ctor(System.Int32,System.Object)">
            <summary>Initializes a new instance of the ProgressChangedEventArgs class</summary>
        </member>
        <member name="T:Aras.IOME.DownloadResult">
            <summary>
            Represents result of a single file download.
            </summary>
            <remarks>
            In case an unhandled exception was raised during the file download the download of the file is interrupted
            and the exception is stored in the <c>Error</c> property of the class. Otherwise the result of the
            <c>Aras.IOM.Item.checkout(...)</c> for the file is stored in the <c>Result</c> property of the class.
            </remarks>
        </member>
        <member name="M:Aras.IOME.DownloadResult.#ctor(Aras.IOME.DownloadFileCompletedEventArgs)">
            <summary>
            Default 'ctor
            </summary>
            <param name="eventArg"></param>
        </member>
        <member name="P:Aras.IOME.DownloadResult.Result">
            <summary>
            Allows to get result item which is the item that was returned by <c>Aras.IOM.Item.checkout(...)</c>
            for the file.
            </summary>
            <remarks>
            Read only property. If an unhandled exception was raised during the file download then the property is <c>null</c>.
            </remarks>
        </member>
        <member name="P:Aras.IOME.DownloadResult.Error">
            <summary>
            Allow to get an unhandled exception that was raised during the file download.
            </summary>
            <remarks>
            Read only property. If no unhandled exception was raised during the file download then the property is <c>null</c>
            </remarks>
        </member>
        <member name="M:Aras.IOME.DownloadResult.RaiseExceptionIfNecessary">
            <summary>
            Raises a user-supplied exception if an asynchronous operation failed.
            </summary>
        </member>
        <member name="T:Aras.IOME.ICacheable">
            <summary>
            This interface should be implemented in user class which will be used in cache.
            </summary>
        </member>
        <member name="M:Aras.IOME.ICacheable.GetGuidsItemDependsOn">
            <summary>
            Returns array of strings which are all guids current instance depends on.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Aras.IOME.forlocker">
            <summary>
            Describes signature for method to be used in <see cref="M:withinlocker"/>.
            </summary>
        </member>
        <member name="T:Aras.IOME.ArrayListComparer">
            <summary>
            Exposes a method that compares two instances of <see cref="T:System.Collections.ArrayList"/>.
            </summary>
        </member>
        <member name="M:Aras.IOME.ArrayListComparer.Equals(System.Object,System.Object)">
            <summary>
              Performs a case-insensitive comparison of two objects of the same type and
            returns a value indicating whether one is less than, equal to, or greater
            than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
              Value Condition Less than zero a is less than b, with casing ignored. Zero
              a equals b, with casing ignored. Greater than zero a is greater than b, with
              casing ignored.
            </returns>
        </member>
        <member name="M:Aras.IOME.ArrayListComparer.GetHashCode(System.Object)">
            <summary>
            Returns a hash code for the specified <see cref="T:System.Collections.ArrayList"/>.
            </summary>
            <param name="obj">
            The <see cref="T:System.Collections.ArrayList"/> for which a hash code is to be returned.
            </param>
            <returns>
            A hash code for the specified <see cref="T:System.Collections.ArrayList"/>.
            </returns>
        </member>
        <member name="T:Aras.IOME.ItemCache">
            <summary>
            Implements a hash table into which one can store items by keys consisting of an array of strings.
            Keys and values can be flushed from the hash table by item GUID.
            </summary>
        </member>
        <member name="M:Aras.IOME.ItemCache.RemoveAllItems(System.String)">
            <summary>
            Remove all data dependent on the specified guid from cache.
            </summary>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.Remove(System.String[])">
            <summary>
            Remove all data dependent on the specified guids from cache.
            </summary>
            <param name="idlist"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.Remove(System.Collections.ArrayList)">
            <summary>
            Remove data from cache using the specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.FindGuidsInValue(System.Object,System.Collections.Hashtable)">
            <summary>
            Populate the specified <see cref="T:System.Collections.Hashtable"/> with guids contained in the specified <see cref="T:System.Object"/>.
            </summary>
            <param name="value"></param>
            <param name="hset"></param>
        </member>
        <member name="M:Aras.IOME.ItemCache.FindGuidsInValue(System.Xml.XmlElement,System.Collections.Hashtable)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="hset"></param>
        </member>
        <member name="M:Aras.IOME.ItemCache.FindGuidsInKey(System.Collections.ArrayList,System.Collections.Hashtable)">
            <summary>
            Populate the specified <see cref="T:System.Collections.Hashtable"/> with guids contained in the specified
            <see cref="T:System.Collections.ArrayList"/>.
            </summary>
            <param name="key"></param>
            <param name="hset"></param>
        </member>
        <member name="M:Aras.IOME.ItemCache.GetItem(System.Collections.ArrayList)">
            <summary>
            Gets data from cache using the specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.IsGuidString(System.Object)">
            <summary>
            Check if the passed object is guid string.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.SetItem(System.Collections.ArrayList,System.Object)">
            <summary>
            Put data into cache.
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.SetItem_Implementation(System.Collections.ArrayList,System.Object)">
            <summary>
            Put the data into cache using the specified key.
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.Clear">
            <summary>
            Reset cache.
            </summary>
        </member>
        <member name="M:Aras.IOME.ItemCache.CheckThatKeyIsValid(System.Collections.ArrayList)">
            <summary>
            Checks that all values in the specified <see cref="T:System.Collections.ArrayList"/> are strings and booleans.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Aras.IOME.ItemCache.Keys">
            <summary>
            Get all keys used in cache.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.Dependencies">
            <summary>
            Get all dependencies keys in cache.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.DescribeKey(System.Collections.ArrayList)">
            <summary>
            Present the specified cache key in human readable form.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.withinlocker(Aras.IOME.forlocker,System.Object)">
            <summary>
            Allows to run some function in critical section.
            Locking the <see cref="T:Aras.IOME.ItemCache"/>.
            </summary>
            <param name="fcn"></param>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.ContainsKey(System.Collections.ArrayList)">
            <summary>
            Checks if cache contains data for the specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.ThrowIllegalDatatypeError(System.String,System.Object)">
            <summary>
            Throws <see cref="T:System.Exception"/> with "&lt;Type&gt; is an illegal datatype in &lt;place&gt;" mesage.
            </summary>
            <param name="paramName"></param>
            <param name="x"></param>
        </member>
        <member name="M:Aras.IOME.ItemCache.GetItemsById(System.String)">
            <summary>
            Finds keys containing the id. Returns items found by keys.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.#ctor">
            <summary>
            Initialize an instance of <see cref="T:Aras.IOME.ItemCache"/>.
            </summary>
        </member>
        <member name="M:Aras.IOME.ItemCache.SetItem(System.Collections.ArrayList,System.Collections.ArrayList)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <param name="val"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.SetItem(System.Collections.ArrayList,System.Int32)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <param name="val"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.SetItem(System.Collections.ArrayList,System.Boolean)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <param name="val"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.SetItem(System.Collections.ArrayList,System.String)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <param name="val"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.SetItem(System.Collections.ArrayList,System.Xml.XmlElement)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <param name="val"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.SetItem(System.Collections.ArrayList,Aras.IOME.ICacheable)">
            <summary>
            Put the ICacheble type instance to cache
            </summary>
            <param name="key">
            </param>
            <param name="val">
            </param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.Dependencies(System.String)">
            <summary>
            Get dependencies on the specified guid.
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.IOME.ItemCache.PrintCacheToXml(System.Xml.XmlElement)">
            <summary>
            Prints cache content to XmlDocument
            </summary>
            <param name="result"></param>
        </member>
        <member name="T:Aras.IOME.Licensing.ILicenseManagerWebService">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Aras.IOME.Licensing.ILicenseManagerWebService.ConsumeLicense(System.String)">
             <summary>
            
             </summary>
             <param name="featureName"></param>
        </member>
        <member name="M:Aras.IOME.Licensing.ILicenseManagerWebService.ReleaseLicense(System.String)">
             <summary>
            
             </summary>
             <param name="id"></param>
        </member>
        <member name="M:Aras.IOME.Licensing.ILicenseManagerWebService.GetServerInfo">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Aras.IOME.Licensing.ILicenseManagerWebService.GetFeatureTree">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Aras.IOME.Licensing.ILicenseManagerWebService.UpdateFeatureTree(System.String)">
             <summary>
            
             </summary>
             <param name="encryptedFeatureTree"></param>
        </member>
        <member name="M:Aras.IOME.Licensing.ILicenseManagerWebService.ImportFeatureLicense(System.String)">
             <summary>
            
             </summary>
             <param name="encryptedFeatureLicense"></param>
        </member>
        <member name="T:Aras.IOME.Licensing.ILicenseManagerWebServiceFactory">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Aras.IOME.Licensing.ILicenseManagerWebServiceFactory.GetLicenseManagerWebService">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Aras.IOME.Licensing.LicenseManagerWebService.#ctor(System.String,System.Net.CookieContainer,Aras.IOM.IAuthenticator)">
             <summary>
            
             </summary>
             <param name="url"></param>
             <param name="cookieContainer"></param>
             <param name="authenticator"></param>
        </member>
        <member name="M:Aras.IOME.Licensing.LicenseManagerWebService.SetRequestHeader(System.ServiceModel.Channels.HttpRequestMessageProperty)">
            <summary>
            Set request headers.
            </summary>
        </member>
        <member name="M:Aras.IOME.Licensing.LicenseManagerWebService.ConsumeLicense(System.String)">
             <summary>
            
             </summary>
             <param name="featureName"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.IOME.Licensing.LicenseManagerWebService.GetFeatureTree">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Aras.IOME.Licensing.LicenseManagerWebService.GetServerInfo">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Aras.IOME.Licensing.LicenseManagerWebService.ImportFeatureLicense(System.String)">
             <summary>
            
             </summary>
             <param name="encryptedFeatureLicense"></param>
        </member>
        <member name="M:Aras.IOME.Licensing.LicenseManagerWebService.ReleaseLicense(System.String)">
             <summary>
            
             </summary>
             <param name="id"></param>
        </member>
        <member name="M:Aras.IOME.Licensing.LicenseManagerWebService.UpdateFeatureTree(System.String)">
             <summary>
            
             </summary>
             <param name="encryptedFeatureTree"></param>
        </member>
        <member name="M:Aras.IOME.Licensing.LicenseManagerWebService.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="T:Aras.IOME.Licensing.LicenseManager">
            <summary>
            Main class to get, validate, consume and release feature licenses.
            </summary>
        </member>
        <member name="M:Aras.IOME.Licensing.LicenseManager.#ctor(Aras.IOM.IServerConnection)">
             <summary>
            
             </summary>
             <param name="serverConnection"></param>
        </member>
        <member name="M:Aras.IOME.Licensing.LicenseManager.ConsumeLicense(System.String)">
             <summary>
            
             </summary>
             <param name="featureName"></param>
        </member>
        <member name="T:Aras.IOME.CheckoutManagerFlags">
            <summary>
            Enumeration for setting additional checkout parameters
            </summary>
        </member>
        <member name="F:Aras.IOME.CheckoutManagerFlags.None">
            <summary>
            Disable transaction mode during checkout
            </summary>
        </member>
        <member name="F:Aras.IOME.CheckoutManagerFlags.UseTransactions">
            <summary>
            Enable transaction mode during checkout
            </summary>
        </member>
        <member name="T:Aras.IOME.DownloadFilesCompletedEventHandler">
            <summary>
            Delegate for DownloadFilesCompleted event handler which is called when either all files
            finished downloading or when the operation was canceled by user.
            </summary>
            <param name="sender"><see cref="T:Aras.IOME.CheckoutManager"/></param>
            <param name="e"><see cref="T:Aras.IOME.DownloadFilesCompletedEventArgs"/></param>
        </member>
        <member name="T:Aras.IOME.DownloadFilesProgressChangedEventHandler">
            <summary>
            Delegate for DownloadFilesProgressChanged event handler which is called when download progress is changed.
            </summary>
            <param name="sender"><see cref="T:Aras.IOME.CheckoutManager"/></param>
            <param name="e"><see cref="T:Aras.IOME.DownloadFilesProgressChangedEventArgs"/></param>
        </member>
        <member name="T:Aras.IOME.DownloadFileCompletedEventHandler">
            <summary>
            Delegate for DownloadFileCompleted event handler which is called when download of a single file is complete.
            </summary>
            <param name="sender"><see cref="T:Aras.IOME.CheckoutManager"/></param>
            <param name="e"><see cref="T:Aras.IOME.DownloadFileCompletedEventArgs"/></param>
        </member>
        <member name="T:Aras.IOME.CheckinManagerFlags">
            <summary>
            Enumeration for setting additional actions after checkin
            </summary>
        </member>
        <member name="F:Aras.IOME.CheckinManagerFlags.None">
            <summary>
            Do not perform any actions after checkin
            </summary>
        </member>
        <member name="F:Aras.IOME.CheckinManagerFlags.UnlockAfterCheckin">
            <summary>
            Unlock locked items after successful checkin
            </summary>
        </member>
        <member name="T:Aras.IOME.CheckinCompletedEventHandler">
            <summary>
            Checkin operation was completed handler
            </summary>
            <param name="sender">Object from which the handler was called.</param>
            <param name="e">Checkin completed event argument. Contains information on how checkin action was completed.</param>
        </member>
        <member name="T:Aras.IOME.CheckinProgressChangedEventHandler">
            <summary>
            Checkin operation progress has changed handler
            </summary>
            <param name="sender">Object from which the handler was called.</param>
            <param name="e">Checkin progress changed event argument. Contains information on checkin progress percentage.</param>
        </member>
        <member name="T:Aras.IOME.UploadFileCompletedEventHandler">
            <summary>
            Uploading of file was completed handler
            </summary>
            <param name="sender">Object from which the handler was called.</param>
            <param name="e">Upload file complete event argument. Contains information on how upload action was completed for file. </param>
        </member>
        <member name="T:Aras.IOME.UploadFilesProgressChangedHandler">
            <summary>
            Uploading files progress has changed handler
            </summary>
            <param name="sender">Object from which the handler was called.</param>
            <param name="e">Upload files progress changed event argument. Contains information on upload files progress percentage.</param>
        </member>
        <member name="T:Aras.IOME.UploadFilesCompletedEventHandler">
            <summary>
            Uploading files operation was completed
            </summary>
            <param name="sender">Object from which the handler was called.</param>
            <param name="e">Upload files completed event argument. Contains hashtable with the results of uploading of all files for current checkin operation and data on how upload action was completed. </param>
        </member>
        <member name="T:Aras.Client.Core.ITimeZoneInfoProvider">
             <summary>
            
             </summary>
        </member>
        <member name="M:Aras.Client.Core.ITimeZoneInfoProvider.GetSystemTimeZones">
             <summary>
            
             </summary>
        </member>
        <member name="M:Aras.Client.Core.ITimeZoneInfoProvider.FindSystemTimeZoneById(System.String)">
             <summary>
            
             </summary>
        </member>
        <member name="T:Aras.Client.Core.TimeZoneMapping">
             <summary>
            
             </summary>
        </member>
        <member name="M:Aras.Client.Core.TimeZoneMapping.#ctor(Aras.Client.Core.ITimeZoneInfoProvider)">
             <summary>
            
             </summary>
        </member>
        <member name="M:Aras.Client.Core.TimeZoneMapping.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:Aras.Client.Core.TimeZoneMapping.GetWindowsTimeZones(System.String,Aras.Client.Core.TimeZoneMapping.InputType,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})">
            <summary>
            Get a TimeZoneInformation for the specified time zone name.
            </summary>
            <param name="tzlabel">Label of timezone. For example, "Belarus Standart Time" or "Belarus Daylight Time" or some japanese characters. Label can be written in any client's language.</param>
            <param name="inputType">Represents type of tzLabel</param>
            <param name="localTime">Local client's DateTime</param>
            <param name="offsetBetweenLocalTimeAndUTCTime">Client's offset between local time and UTC</param>
            <returns>The corresponding array of TimeZoneInformation.</returns>
        </member>
        <member name="M:Aras.Client.Core.TimeZoneMapping.GetOlsonTimeZone(System.String)">
             <summary>
            
             </summary>
             <param name="windowsName"></param>
             <returns></returns>
        </member>
        <member name="M:Aras.Client.Core.TimeZoneMapping.GetOlsonTimeZones(System.String)">
            <summary>
            Return all IANA time zones by windows name
            </summary>
            <param name="windowsName"></param>
            <returns></returns>
        </member>
        <member name="M:Aras.Client.Core.TimeZoneMapping.GetWindowsTimeZone(System.String)">
            <summary>
            
            </summary>
            <param name="olsonName"></param>
            <returns></returns>
        </member>
        <member name="T:Aras.Client.Core.TimeZoneMapping.InputType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aras.Client.Core.TimeZoneMapping.InputType.Iana">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aras.Client.Core.TimeZoneMapping.InputType.Windows">
            <summary>
            
            </summary>
        </member>
        <member name="T:Aras.Client.Core.TimeZoneMapping.TimeZoneInfoProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Aras.Client.Core.TimeZoneMapping.TimeZoneInfoProvider.FindSystemTimeZoneById(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Aras.Client.Core.TimeZoneMapping.TimeZoneInfoProvider.GetSystemTimeZones">
            <summary>
            
            </summary>
        </member>
        <member name="T:Aras.Common.Compression.CompressionType">
            <summary>
            Available types of request compression
            </summary>
        </member>
        <member name="F:Aras.Common.Compression.CompressionType.gzip">
            <summary>
            gzip compression of request data
            </summary>
        </member>
        <member name="F:Aras.Common.Compression.CompressionType.deflate">
            <summary>
            deflate compression of request data
            </summary>
        </member>
        <member name="F:Aras.Common.Compression.CompressionType.none">
            <summary>
            no compression for request data
            </summary>
        </member>
        <member name="T:Aras.SoapConstants.Soap">
            <summary>
            Stores a set of SOAP related constants
            </summary>
        </member>
        <member name="F:Aras.SoapConstants.Soap.SoapEnvUri">
            -----------------------------------------------------------------------------
            <summary>
            URI to SOAP 1.1 schema
            </summary>
            <remarks>
            </remarks>
            <history>
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:Aras.SoapConstants.Soap.InnovatorFaultUri">
            -----------------------------------------------------------------------------
            <summary>
            URI to Innovator Fault schema
            </summary>
            <remarks>
            </remarks>
            <history>
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:Aras.SoapConstants.Soap.I18NNamespaceName">
            -----------------------------------------------------------------------------
            <summary>
            Name of Aras internationalization namespace.
            </summary>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:Aras.SoapConstants.Soap.I18NNamespaceUri">
            -----------------------------------------------------------------------------
            <summary>
            Aras internationalization namespace URI
            </summary>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:Aras.SoapConstants.Soap.InnovatorFaultNamespaceName">
            <summary>
            Name of Aras Innovator fault namespace.
            </summary>
        </member>
        <member name="F:Aras.SoapConstants.Soap.SoapNamespace">
            -----------------------------------------------------------------------------
            <summary>
            Namespace used to return SOAP messages.
            </summary>
            <remarks>
            </remarks>
            <history>
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:Aras.SoapConstants.Soap.EnvelopeBodyStart">
            -----------------------------------------------------------------------------
            <summary>
            Opening tags Envelope, Body
            </summary>
            <remarks>
            </remarks>
            <history>
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:Aras.SoapConstants.Soap.EnvelopeBodyEnd">
             -----------------------------------------------------------------------------
             <summary>
            
             </summary>
             <remarks>
             </remarks>
             <history>
             </history>
             -----------------------------------------------------------------------------
        </member>
        <member name="F:Aras.SoapConstants.Soap.SoapNamespaceCheck">
            -----------------------------------------------------------------------------
            <summary>
            Check of namespace to be used in XPath
            </summary>
            <remarks>
            </remarks>
            <history>
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:Aras.SoapConstants.Soap.EnvelopeXPath">
            -----------------------------------------------------------------------------
            <summary>
            XPath for Envelope
            </summary>
            <remarks>
            </remarks>
            <history>
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:Aras.SoapConstants.Soap.BodyXPath">
            -----------------------------------------------------------------------------
            <summary>
            XPath for Body
            </summary>
            <remarks>
            </remarks>
            <history>
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:Aras.SoapConstants.Soap.ResultXPath">
            -----------------------------------------------------------------------------
            <summary>
            XPath for Result
            </summary>
            <remarks>
            </remarks>
            <history>
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:Aras.SoapConstants.Soap.FaultXPath">
            -----------------------------------------------------------------------------
            <summary>
            XPath for Fault
            </summary>
            <remarks>
            </remarks>
            <history>
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:Aras.SoapConstants.Soap.EnvelopeBodyXPath">
            -----------------------------------------------------------------------------
            <summary>
            XPath for Envelope/Body
            </summary>
            <remarks>
            </remarks>
            <history>
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:Aras.SoapConstants.Soap.EnvelopeBodyResultXPath">
            -----------------------------------------------------------------------------
            <summary>
            XPath for Envelope/Body/Result
            </summary>
            <remarks>
            </remarks>
            <history>
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:Aras.SoapConstants.Soap.EnvelopeBodyFaultXPath">
            -----------------------------------------------------------------------------
            <summary>
            XPath for Envelope/Body/Fault
            </summary>
            <remarks>
            </remarks>
            <history>
            </history>
            -----------------------------------------------------------------------------
        </member>
        <member name="T:AuthenticationBroker">
            <summary>
            AuthenticationBroker proxy class.
            Autogenerated file MUST be updated to make it internal to prevent public visibility in IOM.dll
            The auto generated code can be done via command line below
            SvcUtil.exe http://localhost/innovator/Server/AuthenticationBroker.asmx?WSDL /out:AuthenticationBrokerSoapClient.cs /internal /namespace:*,Aras.IOME
            </summary>
        </member>
        <member name="M:AuthenticationBroker.#ctor(System.Uri,System.Net.CookieContainer,Aras.IOM.IAuthenticator)">
            <summary>
            Ctor
            </summary>
            <param name="innovatorUri">Innovator url</param>
            <param name="cookieContainer">Pass current cookie container of your connection to separate the session between InnovatorServer application and AuthenticationBroker service</param>
            <param name="authenticator">Authenticator to perform OAuth authentication</param>
        </member>
        <member name="M:AuthenticationBroker.SetRequestHeader(System.ServiceModel.Channels.HttpRequestMessageProperty)">
            <summary>
            Set request headers.
            </summary>
        </member>
        <member name="M:AuthenticationBroker.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="T:FileDownloadParameters">
            <remarks/>
        </member>
        <member name="P:FileDownloadParameters.fileId">
            <remarks/>
        </member>
        <member name="P:FileDownloadParameters.dbName">
            <remarks/>
        </member>
    </members>
</doc>
