<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aras.OAuth.Configuration</name>
    </assembly>
    <members>
        <member name="T:Aras.OAuth.Configuration.AuthenticationCookie">
            <summary>
            Client registry that stores information about authenticationCookie.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.AuthenticationCookie.CookieName">
            <summary>
            Gets the cookie name.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.AuthenticationCookie.ExternalCookieName">
            <summary>
            Gets the external authentication cookie name.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.AuthenticationCookie.CheckSessionCookieName">
            <summary>
            Gets the check session cookie name.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.AuthenticationCookie.CookieLifetime">
            <summary>
            Gets the cookieLifetime.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.AuthenticationCookie.CookieAbsoluteExpiration">
            <summary>
            Gets the cookieAbsoluteExpiration.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.BaseConfiguration">
            <summary>
            Configuration with common settings.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.BaseConfiguration.ServerId">
            <summary>
            Get server id.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.BaseSecret">
            <summary>
            An empty base class for secret.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.CacheConfiguration">
            <summary>
            Configuration for cache.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.CacheConfiguration.Enabled">
            <summary>
            Gets the enabled.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.CacheConfiguration.Duration">
            <summary>
            Gets the duration.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.CertificateSecret">
            <summary>
            Implementate secret based on certificate.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.CertificateSecret.Certificate">
            <summary>
            Get certificate.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.CertificateSecret.AssertionTokenLifetime">
            <summary>
            Get assertion token lifetime.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.ClientConfiguration">
            <summary>
            Configuration for client.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientConfiguration.Id">
            <summary>
            Get id.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientConfiguration.Secret">
            <summary>
            Get secret.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientConfiguration.ServerLocationUrl">
            <summary>
            Get server location url.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.ClientRegistry">
            <summary>
            Client registry that stores information about client.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistry.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistry.Enabled">
            <summary>
            Gets the enabled.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistry.TokenLifetime">
            <summary>
            Gets the token lifetimes.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistry.Secrets">
            <summary>
            Gets the secrets.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistry.AllowedScopes">
            <summary>
            Gets the allowed scopes.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistry.AllowedGrantTypes">
            <summary>
            Gets the grant type.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistry.AllowedCorsOrigins">
            <summary>
            Gets the allowed CORS origin urls
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistry.RedirectUris">
            <summary>
            Gets the redirect Uris.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistry.PostLogoutRedirectUris">
            <summary>
            Gets the post logout redirect Uris.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistry.FrontChannelLogoutUri">
            <summary>
            Gets the front channel logout Uri.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistry.BackChannelLogoutUri">
            <summary>
            Gets the back channel logout Uri.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.AuthenticationCookieElement">
            <summary>
            AuthenticationCookie element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.AuthenticationCookieElement.CookieName">
            <summary>
            Gets the cookie name.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.AuthenticationCookieElement.CookieLifetime">
            <summary>
            Gets the CookieLifetime.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.AuthenticationCookieElement.CookieAbsoluteExpiration">
            <summary>
            Gets the CookieAbsoluteExpiration.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.BackChannelLogoutUriElement">
            <summary>
            Back channel logout Uri element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.BackChannelLogoutUriElement.Value">
            <summary>
            Gets or sets the back channel logout Uri.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.CacheElement">
            <summary>
            Cache config element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.CacheElement.Enabled">
            <summary>
            Gets the enabled.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.CacheElement.Duration">
            <summary>
            Gets the duration.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.CertificateElement">
            <summary>
            Certificate element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.CertificateElement.FilePath">
            <summary>
            Gets or sets the file path of the certificate file (.cer or .pfx file).
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.CertificateElement.AbsoluteFilePath">
            <summary>
            Gets the absolute file path of the certificate file.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.CertificateElement.Password">
            <summary>
            Gets the password for the certificate file (actual only for .pfx file).
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.ClientElement">
            <summary>
            Client element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientElement.Id">
            <summary>
            Gets client id.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientElement.Secret">
            <summary>
            Gets client secret.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientElement.ServerLocation">
            <summary>
            Gets the serverLocation element.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.ClientRegistryElement">
            <summary>
            Client registry element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistryElement.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistryElement.Enabled">
            <summary>
            Gets the enabled.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistryElement.TokenLifetime">
            <summary>
            Gets the TokenLifetime.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistryElement.Secrets">
            <summary>
            Gets the secrets.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistryElement.AllowedScopes">
            <summary>
            Gets the allowed scopes.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistryElement.AllowedGrantTypes">
            <summary>
            Gets or sets the grant type.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistryElement.AllowedCorsOrigins">
            <summary>
            Gets the allowed CORS origins.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistryElement.RedirectUris">
            <summary>
            Gets or sets the redirect Uris.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistryElement.PostLogoutRedirectUris">
            <summary>
            Gets or sets the post logout redirect Uris.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistryElement.FrontChannelLogoutUri">
            <summary>
            Gets or sets the front channel logout Uri.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ClientRegistryElement.BackChannelLogoutUri">
            <summary>
            Gets or sets the back channel logout Uri.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.ClientRegistryElementCollection">
            <summary>
            Client registry element collection.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.ClientRegistryElementCollection.CreateNewElement">
            <summary>
            Create new client registry.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.ClientRegistryElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Get client registry Id.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.ClientRegistryElementCollection.Add(Aras.OAuth.Configuration.ClientRegistryElement)">
            <summary>
            Add client registry.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.CorsOriginElement">
            <summary>
            CORS origin element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.CorsOriginElement.Value">
            <summary>
            Gets the origin value
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.CorsOriginElementCollection">
            <summary>
            <see cref="T:Aras.OAuth.Configuration.CorsOriginElement"/> element collection.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.CorsOriginElementCollection.CreateNewElement">
            <summary>
            Create new <see cref="T:Aras.OAuth.Configuration.CorsOriginElement"/>
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.CorsOriginElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Get <see cref="T:Aras.OAuth.Configuration.CorsOriginElement"/> origin value
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.CorsOriginElementCollection.Add(Aras.OAuth.Configuration.CorsOriginElement)">
            <summary>
            Add <see cref="T:Aras.OAuth.Configuration.CorsOriginElement"/>
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.DiscoveryElement">
            <summary>
            Discovery element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.DiscoveryElement.ServerLocations">
            <summary>
            Gets or sets the token server location elements.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.FrontChannelLogoutUriElement">
            <summary>
            Front channel logout Uri element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.FrontChannelLogoutUriElement.Value">
            <summary>
            Gets or sets the front channel logout Uri.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.GrantTypeElement">
            <summary>
            GrantType element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.GrantTypeElement.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.GrantTypeElementCollection">
            <summary>
            GrantType element collection.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.GrantTypeElementCollection.CreateNewElement">
            <summary>
            Create new grantType.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.GrantTypeElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Get grantType name.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.GrantTypeElementCollection.Add(Aras.OAuth.Configuration.GrantTypeElement)">
            <summary>
            Add grantType.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.OAuthSection">
            <summary>
            Configuration section for oauth.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.OAuthSection.Enabled">
            <summary>
            Gets enabled.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.OAuthSection.ServerId">
            <summary>
            Gets server id.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.OAuthSection.Server">
            <summary>
            Gets server element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.OAuthSection.Discovery">
            <summary>
            Gets discovery element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.OAuthSection.TokenValidation">
            <summary>
            Gets token validation element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.OAuthSection.Client">
            <summary>
            Gets client element.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.RedirectUriElement">
            <summary>
            Redirect Uri element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.RedirectUriElement.Value">
            <summary>
            Gets or sets the redirect Uri.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.RedirectUriElementCollection">
            <summary>
            Redirect Uri element collection.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.RedirectUriElementCollection.CreateNewElement">
            <summary>
            Create new redirect Uri.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.RedirectUriElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Get redirect Uri.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.RedirectUriElementCollection.Add(Aras.OAuth.Configuration.RedirectUriElement)">
            <summary>
            Add redirect Uri.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.RequiredScopeElement">
            <summary>
            Required scope config element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.RequiredScopeElement.OnUrl">
            <summary>
            Gets available url.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.RequiredScopeElement.OnSoapAction">
            <summary>
            Gets available soap action.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.RequiredScopeElementCollection">
            <summary>
            Required scopes element collection.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.RequiredScopeElementCollection.CreateNewElement">
            <summary>
            Create new required scope.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.RequiredScopeElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Get required scope element key.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.RequiredScopeElementCollection.Add(Aras.OAuth.Configuration.RequiredScopeElement)">
            <summary>
            Add required scope.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.ScopeElement">
            <summary>
            Scope element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ScopeElement.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.ScopeElementCollection">
            <summary>
            Scopes element collection.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.ScopeElementCollection.CreateNewElement">
            <summary>
            Create new scope.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.ScopeElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Get scope name.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.ScopeElementCollection.Add(Aras.OAuth.Configuration.ScopeElement)">
            <summary>
            Add scope.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.SecretElement">
            <summary>
            Secret element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.SecretElement.Type">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.SecretElement.Certificate">
            <summary>
            Gets or sets the Certificae.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.SecretElement.TokenLifetime">
            <summary>
            Gets the TokenLifetime.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.SecretElementCollection">
            <summary>
            Secrets element collection.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.SecretElementCollection.CreateNewElement">
            <summary>
            Create new secret.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.SecretElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Get scope secret.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.SecretElementCollection.Add(Aras.OAuth.Configuration.SecretElement)">
            <summary>
            Add secret.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.ServerElement">
            <summary>
            Server element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ServerElement.ClientRegistries">
            <summary>
            Gets the client registries.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ServerElement.Scopes">
            <summary>
            Gets or sets scopes.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ServerElement.AuthenticationCookie">
            <summary>
            Gets or sets AuthenticationCookie.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ServerElement.TokenSigning">
            <summary>
            Gets the token signing element.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.ServerLocationElement">
            <summary>
            Server location config element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ServerLocationElement.Url">
            <summary>
            Gets the url to the oauth server.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.ServerLocationElementCollection">
            <summary>
            Server location element collection.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.ServerLocationElementCollection.CreateNewElement">
            <summary>
            Crete new server location element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aras.OAuth.Configuration.ServerLocationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Get key of server location element.
            </summary>
            <param name="element">Server location element.</param>
            <returns></returns>
        </member>
        <member name="T:Aras.OAuth.Configuration.TokenLifetimeElement">
            <summary>
            TokenLifetime element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetimeElement.AccessTokenLifetime">
            <summary>
            Gets the AccessTokenLifetime.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetimeElement.AssertionTokenLifetime">
            <summary>
            Gets the AssertionTokenLifetime.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetimeElement.IdentityTokenLifetime">
            <summary>
            Gets the lifetime of identity token in seconds (defaults to 300 seconds / 5 minutes).
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetimeElement.AuthorizationCodeLifetime">
            <summary>
            Gets the lifetime of authorization code in seconds (defaults to 300 seconds / 5 minutes).
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetimeElement.RefreshTokenAbsoluteLifetime">
            <summary>
            Maximum lifetime of a refresh token in seconds (default value is 30 days)
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetimeElement.RefreshTokenSlidingLifetime">
            <summary>
            Sliding lifetime of a refresh token in seconds (default value is 15 days)
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetimeElement.RefreshTokenAbsoluteExpiration">
            <summary>
            The refresh token will expire on a fixed point in time if `true`
            (specified by the `RefreshTokenAbsoluteLifetime`), or when refreshing the token, the lifetime of the refresh
            token will be renewed (by the amount specified in `RefreshTokenSlidingLifetime`) if `false`.
            The lifetime will not exceed `RefreshTokenAbsoluteLifetime`
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetimeElement.RefreshTokenOneTimeOnly">
            <summary>
            The refresh token handle will be updated when refreshing tokens if `true`;
            and it will stay the same when refreshing tokens if `false`
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.TokenSigningElement">
            <summary>
            Token signing element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenSigningElement.Certificate">
            <summary>
            Gets the certificate element.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.TokenValidationElement">
            <summary>
            Token validation element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenValidationElement.RequiredScopes">
            <summary>
            Gets or sets the required scopes element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenValidationElement.Certificate">
            <summary>
            Gets the certificate element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenValidationElement.Cache">
            <summary>
            Gets the cache element.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenValidationElement.ClockSkew">
            <summary>
            Gets the clock skew.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.ConfigurationReader">
            <summary>
            Implementation of IConfigurationReader.based on ConfigurationSection.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.ConfigurationReader.#ctor">
            <summary>
            Read default OAuth.config.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.ConfigurationReader.#ctor(System.String,System.String)">
            <summary>
            Read OAuth.config from configPath with sectionName.
            </summary>
            <param name="configPath"></param>
            <param name="sectionName"></param>
        </member>
        <member name="M:Aras.OAuth.Configuration.ConfigurationReader.Aras#OAuth#Configuration#IConfigurationReader#GetServerConfiguration">
            <summary>
            Get server configuration from OAuth.config.
            </summary>
            <returns>Server configuration</returns>
        </member>
        <member name="M:Aras.OAuth.Configuration.ConfigurationReader.Aras#OAuth#Configuration#IConfigurationReader#GetTokenValidationConfiguration">
            <summary>
            Get TokenValidationConfiguration from OAuth.config.
            </summary>
            <returns>TokenValidationConfiguration</returns>
        </member>
        <member name="M:Aras.OAuth.Configuration.ConfigurationReader.Aras#OAuth#Configuration#IConfigurationReader#GetClientConfiguration">
            <summary>
            Get client configuration from OAuth.config.
            </summary>
            <returns>Client configuration</returns>
        </member>
        <member name="T:Aras.OAuth.Configuration.IConfigurationReader">
            <summary>
            Interface to get configuration.
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.IConfigurationReader.GetServerConfiguration">
            <summary>
            Get server configuration.
            </summary>
            <returns>Server configuration</returns>
        </member>
        <member name="M:Aras.OAuth.Configuration.IConfigurationReader.GetTokenValidationConfiguration">
            <summary>
            Get TokenValidationConfiguration.
            </summary>
            <returns>TokenValidationConfiguration</returns>
        </member>
        <member name="M:Aras.OAuth.Configuration.IConfigurationReader.GetClientConfiguration">
            <summary>
            Get client configuration.
            </summary>
            <returns>Client configuration</returns>
        </member>
        <member name="T:Aras.OAuth.Configuration.RequiredScope">
            <summary>
            Class stores information about required scope.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.RequiredScope.Name">
            <summary>
            Gets the scope name.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.RequiredScope.OnUrl">
            <summary>
            Gets the available url.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.RequiredScope.OnSoapAction">
            <summary>
            Gets the available soap action.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.ServerConfiguration">
            <summary>
            Configuration for server.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ServerConfiguration.ClientRegistries">
            <summary>
            Get client registries.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ServerConfiguration.Scopes">
            <summary>
            Get scopes.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ServerConfiguration.AuthenticationCookie">
            <summary>
            Get authenticationCoookie.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.ServerConfiguration.SigningCertificate">
            <summary>
            Get certificate for token signing.
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.TokenLifetime">
            <summary>
            Class stores information about access and refresh token lifetimes
            </summary>
        </member>
        <member name="M:Aras.OAuth.Configuration.TokenLifetime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Create instance of <see cref="T:Aras.OAuth.Configuration.TokenLifetime"/> and fill it properties
            </summary>
            <param name="accessTokenLifetime">Access token lifetime in seconds</param>
            <param name="assertionTokenLifetime">Assertion token lifetime in seconds</param>
            <param name="identityTokenLifetime">Identity token lifetime in seconds</param>
            <param name="authorizationCodeLifetime">Authorization code lifetime in seconds</param>
            <param name="refreshTokenAbsoluteLifetime">Maximum lifetime of a refresh token in seconds</param>
            <param name="refreshTokenSlidingLifetime">Sliding lifetime of a refresh token in seconds</param>
            <param name="refreshTokenAbsoluteExpiration">true - the refresh token will expire on a fixed point in time
            (specified by the absoluteLifetime), false - when refreshing the token, the lifetime of the refresh
            token will be renewed (by the amount specified in slidingLifetime).
            The lifetime will not exceed absoluteLifetime</param>
            <param name="refreshTokenOneTimeOnly">true - the refresh token handle will be updated when refreshing tokens,
            false - the refresh token handle will stay the same when refreshing tokens</param>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetime.AccessTokenLifetime">
            <summary>
            Access token lifetime in second
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetime.AssertionTokenLifetime">
            <summary>
            Assertion token lifetime in seconds
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetime.IdentityTokenLifetime">
            <summary>
            Identity token lifetime in seconds
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetime.AuthorizationCodeLifetime">
            <summary>
            Authorization code lifetime in seconds
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetime.RefreshTokenAbsoluteLifetime">
            <summary>
            Maximum lifetime of a refresh token in seconds
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetime.RefreshTokenSlidingLifetime">
            <summary>
            Sliding lifetime of a refresh token in seconds
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetime.RefreshTokenAbsoluteExpiration">
            <summary>
            The refresh token will expire on a fixed point in time if `true`
            (specified by the `RefreshTokenAbsoluteLifetime`), or when refreshing the token, the lifetime of the refresh
            token will be renewed (by the amount specified in `RefreshTokenSlidingLifetime`) if `false`.
            The lifetime will not exceed `RefreshTokenAbsoluteLifetime`
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenLifetime.RefreshTokenOneTimeOnly">
            <summary>
            The refresh token handle will be updated when refreshing tokens if `true`;
            and it will stay the same when refreshing tokens if `false`
            </summary>
        </member>
        <member name="T:Aras.OAuth.Configuration.TokenValidationConfiguration">
            <summary>
            Result of TokenValidation configuration reading.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenValidationConfiguration.RequiredScopes">
            <summary>
            Get requiredScopes.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenValidationConfiguration.Certificate">
            <summary>
            Get certificate.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenValidationConfiguration.CacheConfiguration">
            <summary>
            Get cache configuration.
            </summary>
        </member>
        <member name="P:Aras.OAuth.Configuration.TokenValidationConfiguration.ClockSkew">
            <summary>
            Get clock skew duration.
            </summary>
        </member>
    </members>
</doc>
