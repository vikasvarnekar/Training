<AML>
 <Item type="Method" id="D11B637DBC9940D6ADA97EA2EFAE45DB" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[if(propertyName != "affected_id" && propertyName != "new_item_id")
{
  alert("Error: Use this method for affected_id or new_item_id properties");
  return;
}

var relationshipType = item.selectSingleNode("Relationships/Item[@id='" + relationshipID + "']");
if(!relationshipType)
{
  aras.AlertError(aras.getResource("", "ui_methods_ex.failed_to_get_item", "RelationshipType with id " + relationshipID));   
  return; 
}

var relationshipTypeName = relationshipType.getAttribute('type');

if(relationshipTypeName != "Express ECO Affected Item" && relationshipTypeName != "Express DCO Affected Item")
{
  //Nothing doing if unknown relationship.
  return; 
}

var propertyValue = getRelatedItemProperty(relationshipID, propertyName);

if(!propertyValue)
{
	//If property value is empty, then do nothing.
  return;
}

var propertyValueType = getType(propertyValue);

if(!propertyValueType)
{
  //If property value is empty, then do nothing.
  return;
}

if(!ValidatePropertyValue())
{
  //Reset invalid value in DOM and Grid
  gridApplet.GetSelectedCell().SetValue("");
  setRelatedItemProperty(relationshipID, propertyName, "");  
  aras.AlertError(aras.getResource("plm", "affecteditem.invaliditemtype_for_relationshipitem", relationshipTypeName, propertyValueType)); 
  return;
}
  
// --------functions Implementation---------
function ValidatePropertyValue()
{      
  if(!propertyValueType)
  {
    return false;
  }
    
  if(relationshipTypeName == "Express ECO Affected Item" && propertyValueType == "Part")
  {
    return true; 
  }
    
  if(relationshipTypeName == "Express DCO Affected Item" && (propertyValueType == "Document" || propertyValueType == "CAD"))
  {
    return true;
  }
    
  return false;
}
      
function getType(id)
{
  var qryXml = "<Item type='Change Controlled Item' id='" + id + "' action='get' select='id'/>";
  var qry = new Item();
  qry.loadAML(qryXml);
  var result = qry.apply();
  if(result.isError()) 
  { 
    aras.AlertError(aras.getResource("plm", "checkaffectedtype.can_not_get", id)); 
    return null; 
  }
  return result.getAttribute("type");
}
]]></method_code>
  <method_type>JavaScript</method_type>
  <name>restrictAffectedType</name>
 </Item>
</AML>