<AML>
 <Item type="Method" id="B81918AC79A24D59BB419830670CF0EA" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[	return ProcessMethodLogic(new UserPermissionManager());
}

internal Item ProcessMethodLogic(IUserPermissionManager permissionManager)
{
	Item currentFavorite = this.newItem("Favorite", "get");
	currentFavorite.setID(this.getID());
	currentFavorite = currentFavorite.apply();

	if (currentFavorite.isError())
	{
		return currentFavorite;
	}

	string teamId = currentFavorite.getProperty("team_id");
	if (!string.IsNullOrEmpty(teamId))
	{
		bool permsWasSet = false;
		try
		{
			permsWasSet = permissionManager.GrantCurrentIdentityByAdminPermissions();
			Item teamItem = this.newItem("Team", "delete");
			teamItem.setID(teamId);
			teamItem.setAttribute("skipCheckItemUsage", "1");
			teamItem = teamItem.apply();
			if (teamItem.isError())
			{
				return teamItem;
			}
		}
		finally
		{
			if (permsWasSet)
			{
				permissionManager.RevokeAdminPermissionsFromCurrentUser();
			}
		}
	}

	return this;
}

internal interface IUserPermissionManager
{
	bool GrantCurrentIdentityByAdminPermissions();
	bool RevokeAdminPermissionsFromCurrentUser();
}

internal class UserPermissionManager : IUserPermissionManager
{
	public bool GrantCurrentIdentityByAdminPermissions()
	{
		Aras.Server.Security.Identity superUser = Aras.Server.Security.Identity.GetByName("Super User");
		return Aras.Server.Security.Permissions.GrantIdentity(superUser);
	}

	public bool RevokeAdminPermissionsFromCurrentUser()
	{
		Aras.Server.Security.Identity superUser = Aras.Server.Security.Identity.GetByName("Super User");
		return Aras.Server.Security.Permissions.RevokeIdentity(superUser);
	}]]></method_code>
  <method_type>C#</method_type>
  <name>FavoriteDeleteTeamForSharing</name>
 </Item>
</AML>