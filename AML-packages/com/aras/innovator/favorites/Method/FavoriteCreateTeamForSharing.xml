<AML>
 <Item type="Method" id="5552C1D21E9D4F2FBC2A250471577449" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[	return ProcessMethodLogic(new UserPermissionManager());
}

internal Item ProcessMethodLogic(IUserPermissionManager permissionManager)
{
	string favoriteId = this.getID();
	string teamId = this.getProperty("team_id");
	if (string.IsNullOrEmpty(teamId))
	{
		bool permsWasSet = false;
		try
		{
			permsWasSet = permissionManager.GrantCurrentIdentityByAdminPermissions();
			var teamItem = this.newItem("Team", "add");
			teamItem.setProperty("name", favoriteId);
			teamItem.setProperty("is_system", "1");
			teamItem = teamItem.apply();
			if (teamItem.isError())
			{
				return teamItem;
			}
			teamId = teamItem.getID();
		}
		finally
		{
			if (permsWasSet)
			{
				permissionManager.RevokeAdminPermissionsFromCurrentUser();
			}
		}
	}
	this.setProperty("team_id", teamId);

	return this;
}

internal interface IUserPermissionManager
{
	bool GrantCurrentIdentityByAdminPermissions();
	bool RevokeAdminPermissionsFromCurrentUser();
}

internal class UserPermissionManager : IUserPermissionManager
{
	public bool GrantCurrentIdentityByAdminPermissions()
	{
		Aras.Server.Security.Identity superUser = Aras.Server.Security.Identity.GetByName("Super User");
		return Aras.Server.Security.Permissions.GrantIdentity(superUser);
	}

	public bool RevokeAdminPermissionsFromCurrentUser()
	{
		Aras.Server.Security.Identity superUser = Aras.Server.Security.Identity.GetByName("Super User");
		return Aras.Server.Security.Permissions.RevokeIdentity(superUser);
	}]]></method_code>
  <method_type>C#</method_type>
  <name>FavoriteCreateTeamForSharing</name>
 </Item>
</AML>