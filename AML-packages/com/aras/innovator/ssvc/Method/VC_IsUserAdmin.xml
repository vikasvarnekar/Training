<AML>
 <Item type="Method" id="AFA06E6F9A74455FA352850B02001BCA" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[string userId = this.getID();
if (String.IsNullOrEmpty(userId))
{
	throw new Exception(CCO.ErrorLookup.Lookup("SSVC_FailedDefineUserIdNotSet"));
}
List<string> userIdentities = GetAllUserIdentities(userId);
if (userIdentities.Count < 1)
{
	throw new Exception(CCO.ErrorLookup.Lookup("SSVC_FailedDefineUserNoIdentites"));
}
context = CCO;
return this.getInnovator().newResult(IsUserAdmin(userIdentities).ToString());
}
Aras.Server.Core.CallContext context;
private List<string> GetAllUserIdentities(string userId)
{
	Item identitiesIds = this.newItem("user", "VC_GetAllUserIdentities");
	identitiesIds.setID(userId);
	identitiesIds = identitiesIds.apply();
	return identitiesIds.getResult().Split('|').ToList();
}
private bool IsUserAdmin(List<string> userIdentities)
{
	const string adminIdentityId = "2618D6F5A90949BAA7E920D1B04C7EE1";
	Aras.Server.Core.InnovatorDatabase database = context.Variables.InnDatabase;
	List<string> identityMembers = Aras.Server.Security.Permissions.GetAncestorIdentityIds(database, new string[]{ adminIdentityId}).ToList();
	return identityMembers.Any(x=> userIdentities.Any(y=> x==y));]]></method_code>
  <method_type>C#</method_type>
  <name>VC_IsUserAdmin</name>
 </Item>
</AML>