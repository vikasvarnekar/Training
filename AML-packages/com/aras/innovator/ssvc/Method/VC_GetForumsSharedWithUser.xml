<AML>
 <Item type="Method" id="C5AF4353E257489C9742A12F29964D06" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[string userId = this.getID();
if (String.IsNullOrEmpty(userId))
{
	throw new Exception(CCO.ErrorLookup.Lookup("SSVC_FailedGetSharedForumsIdNotSet"));
}
List<string> identityIds = GetIdentitiesForUser(userId);
Item forums = GetForumsSharedWithIdentities(identityIds);
if (forums.isError())
{
	throw new Exception(String.Format(CultureInfo.InvariantCulture, CCO.ErrorLookup.Lookup("SSVC_FailedGetSharedForumsNoForums"), userId));
}
else
{
	return forums;
}
}

private Item GetForumsSharedWithIdentities(List<string> identities)
{
	Item forums = this.newItem("Forum", "get");
	forums.setProperty("forum_type", "Regular");
	forums.setProperty("state", "Active");
	Item sharedWith = this.newItem("ForumSharedWith", "get");
	sharedWith.setProperty("shared_with_id", String.Join(", ", identities.ToArray()));
	sharedWith.setPropertyCondition("shared_with_id", "in");
	Item wantViewBy = this.newItem("ForumWantViewBy", "get");
	Item mustViewBy = this.newItem("ForumMustViewBy", "get");
	forums.addRelationship(sharedWith);
	forums.addRelationship(wantViewBy);
	forums.addRelationship(mustViewBy);
	return forums.apply();
}

private List<string> GetIdentitiesForUser(string userId)
{
	Item identitiesIds = this.newItem("user", "VC_GetAllUserIdentities");
	identitiesIds.setID(userId);
	identitiesIds = identitiesIds.apply();
	List<string> result = identitiesIds.getResult().Split('|').ToList();
	return result;
]]></method_code>
  <method_type>C#</method_type>
  <name>VC_GetForumsSharedWithUser</name>
 </Item>
</AML>