<AML>
 <Item type="Method" id="B5A9A7E40A6140039E9A8A0E09437671" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[if (this.getProperty('crawler_state', '') === 'Active') {

	var crawlerState = this.newItem('ES_CrawlerState', 'get');
	crawlerState.setAttribute('select', 'current_action, next_action, is_iteration_finished');
	crawlerState.setProperty('source_id', this.getID());
	crawlerState = crawlerState.apply();

	if (!crawlerState.isError() && crawlerState.getItemCount() === 1) {

		if ((crawlerState.getProperty('current_action', '') === 'Run' && crawlerState.getProperty('is_iteration_finished', '') === '0') ||
		crawlerState.getProperty('current_action', '') === 'Resume') {
			crawlerState.setProperty('next_action', 'Pause');

			var iLockStatus = crawlerState.getLockStatus();

			if (iLockStatus === 0) {
				crawlerState.apply('edit');
			}

			if (iLockStatus === 1) {
				crawlerState.apply('update');
			}
		} else {
			aras.AlertError('\'Pause\' action can be used only after \'Run\' action.');
		}
	} else {
		aras.AlertError(crawlerState.getErrorString());
	}
} else {
	aras.AlertError('A crawler should be in \'Active\' state to perform any operations.');
}
]]></method_code>
  <method_type>JavaScript</method_type>
  <name>ES_PauseCrawler</name>
 </Item>
</AML>