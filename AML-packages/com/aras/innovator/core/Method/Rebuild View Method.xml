<AML>
 <Item type="Method" id="3EFD6D3ED6D04072858F6BEC7C00280D" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[/*version:5*/
var viewNd =  this.node.selectSingleNode('self::Item[@type=\'View\']');
if (!viewNd) {
	alert(aras.getResource('', 'imports_core.item_is_not_view'));
	return false;
}
if (aras.isTempEx(viewNd)) {
	alert(aras.getResource('', 'imports_core.view_is_not_saved'));
	return false;
}

var viewID = viewNd.getAttribute('id');
var win = window;//will be used to refresh relationships grid UI
var refreshFlg = false;//indicate if refresh may success
var itemTypeId = aras.getItemProperty(viewNd, 'source_id');
var res = aras.rebuildView(viewID);
try {
	win = aras.uiFindWindowEx(itemTypeId);
	if (!win || win.closed) {
		refreshFlg = false;
		win = window;
	} else {
		refreshFlg = true;
	}
	refreshFlg = refreshFlg && (win.document.frames.relationships !== undefined);
	if (refreshFlg) {
		win = win.document.frames.relationships;
		if (win.item && win.isEditMode !== undefined) {
			if (win.isEditMode) {
				win.setEditMode(win.item);
			} else {
				win.setViewMode(win.item);
			}
		}
	}
} catch (excep) {}
if (res) {
	aras.AlertSuccess(aras.getResource('', 'imports_core.view_update_success'));
} else {
	aras.AlertError(aras.getResource('', 'imports_core.view_update_failed'));
}
return true;
]]></method_code>
  <method_type>JavaScript</method_type>
  <name>Rebuild View Method</name>
 </Item>
</AML>