<AML>
 <Item type="Method" id="714FB2F57E6B4036857EBEBA5FDD4E23" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[aras.getMostTopWindowWithAras(window)['system_ItemTypeHideTabs'] = function() {
	// Used as onload event for ItemType Form.
	// Make sure there is a relationships frame
	if (!parent.relationships) {
		setTimeout(function() {
			aras.getMostTopWindowWithAras(window)['system_ItemTypeHideTabs']();
		}, 100);
		return;
	}

	var tabsToHide = {
		'polymorphic': ['Allowed Permission', 'Allowed Workflow', 'Client Event', 'Item Action', 'Item Report',
			'RelationshipType', 'View', 'DiscussionTemplate', 'ItemType_xPropertyDefinition'],
		'federated': ['DiscussionTemplate', 'Morphae', 'ItemType_xPropertyDefinition'],
		'table': ['Morphae', 'xItemTypeAllowedProperty'] //What is table? In UI it's called "Single Item"
	};

	//disable xItemTypeAllowedProperty relationships tab for xPropertyContainerItem item type
	if (document.itemID === '2073428E99384916938E3519AF1C0A44') {
		tabsToHide.polymorphic.push('xItemTypeAllowedProperty');
	}

	function getNameToIdDictionary(tabsObj) {
		var dictionary = [];
		var keys = Object.keys(tabsObj);
		keys.forEach(function(key) {
			var tabs = tabsObj[key];
			tabs.forEach(function(el) {
				if (!dictionary[el]) {
					dictionary[el] = aras.getRelationshipTypeId(el);
				}
			});
		});

		return dictionary;
	}

	if (parent.relationships.document.readyState != 'complete' || !parent.relationships.currTabID) {
		setTimeout(function() {
			aras.getMostTopWindowWithAras(window)['system_ItemTypeHideTabs']();
		}, 100);
	} else {
		var implementationType = parent.item.selectSingleNode('implementation_type');
		var implementationTypeText = '';
		if (implementationType) {
			implementationTypeText = implementationType.text;
		}

		var relationshipTypesDictionary = getNameToIdDictionary(tabsToHide);

		parent.relationships.relTabbar.getTabOrder().split(',').forEach(function(tabId) {
			parent.relationships.relTabbar.setTabEnabled(tabId, 1);
		});

		tabsToHide[implementationTypeText].forEach(function(tabName) {
			parent.relationships.relTabbar.setTabEnabled(relationshipTypesDictionary[tabName], 0);
		});

		var tabIds = parent.relationships.relTabbar.getTabOrder('|');
		var a = tabIds.split('|');
		// Show the first tab
		parent.relationships.relTabbar.selectTab(a[0]);
	}
};

// Wait a bit before starting
setTimeout(function() {
	aras.getMostTopWindowWithAras(window)['system_ItemTypeHideTabs']();
}, 200);
]]></method_code>
  <method_type>JavaScript</method_type>
  <name>ItemType Form onload</name>
 </Item>
</AML>