<AML>
 <Item type="Method" id="DA854164964D4DD796C2C00DB1AA779F" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[function processPasswordChange(val) {
	if (document.item && this.form.password.value !== '') {
		var oldVal = aras.getItemProperty(document.item, 'confirm_password');
		if (oldVal != val) {
			aras.setItemProperty(document.item, 'confirm_password', val);
		}
		var flagNm = 'isPwdChangedByOnChangeMethod_2778060B48214BCF95163B47603AC135';
		var f = window[flagNm];
		var invalidPwdMessage = isPwdValidMessage.call(this);
		if (invalidPwdMessage && !(f && !this.form.password.value)) {
			var params = {
				buttons: {
					btnYes: aras.getResource('', 'common.ok'),
					btnCancel: aras.getResource('', 'common.cancel')
				},
				defaultButton: 'btnCancel',
				aras: aras,
				message: aras.getResource('', 'imports_core.new_pwd_cannot_be_set', invalidPwdMessage),
				dialogWidth: 300,
				dialogHeight: 200,
				center: true,
				content: 'groupChgsDialog.html'
			};

			var win = aras.getMostTopWindowWithAras(window);
			return (win.main || win).ArasModules.Dialog.show('iframe', params).promise.then(function(res) {
				if (res === 'btnYes') {
					setTimeout('var fld = document.getElementById("' + this.form.password.getAttribute('id') + '"); if (fld){fld.focus()}', 10);
				} else {
					aras.setItemProperty(document.item, 'confirm_password', 'invalid_confirm_pwd');
					window[flagNm] = true;
					setTimeout('var fld = document.getElementById("' + this.form.password.getAttribute('id') + '"); if (fld){fld.value="";}', 10);
				}
			});
		}
		if (f) {
			window[flagNm] = false;
		}
	}
}

if (aras.getVariable('fips_mode')) {
	return ArasModules.cryptohash.SHA256(this.form['confirm_password'].value).then(processPasswordChange.bind(this));
} else {
	return processPasswordChange.call(this, aras.calcMD5(this.form['confirm_password'].value));
}

function isPwdValidMessage() {
	var methNm = 'User_pwd_checkPolicy';
	var methNd = aras.getItem('Method', 'name=\'' + methNm + '\'', '<name>' + methNm + '</name>', 0);
	if (!methNd) {
		return aras.getResource('', 'imports_core.no_method_with_specified_name', methNm);
	}
	var methCode = aras.getItemProperty(methNd, 'method_code');
	var FunctionHook = Function;
	var func = new FunctionHook('plainPwd', 'variablesXML', methCode);
	return func(this.form.password.value, undefined);
}
]]></method_code>
  <method_type>JavaScript</method_type>
  <name>onChange password</name>
 </Item>
</AML>