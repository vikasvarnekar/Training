<AML>
 <Item type="Method" id="D3C830B5B98147F28CF014FFEF16D060" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[const itemId = options.itemId;
const itemTypeName = options.itemTypeName;
const item = window.getItem();
const currentPermissionId = aras.getItemProperty(item, 'permission_id');
const resultOptions = {hidden: !currentPermissionId};

if (!currentPermissionId) {
	return resultOptions;
}

// Request required permissions info only if permission id was set
const itemTypeDescriptor = aras.getItemTypeForClient(itemTypeName, 'name');
const additionalData = target.additional_data || (target.additional_data = {});
const permissionsState = additionalData.permissionsState || (additionalData.permissionsState = {
	canChangeAccess: aras.getPermissions('can_change_access', itemId, itemTypeDescriptor.getAttribute('id')),
	allowPrivatePermission: itemTypeDescriptor.getProperty('allow_private_permission') === '1'
});

Object.assign(resultOptions, {
	hidden: !permissionsState.canChangeAccess,
	disabled: !window.isEditMode || !permissionsState.allowPrivatePermission
});

if (!resultOptions.hidden && !resultOptions.disabled) {
	// If button is visible and enabled, then we additionally should check, if current perrmission is private or not
	const savedPermissionId = permissionsState.permissionItem && aras.getItemProperty(permissionsState.permissionItem, 'id');

	// Refresh permissionItem and isPrivate falg, if permission wasn't requested yet or it was changed
	if (currentPermissionId !== savedPermissionId) {
		permissionsState.permissionItem = item.selectSingleNode('permission_id/Item') || aras.getItemById('Permission', currentPermissionId);
		permissionsState.isPrivatePermission = permissionsState.permissionItem && aras.getItemProperty(permissionsState.permissionItem, 'is_private') === '1';
	}

	resultOptions.disabled = Boolean(permissionsState.isPrivatePermission);
}

return resultOptions;]]></method_code>
  <method_type>JavaScript</method_type>
  <name>cui_ivicb_perm_private_init</name>
 </Item>
</AML>