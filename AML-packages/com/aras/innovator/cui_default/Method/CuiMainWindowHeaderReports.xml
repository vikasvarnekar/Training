<AML>
 <Item type="Method" id="8051797F60FC4D4985F737348E188A9B" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[	Item menuItems = null;
	Item genericReports = this.newItem("Report", "get");
	genericReports.setAttribute("select", "name,label");
	genericReports.setProperty("type", "generic");
	genericReports = genericReports.apply();
	if (!genericReports.isError())
	{
		string reportTemplate = "report:{0}:                                ";
		menuItems = HandleMenuButtons(genericReports, reportTemplate, "cui_after_genericreports_sep", string.Empty, "generic");
	}

	if (menuItems == null)
	{
		menuItems = this.getInnovator().newResult("");
	}

	return menuItems;
}

private int _sortOrder = 0;

private Item HandleMenuButtons(Item reports, string reportTemplate, string sepId, string itemTypeId, string type)
{
	int reportsCount = reports.getItemCount();
	if (reportsCount > 0)
	{
	    // '62550515174B41DD83A4D9255E77B821' - cui_default_mwh_reports
		Item clickHandler = GetMethodByConfigId("62550515174B41DD83A4D9255E77B821");
		string clickHandlerId = clickHandler.getID();
		string clickHandlerName = clickHandler.getProperty("name");
		string separatorType = type;
		Item cuiItems = reports.newItem();
		for (var i = 0; i < reportsCount; i++)
		{
			Item currentReport = reports.getItemByIndex(i);
			Item menuButton = currentReport.newItem("CommandBarMenuButton");
			string reportId = currentReport.getID();
			string reportName = string.Format(CultureInfo.InvariantCulture, reportTemplate, reportId, itemTypeId);
			menuButton.setProperty("name", reportName);
			string label = currentReport.getProperty("label");
			menuButton.setProperty("label", label ?? currentReport.getProperty("name"));
			var reportType = type ?? currentReport.getProperty("type");

			// 'F5AE4B6003D44C5880CF6628123D48EB' - com.aras.innovator.cui_default.mwh_reports_menu
			menuButton.setProperty("parent_menu", "F5AE4B6003D44C5880CF6628123D48EB");
			menuButton.setProperty("additional_data", "{\"reportType\": \"" + reportType + "\" }");
			menuButton.setProperty("on_click_handler", clickHandlerId);
			menuButton.setPropertyAttribute("on_click_handler", "keyed_name", clickHandlerName);
			menuButton.setPropertyAttribute("on_init_handler", "type", "Method");
			menuButton.setPropertyAttribute("on_click_handler", "type", "Method");
			menuButton.setProperty("include_events", "SelectInGrid");
			menuButton.setProperty("action", "Add");
			_sortOrder += 128;
			menuButton.setProperty("sort_order", _sortOrder.ToString(CultureInfo.InvariantCulture));
			menuButton.setID(reportId);
			menuButton.removeAttribute("isNew");
			menuButton.removeAttribute("isTemp");
			cuiItems.appendItem(menuButton);
		}

		Item separator = reports.newItem("CommandBarSeparator");
		separator.setProperty("name", sepId);
		separator.setProperty("additional_data", "{\"separatorType\": \"" + separatorType + "\" }");
		_sortOrder += 128;
		separator.setProperty("sort_order", _sortOrder.ToString(CultureInfo.InvariantCulture));
		//Id is required. Id of separator should be constant. Main Menu will be refreshed at each choice of item in TOC if separator id will be random generated GUID.
		separator.setID(sepId);
		separator.setProperty("parent_menu", "F5AE4B6003D44C5880CF6628123D48EB");
		cuiItems.appendItem(separator);

		// newItem() is creates empty node. It's should be deleted
		cuiItems.removeItem(cuiItems.getItemByIndex(0));
		return cuiItems;
	}

	return null;
}

private Item GetMethodByConfigId(string configId)
{
	Item method = this.newItem("Method", "get");
	method.setAttribute("select", "id,name");
	method.setProperty("config_id", configId);
	return method.apply();]]></method_code>
  <method_type>C#</method_type>
  <name>CuiMainWindowHeaderReports</name>
 </Item>
</AML>