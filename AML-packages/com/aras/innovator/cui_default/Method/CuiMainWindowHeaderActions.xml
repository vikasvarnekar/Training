<AML>
 <Item type="Method" id="4A38EC5114CD406F8F0C42335982CDEB" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[	Item menuItems = null;
	// "764861D6946046ED9EE80A3538864E66" - id of "cui_init_mwh_action_menu_button" client method
	// "4E71F14B8E4A4171858B754CF64079C4" - id of "cui_default_mwh_actions" client method
	Item initHandler = GetMethodByConfigId("764861D6946046ED9EE80A3538864E66");
	Item clickHandler = GetMethodByConfigId("4E71F14B8E4A4171858B754CF64079C4");
	Item genericActions = this.newItem("Action", "get");
	genericActions.setAttribute("select", "name,label,can_execute,location");
	genericActions.setProperty("type", "generic");
	genericActions = genericActions.apply();
	if (!genericActions.isError())
	{
		string actionTemplate = "action:{0}:                                ";
		menuItems = HandleMenuButtons(genericActions, actionTemplate, string.Empty, "generic", initHandler, clickHandler);
	}


	return menuItems ?? this.getInnovator().newResult("");
}

private int _sortOrder = 0;

private Item HandleMenuButtons(Item actions, string actionTemplate, string itemTypeId, string type, Item initHandler, Item clickHandler)
{
	Item cuiItems = actions.newItem();
	string initHandlerId = initHandler.getID();
	string clickHandlerId = clickHandler.getID();
	string initHandlerName = initHandler.getProperty("name");
	string clickHandlerName = clickHandler.getProperty("name");
	for (var i = 0; i < actions.getItemCount(); i++)
	{
		Item currentAction = actions.getItemByIndex(i);
		Item menuButton = currentAction.newItem("CommandBarMenuButton");
		string actionId = currentAction.getID();
		string actionName = string.Format(CultureInfo.InvariantCulture, actionTemplate, actionId, itemTypeId);
		menuButton.setProperty("name", actionName);
		string label = currentAction.getProperty("label");
		menuButton.setProperty("label", label ?? currentAction.getProperty("name"));
		string actionType = type ?? currentAction.getProperty("type");
		string canExecuteMethodName = currentAction.getPropertyAttribute("can_execute", "keyed_name");
		string location = currentAction.getProperty("location");

		// 'C0038562C1194ED3A06D21DA637CEDAF' - com.aras.innovator.cui_default.mwh_actions_menu
		menuButton.setProperty("parent_menu", "C0038562C1194ED3A06D21DA637CEDAF");
		menuButton.setProperty("additional_data", "{\"actionType\": \"" + actionType + "\", \"canExecuteMethodName\": \"" + canExecuteMethodName + "\", \"location\": \"" + location + "\"}");

		menuButton.setProperty("on_init_handler", initHandlerId);
		menuButton.setPropertyAttribute("on_init_handler", "keyed_name", initHandlerName);

		
		menuButton.setProperty("on_click_handler", clickHandlerId);
		menuButton.setPropertyAttribute("on_click_handler", "keyed_name", clickHandlerName);
		menuButton.setPropertyAttribute("on_init_handler", "type", "Method");
		menuButton.setPropertyAttribute("on_click_handler", "type", "Method");
		menuButton.setProperty("include_events", "SelectInGrid");
		menuButton.setProperty("action", "Add");
		_sortOrder += 128;
		menuButton.setProperty("sort_order", _sortOrder.ToString(CultureInfo.InvariantCulture));
		menuButton.setID(actionId);
		menuButton.removeAttribute("isNew");
		menuButton.removeAttribute("isTemp");
		cuiItems.appendItem(menuButton);
	}

	// newItem() is creates empty node. It's should be deleted
	cuiItems.removeItem(cuiItems.getItemByIndex(0));
	return cuiItems;
}

private Item GetMethodByConfigId(string configId)
{
	Item method = this.newItem("Method", "get");
	method.setAttribute("select", "id,name");
	method.setProperty("config_id", configId);
	return method.apply();]]></method_code>
  <method_type>C#</method_type>
  <name>CuiMainWindowHeaderActions</name>
 </Item>
</AML>