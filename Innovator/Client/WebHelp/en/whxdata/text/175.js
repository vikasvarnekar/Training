rh._.exports({"0":["About Versions"],"1":["\n  ","\n  ","\n  ","The business rule behavior of an Item is established by the default properties of its ItemType definition and its Lifecycle State Properties stored on the Item instance.  As an Item instance moves through the States of a business Lifecycle it may undergo\n    changes (versioning) to its metadata or its Relationships.  These changes result in a re-identification of the Item over time, using revision, version, and generation properties.  Versioning behavior is controlled by the ItemType definition properties,\n    and the flags attached to the current Lifecycle State.  ","\n  ","Versioning can be initiated as either an automatic or a manual process.  When you select the automatic process, the Generation of the item increments each time the item is changed (i.e., locked, edited and unlocked).  The lifecycle for the item is automatically\n    set back to the lifecycle start state.  When you select manual versioning, the item is only incremented at the explicit request of a user.  As with automatic versioning, the Generation is incremented and the lifecycle is set back to the start state.","\n  ","Additional logic has been incorporated to control incrementing of a Major_Rev.  When the lifecycle state for an item instance is a release state, any subsequent changes to that item result in a new Major_Rev, as well as incrementing the Generation and\n    setting the lifecycle back to the start state.","\n  ","\n    ","\n      ","\n      ","\n    ","\n    ","\n      ","\n        ","\n          ","Properties","\n        ","\n        ","\n          ","Description","\n        ","\n      ","\n      ","\n        ","\n          ","Major_Rev","\n        ","\n        ","\n          ","The version field - the major increments, controlled by business rules which cause the version to be incremented when changes are made to an item is in a release date.","\n        ","\n      ","\n      ","\n        ","\n          ","Minor_Rev","\n        ","\n        ","\n          ","The revision field - the secondary increments, controlled by business rules whose behavior is definable at the application level and via tailoring.","\n        ","\n      ","\n      ","\n        ","\n          ","Generation","\n        ","\n        ","\n          ","An integer field that is a sequence  number counting the number of  changes.  Generations are automatically incremented by the Innovator code processes  and rules whenever an Item is Locked and Saved.","\n          ","\n            ","While a new Generation is created for every Item saved change, versioning occurs.","\n            ","\n        ","\n      ","\n      ","\n        ","\n          ","Number","\n        ","\n        ","\n          ","A key field (i.e.. part_number, document_number), controlled by business rules.","\n        ","\n      ","\n      ","\n        ","\n          ","ID","\n        ","\n        ","\n          ","An internal unique instance identifier (not seen by the end user)","\n        ","\n      ","\n      ","\n        ","\n          ","Lifecycle","\n        ","\n        ","\n          ","A customer-defined sequence of States and Transitions between States that are used as a primary driver of business rules.  All Items are defined to be in one State within one specified Lifecycle. The State names are not significant; flags on\n            each State's definition determine the behaviors.","\n        ","\n      ","\n      ","\n        ","\n          ","Lifecycle Start State","\n        ","\n        ","\n          ","A state within the Lifecycle that has been specifically designated as the starting point for the Lifecycle.  When a new Item is created, its state is automatically set to the start state.  When Versioning, the item will be set back to its lifecycle\n            start state whenever its version (i.e. generation) changes.","\n        ","\n      ","\n      ","\n        ","\n          ","Lifecycle Release State","\n        ","\n        ","\n          ","A state within the Lifecycle that has been specifically flagged as the release state.  There may be more than one release state in a lifecycle.  When an item in release state is versioned, its Major_Rev is incremented, it is set back to its\n            lifecycle start state, and its generation is incremented.","\n        ","\n      ","\n      ","\n        ","\n          ","Promote","\n        ","\n        ","\n          ","An action to change the State of an Item, by assigning it another State from the same Lifecycle that is connected by a Transition.","\n        ","\n      ","\n      ","\n        ","\n          ","Lock, Save, and Unlock","\n        ","\n        ","\n          ","A set of actions used to initiate and save changes to Items, which result in versioning when automatic versioning is selected.  Lock, Save, and Unlock affect the Generation and Major_Rev of an item explicitly. Minor_Rev behavior is controlled\n            by business rules which are definable at the application level via tailoring.","\n        ","\n      ","\n    ","\n  ","\n\n","\n  ","\n    "," ","\n    ","©2020 Aras Corporation - All Rights Reserved","\n  ","\n\n"],"2":["About Versions"],"id":"175"})