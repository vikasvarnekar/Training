rh._.exports({"0":["Item Behavior"],"1":["\n  ","\n","\n","Item Behavior is a property of the life cycle state that sets the behavior of the connection between the source item, or the parent, and the related item, or the child.  This property is only applicable if the source item and the related item are versionable.  Also, keep in mind that there is also an Item Behavior property defined on the RelationshipType itself (see ","RelationshipType Item Behavior","). These two properties - the Item Behavior of the RelationshipType and of the Item Behavior of the Life Cycle State - work together to control the configuration of the source and related items.","\n","The settings Hard Fixed and Hard Float mean different things for the RelationshipType behavior and the Life Cycle State behavior.  The table below explains these settings:","\n","\n","\n","\n","\n","\n"," ","\n","\n","Hard Float","\n","\n","\n","Hard Fixed","\n","\n","\n","\n","\n","RelationshipType","\n","\n","\n","Float behavior that can not be modified by the life cycle state settings","\n","\n","\n","Fixed behavior that cannot be modified by the life cycle state settings","\n","\n","\n","\n","\n","Life Cycle State","\n","\n","\n","Float behavior that is in effect until the life cycle ends, and cannot be changed by subsequent life cycle states","\n","\n","\n","Fixed behavior that is in effect until the life cycle ends, and cannot be changed by subsequent life cycle states","\n","\n","\n","\n","Furthermore, there are two categories to consider - what happens to the items if the child (or the related item) is versioned first, as opposed to the parent (or the source item) being versioned first. Let's look at the first case first.","\n","\n","Let's first consider what happens when there is no behavior set on the life cycle state:","\n","\n","\n"," ","\n","\n","Notice that with the Float RelationshipType behavior, when Child2 is created, Parent1 still points to Child1.  The reason for this is that when a new version of the Parent is created, the previous versions are then Hard Fixed in their current configuration.  So, when Parent2 is created Parent1 is pointing to Child1.  It remains in that state going forward, no matter how many times Child is versioned after that.","\n","When the Life Cycle Behavior is set to Float, it forces the even the RelationshipType defined as Fixed to act as Float.  See the figure below.","\n","\n","\n"," ","\n","\n","When the Life Cycle Behavior is set to Fixed, it forced even the RelationshipType defined as Float to act as Fixed.  See the figure below:","\n","\n","\n"," ","\n","\n","When the RelationshipType is defined as Hard Fixed or Hard Float it overrides whatever the behavior is set by the Life Cycle state.  Notice the two figures below showing that the behavior defined by the RelationshipType rules the behavior, regardless of the behavior defined by the Life Cycle state.","\n","\n","\n"," ","\n","\n","If the RelationshipType Behavior is not set to Hard, it can be overwritten by the Life Cycle State Behavior.  The figure below shows what happens when one generation of the parent is in one state, with one type of behavior, and the next state is in another life cycle state, with a different behavior.","\n","\n","\n"," ","\n","\n","So far we have been looking at all these cases with the assumption that the Parent or the source item is versioned first.  Now, we need to examine all the same cases, but with the Child or the Related item versioned first.","\n","\n","As previously, let's consider first what happens when there is no life cycle state behavior set.  Notice that even for Fixed behavior, Parent 2 is associated with Child2.  This is true because of the following rule: When a source item is versioned, it is automatically associated with the latest available version of all its children.  In this case, since Child 2 was previously created, instead of pointing to Child1, Parent 2 points to Child2.","\n","\n","\n"," ","\n","\n","The Life Cycle State behavior overrides the RelationshipType behavior.  As you can see in the diagrams below, Fixed relationship acts like Float when in Float life cycle state, and the Float relationship acts as Fixed in the Fixed life cycle state.","\n","\n","\n"," ","\n","\n","When the RelationshipType Behavior is set to Hard Fixed or Hard Float, it overrides the Life Cycle State behavior.  In the diagrams below you can see that the Hard Fixed behavior acts as Fixed, regardless of the life cycle state setting, and the Hard Float acts as Float regardless of the life cycle state setting.","\n","\n","\n"," ","\n","\n","If the RelationshipType Behavior is not set to Hard, it can be overwritten by the Life Cycle State Behavior.  The figure below shows what happens when one generation of the parent is in one state, with one type of behavior, and the next state is in another life cycle state, with a different behavior.","\n","\n","\n"," ","\n","\n","Remember that if you set the Life Cycle state behavior to Hard Fixed or Hard Float, it will override all subsequent state behavior through the end of the cycle.  This is particularly useful if you have a life cycle map with states that follow Released, such as Obsolete, or Superseded.  Most likely once an item reaches a Released state you would want to Hard Fix its behavior, so that its configuration remained the same, even if the item is promoted to Obsolete or Superseded.","\n\n\n","\n  ","\n    "," ","\n    ","©2020 Aras Corporation - All Rights Reserved","\n  ","\n\n"],"2":["Item Behavior"],"3":["Behavior When Parent (the Source Item) Is Versioned First","Behavior When Child (the Related Item) Is Versioned First"],"id":"178"})