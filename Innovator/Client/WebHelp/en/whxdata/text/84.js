rh._.exports({"0":["About RelationshipTypes"],"1":["\n  ","\n  ","\n  ","Relationships enable the binding of data between ItemTypes.  They define a source ItemType and a related ItemType. This concept can be represented like this:","\n  ","\n  ","\n    ","\n    ","\n      ","ItemType1 and ItemType2 are connected with Relationship1.  Each relationship is composed of two separate Items, the RelationshipType and the relationship ItemType.  The relationship ItemType may have other relationships to other Items or relationships.\n         This representation allows for the maximum flexibility required by complex data models.  If your process requires complex data modeling and you would like to use nested relationships, please contact your Aras Solutions Consultant for help.  For\n        the purpose of this topic, we will use a simple relationship structure of one Source item bound to one Related item.","\n      ","The source ItemType has access to all the properties of the related ItemType. So, for example, if we define a relationship type called Documents between a Part ItemType as a source, and a Document ItemType as the related ItemType, then a particular\n        Part instance would have access to all the property values of the Document instance that was related to it.","\n      ","The source ItemType can be defined to have more than one relationship.  Each defined relationship is represented with its own tab in the Item instance.  For example, the ItemType definition for Part has 9 defined Relationship Types.  See the following\n        definition, and notice that it appears under the RelationshipTypes tab of the ItemType definition.","\n      ","\n      ","\n        ","\n        ","\n          ","As a result of this ItemType definition, the Part instance form has one tab for each defined relationship.","\n          ","\n          ","\n            ","\n            ","\n              ","Once you have the source item instance open to a relationship tab, you can either pick or create (depending on the relationship definition) related items.  All of the related items will be listed in the relationship grid under the proper\n                relationship tab.  The following is an example of a relationship grid:","\n              ","\n              ","\n                ","\n                ","\n                  ","The following topics describe how to create a relationship, set its properties, and define its behavior.  Here are the steps in order:","\n                  ","\n                    ","\n                      ","Create the source ItemType and the related ItemType","\n                    ","\n                    ","\n                      ","From the source ItemType create and name the relationship.","\n                    ","\n                    ","\n                      ","Modify the RelationshipType item"," - to modify the behavior of the relationship itself","\n                    ","\n                    ","\n                      ","Modify the relationship ItemType"," - to add and edit properties to the relationship itself (like quantity, for example).","\n                    ","\n                  ","\n\n","\n  ","\n    "," ","\n    ","©2020 Aras Corporation - All Rights Reserved","\n  ","\n\n"],"2":["About Relationships"],"id":"84"})