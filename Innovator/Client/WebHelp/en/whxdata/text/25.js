rh._.exports({"0":["About Relationships"],"1":["\n  ","\n  ","\n  ","Everything in Aras Innovator is an Item.  A Relationship binds two Items - the source Item and the related Item.","\n  ","A Relationship has a source Item and an optional related Item.  When no related Item is specified, the Relationship is known as a Null Relationship.","\n  ","Relationship Items contain the following standard properties:","\n  ","\n    ","the source (parent) Item for the relationship","\n    ","\n      ","\n        ","the related (child) Item for the relationship","\n        ","\n          ","Example:  Let us consider Door Item.  The Door may require other Items such as Rivets.  Depending on the type of door, the number of Rivets required for each Door would vary.  A big Door may require 432 Rivets, while another small Door may require\n            382 Rivets.  ","\n          ","\n          ","\n            ","\n            ","\n              ","When you bind a Door Item and a Rivet Item, the relationship Item stores information (such as quantity) about the connection between the two Items.","\n              ","When two Item instances are related in the database, a Relationship Item instance is also created that can hold distinct property values for that specific relationship.","\n              ","Related Topics:","\n              ","\n                ","Parent-Child Relationship","\n                ","\n                  ","\n                    ","Creating Relationship","\n                    ","\n                      ","\n                        ","Relationship Toolbar","\n                        ","\n                          ","\n                            ","Context Menu (Related Item)","\n                            ","\n                              ","\n                                ","Copying and Pasting Item","\n                                ","\n                                  ","Innovator has three typical RelationshipType patterns, but there are others, like relationships relating to other relationships. The following diagrams show typical relationship patterns:","\n                                  ","Direct Relationship Type","\n                                  ","Figure 1 shows the most common type of Relationship, where the source/parent Item (Part) has a Relationship (Part Document) to a separate related/child Item (Document). A Direct RelationshipType is the most commonly used\n                                    pattern and is best described as having a Source ItemType and a Related ItemType. .","\n                                  ","\n                                  ","Figure 1","\n                                  ","Circular Relationship Type","\n                                  ","A Circular RelationshipType simply references itself, such as a standard Innovator Part ItemType. Figure 2 shows a circular relationship, where the source/parent Item (Part) has a relationship (Part BOM) to a related/child\n                                    Item of the same Item type as source/parent.","\n                                  ","Viewing the Part BOM RelationshipType reveals the Source and Related ItemTypes are both a Part ItemType. In a Bill of Material (BOM) hierarchy Parts are connected to other Parts through the Part BOM RelationshipType.","\n                                  ","\n                                  ","\n                                    ","\n                                      ","Figure 2","\n                                    ","\n                                  ","\n                                  ","Null Relationship Type","\n                                  ","Figure 3 shows a 'null' relationship, where there is no related item. This pattern is useful when there is a need to track Items (Values, Comments, etc.) that pertain only to the source Item and would not be reused.","\n                                  ","\n                                  ","\n                                    ","\n                                      ","Figure 3","\n                                    ","\n                                  ","\n                                  ","Null relationships normally have visible properties only since they reference no related ItemType.","\n                                  ","NULL relationships are useful when you need to provide the ability for a user to add more than one piece of the same information to an Item, but do not need or don’t have another ItemType to make a connection. In the\n                                    example above, a NULL relationship is used to define the ability for a User to add multiple remarks to an Item. A 'remarks' String property can be assigned to the Relationship Item. Each time a User defines\n                                    a new remark an additional Relationship Item is created. No additional related item is necessary.","\n\n","\n  ","\n    "," ","\n    ","©2020 Aras Corporation - All Rights Reserved","\n  ","\n\n"],"2":["About Relationships"],"id":"25"})