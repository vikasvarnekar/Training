<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" language="JavaScript">
  //<![CDATA[
  function reDo() {
    if (innerWidth != origWidth || innerHeight != origHeight)
      location.reload();
  }
  if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
    origWidth = innerWidth;
    origHeight = innerHeight;
    onresize = reDo;
  }
  onerror = null;
  //]]>
</script>
<style type="text/css">/*<![CDATA[*/

  <!-- div.WebHelpPopupMenu {
    position: absolute;
    left: 0px;
    top: 0px;
    z-index: 4;
    visibility: hidden;
  }

  p.WebHelpNavBar {
    text-align: right;
  }

  -->

/*]]>*/</style>

<script type="text/javascript">//<![CDATA[

  gRootRelPath = ".";
  gCommonRootRelPath = ".";
  gTopicId = "3.6.0_6";

//]]></script>

<script type="text/javascript" src="./template/scripts/rh.min.js"></script>
<script type="text/javascript" src="./template/scripts/common.min.js"></script>
<script type="text/javascript" src="./template/scripts/topic.min.js"></script>
<script type="text/javascript" src="./template/scripts/topicwidgets.min.js"></script>
<link rel="stylesheet" type="text/css" href="./template/styles/topic.min.css"/>
<link rel="stylesheet" type="text/css" href="assets/css/JAI_styles.css"/>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <title>Relationships vs. Properties</title>
  
</head>
<body>
  <div>
  <h1>Relationships vs. Properties</h1>
  <p class="Content_body">As in all cases of data modeling, there are many ways to do the same thing, some may be more efficient than others, and some more flexible.  Say, for example, that you wanted to have access to a property of Item2 when working with Item1.  One way of
    accomplishing this task could be to create a relationship between the ItemType1 and ItemType 2 and then have access to all necessary properties.  Another method of doing this would be to create a Foreign Property in the ItemType1 definition, referring
    to the necessary property of Item2.  (<a href="Foreign_Property.htm">See Foreign Data Type</a>) Here are some advantages and disadvantages of creating a Relationship vs. using a Foreign Property:</p>
  <?rh-list_start class="Bullet_list" level="1" style="list-style: rh-list; 
                                 list-style: rh-list;" ?>
    <p class="Bulleted_list" style="margin-left: 50px;">Relationship gives greater flexibility, allows access to more than just one property value</p>
    <?rh-list_end ?>
      <?rh-list_start class="Bullet_list" level="1" style="list-style: rh-list; 
                                 list-style: rh-list;" ?>
        <p class="Bulleted_list" style="margin-left: 50px;">Relationship gives ability for one instance of Item1 to refer to several instances of Item2</p>
        <?rh-list_end ?>
          <?rh-list_start class="Bullet_list" level="1" style="list-style: rh-list; 
                                 list-style: rh-list;" ?>
            <p class="Bulleted_list" style="margin-left: 50px;">Foreign Property is more efficient than a relationship, does not need two additional tables in the database</p>
            <?rh-list_end ?>

</div>
  <div>
    <p class="Bulleted_list" style="font-size: 8pt; font-weight: bold; 
		 margin-left: 0px; text-indent: 0px;"> </p>
    <p class="Bulleted_list" style="font-size: 8pt; font-weight: bold; 
		 margin-left: 0px; text-indent: 0px;">©2020 Aras Corporation - All Rights Reserved</p>
  </div>

</body></html>