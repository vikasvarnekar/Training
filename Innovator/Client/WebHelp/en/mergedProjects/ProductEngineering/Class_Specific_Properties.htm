<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" language="JavaScript">
  //<![CDATA[
  function reDo() {
    if (innerWidth != origWidth || innerHeight != origHeight)
      location.reload();
  }
  if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
    origWidth = innerWidth;
    origHeight = innerHeight;
    onresize = reDo;
  }
  onerror = null;
  //]]>
</script>
<style type="text/css">/*<![CDATA[*/

  <!-- div.WebHelpPopupMenu {
    position: absolute;
    left: 0px;
    top: 0px;
    z-index: 4;
    visibility: hidden;
  }

  p.WebHelpNavBar {
    text-align: right;
  }

  -->

/*]]>*/</style>

<script type="text/javascript">//<![CDATA[

  gRootRelPath = ".";
  gCommonRootRelPath = ".";
  gTopicId = "1.0_7";

//]]></script>

<script type="text/javascript" src="./template/scripts/rh.min.js"></script>
<script type="text/javascript" src="./template/scripts/common.min.js"></script>
<script type="text/javascript" src="./template/scripts/topic.min.js"></script>
<script type="text/javascript" src="./template/scripts/topicwidgets.min.js"></script>
<link rel="stylesheet" type="text/css" href="./template/styles/topic.min.css"/>
<link rel="stylesheet" type="text/css" href="assets/css/default.css"/>
  <meta name="template" content="assets/masterpages/JAI_masterpage.htt"/>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta name="topic-check-list" content="Ran Smart Index"/>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <title>Class Specific Properties</title>
  
</head>
<body>
  <div>
  <h1>Classification Specific Properties</h1>
  <p>Both Part and Document types have initial classification structures. In this application, the normal Aras Innovator classification display has been altered.  Normally, a Parameters tab displays all the class-specific properties in an Item’s form.  The Parameter tab has been disabled.  Instead, these class-specific properties are dynamically displayed on the Item form.</p>
  <p>Parts class structure can be changed and  expanded to reflect customer needs. Currently, the class Part has four subclasses - Component, Assembly, Material, and Software. You can add subclasses, change them, add a new level of subclasses, and more importantly, add class specific properties that would apply only to the specified class; including a lifecycle.  Here are a few examples.</p>
  <p>Let&#39;s say that for parts classified as software, you want to add a property called Build Number. Here is what you would do.</p>
  <h2><a id="ClassSpecificProperty" name="ClassSpecificProperty"></a>Adding a class specific property</h2>
  <ol>
    <li>Click the Nav button <img src="assets/images/nav.jpg" style="width: 100%; max-width: 38px;"/>. The TOC appears.</li>
    <br/>
    <li>Click <strong>Administration&gt;ItemTypes</strong>. The following menu appears:</li>
  </ol>
  <p class="Figure_indented"><img src="assets/images/itemenu.jpg" style="width: 100%; max-width: 212px;"/></p>
  <ol start="3">
    <li>Click <strong>Search ItemTypes</strong>,<strong> </strong>search for a <span class="MenuChoice">Part</span>, and open the <span class="MenuChoice">Part</span> for editing.</li>
    <br/>
    <li>Add a new property, name it <strong><span class="MenuChoice">Build Number</span></strong>.</li>
  </ol>
  <p class="Figure_indented"><img src="assets/images/buildfield.jpg" style="width: 100%; max-width: 436px;"/></p>
  <ol start="5"><br/>
    <li>Click on the <strong><span class="MenuChoice">Class Path</span></strong> cell of the new property to open the class path form. Select <strong><span class="MenuChoice">Software </span></strong><span class="MenuChoice">and click the green arrow <img src="assets/images/greenarrow.jpg" style="width: 100%; max-width: 17px;"/>.</span></li>
    <br/>
    <li>Double-click the Data Type field and click the down arrow to specify the Data Type for the property.</li>
    <br/>
    <li>Save the Part.</li>
    <br/>
    <li>In the <span class="MenuChoice">TOC</span>, select <strong><span class="MenuChoice">Administration</span>&gt;<span class="MenuChoice">Forms</span></strong>, search for the <span class="MenuChoice">Part Form</span>, and open the Part form for editing.</li>
    <br/>
    <li>Click on the <strong>New Text</strong> icon <img src="assets/images/newtexticon.jpg" style="width: 100%; max-width: 27px;"/> from the toolbar. A new text field is added to the <strong>Part Fields</strong> list.
      <p class="Figure_indented"><img src="assets/images/partform1.jpg" style="width: 100%; max-width: 821px;"/></p>
    </li>
    <br/>
    <li><span class="MenuChoice">Enter <strong>Build Number</strong> as the Part Field Name and the Label name in the Field Label tab</span>.</li>
    <br/>
    <li>Place the new field on the form.</li>
    <br/>
    <li>Select the <span class="MenuChoice">Field Physical</span> tab. Uncheck the <span class="MenuChoice">Visible</span> check box. This property will automatically become visible when a Part classified as Software is created, but will remain invisible for all others.</li>
    <br/>
    <li>Save and unlock the form<span class="MenuChoice">.</span></li>
  </ol>
  <p>You might want to edit the class structure first, or perhaps add new classes, and then add properties to the newly defined classes.</p>
  <h2>Adding a new class to the class path</h2>
  <ol class="Decimal">
    <li style="counter-reset: item1 0;">Click <strong>Administration&gt;ItemTypes</strong>, search for <span class="MenuChoice">Part</span>, and click <img src="assets/images/edit.jpg" style="width: 100%; max-width: 59px;"/> to open it.</li>
    <br/>
    <li>Click the <img src="assets/images/classtructure.jpg" style="width: 100%; max-width: 101px;"/> button. The class structure form appears.</li>
    <br/>
    <li>Right click any node to add subordinates.</li>
    <br/>
    <li>Once done, save the class structure, and save the <span class="MenuChoice">Part</span> ItemType before adding properties.</li>
    <br/>
    <li>To add class specific properties for newly created classes, see <a href="#ClassSpecificProperty">above</a>.</li>
  </ol>
  <p>If you add a subordinate class, you may also wish to add a class specific border to the form to identify to the user which class is responsible for the additional properties. For example, if the Ra<span class="MenuChoice">w class had two class-specific properties named &quot;Length&quot; and &quot;Raw&quot; your class structure would look like this:</span></p>
  <p class="Figure_indented"><img src="assets/images/partclassstruc.jpg" style="width: 100%; max-width: 599px;"/></p>
  <p>Now, you could make your form look like this:</p>
  <p class="Figure_indented"><img src="assets/images/1xalum.jpg" style="cursor: nesw-resize; width: 100%; max-width: 844px;"/></p>
  <h2>Adding a class specific border to a form</h2>
  <ol class="Decimal">
    <li style="counter-reset: item1 0;">Select <strong>Administration&gt;Forms </strong>from the <span class="MenuChoice">TOC</span>.The Form menu appears:
      <p class="Figure_indented"><img src="assets/images/formenu.jpg" style="width: 100%; max-width: 209px;"/></p>
    </li>
    <li style="">Click <strong>Search Forms</strong>. A list of existing forms appears in the grid.</li>
    <br/>
    <li style="">Search for the Part form and open it for editing.</li>
    <br/>
    <li>Search for parent class border, in our case, <strong>material_border</strong>.</li>
    <br/>
    <li>Go to the <strong><span class="MenuChoice">Field Physical</span></strong> tab, and check the <strong><span class="MenuChoice">Visible</span> </strong>box. The border should appear on the form. We will come back later and turn it off, but for now it&#39;s easier to position the subclass border if we can see the parent border.</li>
    <br/>
    <li>Go to the <strong><span class="MenuChoice">Field Type</span></strong> tab and copy the HTML code of the material border.</li>
    <br/>
    <li>Click on the <span class="MenuChoice">New HTML</span> <img src="assets/images/newhtml.jpg" style="width: 100%; max-width: 32px;"/> button to create a new HTML field.</li>
    <br/>
    <li>Under the <span class="MenuChoice">Field Type</span> tab, paste the copied HTML code from material_border.</li>
    <br/>
    <li>Name the field classname_border, which in our case would be raw_border.</li>
    <br/>
    <li>Position the border where desired on the form.</li>
    <br/>
    <li>Edit the HTML code to give it a different label if desired, and different height, if desired. In the example above, the final HTML code looked like this:</li>
  </ol>
  <p class="Content_body_indented"><img alt="" border="1" src="assets/images/images/RawBorderCode.jpg" style="border-style: solid; border-width: 1px; margin: 2px 0px; width: 100%; max-width: 430px;"/></p>
  <p class="Figure_indented"> </p>
  <ol class="Numbered" start="12">
    <li>Under <strong><span class="MenuChoice">Field Label</span></strong>, make sure that no label is set.</li>
    <br/>
    <li>Once the border looks good, go to <span class="MenuChoice">Field Physical</span> and uncheck the <strong><span class="MenuChoice">Visible</span> </strong>box.</li>
    <br/>
    <li>Remember to uncheck the <span class="MenuChoice">Visible</span> box in the parent class border.</li>
    <br/>
    <li><span class="MenuChoice"><strong>Save</strong>, <strong>Unclaim </strong>and <strong>Close</strong></span><strong> </strong>the form.</li>
  </ol>

</div>
  <div>
    <p class="Bulleted_list"> </p>
    <p class="Bulleted_list" style="font-size: 8pt; font-weight: bold;">©2020 Aras Corporation - All Rights Reserved</p>
  </div>

</body></html>