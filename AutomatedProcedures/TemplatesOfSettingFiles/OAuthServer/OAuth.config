<?xml version="1.0" encoding="utf-8"?>
<oauth>
	<server>
		<clientRegistries>
			<clientRegistry id="OAuthServer" enabled="true">
				<secrets>
					<secret type="JwtBearerAssertionServerSecret">
						<certificate filePath="App_Data/Certificates/OAuthServer.cer"></certificate>
					</secret>
				</secrets>
				<allowedScopes>
					<scope name="Innovator"></scope>
				</allowedScopes>
				<allowedGrantTypes>
					<grantType name="impersonate"></grantType>
				</allowedGrantTypes>
				<tokenLifetime accessTokenLifetime="3600"></tokenLifetime>
			</clientRegistry>
			<clientRegistry id="InnovatorServer" enabled="true">
				<secrets>
					<secret type="JwtBearerAssertionServerSecret">
						<certificate filePath="App_Data/Certificates/InnovatorServer.cer"></certificate>
					</secret>
				</secrets>
				<allowedScopes>
					<scope name="Innovator"></scope>
				</allowedScopes>
				<allowedGrantTypes>
					<grantType name="impersonate"></grantType>
				</allowedGrantTypes>
				<tokenLifetime accessTokenLifetime="3600"></tokenLifetime>
			</clientRegistry>
			<clientRegistry id="VaultServer" enabled="true">
				<secrets>
					<secret type="JwtBearerAssertionServerSecret">
						<certificate filePath="App_Data/Certificates/VaultServer.cer"></certificate>
					</secret>
				</secrets>
				<allowedScopes>
					<scope name="Innovator"></scope>
				</allowedScopes>
				<allowedGrantTypes>
					<grantType name="impersonate"></grantType>
				</allowedGrantTypes>
				<tokenLifetime accessTokenLifetime="3600"></tokenLifetime>
			</clientRegistry>
			<clientRegistry id="ConversionServer" enabled="true">
				<secrets>
					<secret type="JwtBearerAssertionServerSecret">
						<certificate filePath="App_Data/Certificates/ConversionServer.cer"></certificate>
					</secret>
				</secrets>
				<allowedScopes>
					<scope name="Innovator"></scope>
				</allowedScopes>
				<allowedGrantTypes>
					<grantType name="impersonate"></grantType>
				</allowedGrantTypes>
				<tokenLifetime accessTokenLifetime="3600"></tokenLifetime>
			</clientRegistry>
			<clientRegistry id="AgentService" enabled="true">
				<secrets>
					<secret type="JwtBearerAssertionServerSecret">
						<certificate filePath="App_Data/Certificates/AgentService.cer"></certificate>
					</secret>
				</secrets>
				<allowedScopes>
					<scope name="Innovator"></scope>
				</allowedScopes>
				<allowedGrantTypes>
					<grantType name="impersonate"></grantType>
				</allowedGrantTypes>
				<tokenLifetime accessTokenLifetime="3600"></tokenLifetime>
			</clientRegistry>
			<clientRegistry id="SelfServiceReporting" enabled="true">
				<secrets>
					<secret type="JwtBearerAssertionServerSecret">
						<certificate filePath="App_Data/Certificates/SelfServiceReporting.cer"></certificate>
					</secret>
				</secrets>
				<allowedScopes>
					<scope name="Innovator"></scope>
				</allowedScopes>
				<allowedGrantTypes>
					<grantType name="impersonate"></grantType>
				</allowedGrantTypes>
				<tokenLifetime accessTokenLifetime="3600"></tokenLifetime>
			</clientRegistry>
			<clientRegistry id="InnovatorClient" enabled="true">
				<allowedScopes>
					<scope name="openid"></scope>
					<scope name="Innovator"></scope>
					<scope name="offline_access"></scope>
				</allowedScopes>
				<allowedGrantTypes>
					<grantType name="authorization_code"></grantType>
					<grantType name="password"></grantType>
				</allowedGrantTypes>
				<redirectUris/>
				<postLogoutRedirectUris/>
				<tokenLifetime accessTokenLifetime="3600" identityTokenLifetime="300" refreshTokenSlidingLifetime="36000" refreshTokenOneTimeOnly="true" refreshTokenAbsoluteExpiration="false"></tokenLifetime>
				<!-- The Origin header field has the following syntax:
					scheme "://" host [ ":" port ]
					The Web Origin Concept (RFC 6454)
					https://tools.ietf.org/html/rfc6454#section-7.1 -->
				<allowedCorsOrigins>
					<!--
					<origin value="http://localhost" />
					<origin value="http://domain.com" />
					<origin value="http://domain.com:8080" />
					<origin value="https://domain.com" />
					-->
				</allowedCorsOrigins>
			</clientRegistry>
			<clientRegistry id="IOMApp" enabled="true">
				<allowedScopes>
					<scope name="openid"></scope>
					<scope name="Innovator"></scope>
					<scope name="offline_access"></scope>
				</allowedScopes>
				<allowedGrantTypes>
					<grantType name="password"></grantType>
					<grantType name="authorization_code"></grantType>
				</allowedGrantTypes>
				<redirectUris>
					<redirectUri value="iomapp://token/"></redirectUri>
				</redirectUris>
				<tokenLifetime accessTokenLifetime="3600" authorizationCodeLifetime="300" refreshTokenSlidingLifetime="36000" refreshTokenOneTimeOnly="true" refreshTokenAbsoluteExpiration="false"></tokenLifetime>
			</clientRegistry>
		</clientRegistries>
		<scopes>
			<scope name="Innovator"></scope>
			<scope name="offline_access"></scope>
		</scopes>
		<authenticationCookie cookieName="Aras.OAuth" cookieLifetime="36000" cookieAbsoluteExpiration="false"></authenticationCookie>
		<tokenSigning>
			<certificate filePath="App_Data/Certificates/OAuthServer.pfx" password="innovator"></certificate>
		</tokenSigning>
	</server>
	<client id="OAuthServer">
		<secret type="JwtBearerAssertionClientSecret">
			<certificate filePath="App_Data/Certificates/OAuthServer.pfx" password="innovator"></certificate>
			<tokenLifetime assertionTokenLifetime="300"></tokenLifetime>
		</secret>
	</client>
</oauth>
